Schema.addCategory({
    name: 'basic',
    text: '基础图形',
    dataAttributes: [
      { name: '序号', type: 'number', value: '', category: 'default' },
      { name: '名称', type: 'string', value: '', category: 'default' },
      { name: '所有者', type: 'string', value: '', category: 'default' },
      { name: '连接', type: 'link', value: '', category: 'default' },
      { name: '便笺', type: 'string', value: '', category: 'default' },
    ],
  })
  Schema.addShape({
    name: 'text',
    title: '文本',
    category: 'basic',
    props: { w: 120, h: 40 },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' }, text: '文本' }],
    path: [
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var a = 0
      var e = -10
      var d = 5
      c = c + 20
      b = b - 10
      return [
        {
          lineStyle: { lineWidth: 2 },
          fillStyle: { type: 'solid', color: '50, 50, 50' },
          actions: [
            { action: 'move', x: d + a, y: e },
            { action: 'line', x: d + b, y: e },
            { action: 'line', x: d + b, y: e + c * 0.2 },
            { action: 'line', x: d + b * 0.9, y: e + c * 0.12 },
            { action: 'line', x: d + b * 0.55, y: e + c * 0.12 },
            { action: 'line', x: d + b * 0.55, y: e + c * 0.85 },
            { action: 'line', x: d + b * 0.63, y: e + c },
            { action: 'line', x: d + b * 0.37, y: e + c },
            { action: 'line', x: d + b * 0.45, y: e + c * 0.85 },
            { action: 'line', x: d + b * 0.45, y: e + c * 0.12 },
            { action: 'line', x: d + b * 0.1, y: e + c * 0.12 },
            { action: 'line', x: d, y: e + c * 0.2 },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'note',
    title: '备注',
    category: 'basic',
    props: { w: 80, h: 100 },
    textBlock: [{ position: { x: 10, y: 10, w: 'w-20', h: 'h-20' } }],
    fillStyle: { color: '255, 255, 170' },
    lineStyle: { lineWidth: 0 },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w-16', y: '0' },
          { action: 'line', x: 'w', y: '16' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: '0' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'solid', color: 'r-50,g-50,b-50' },
        actions: [
          { action: 'move', x: 'w-16', y: '0' },
          { action: 'line', x: 'w-16', y: '16' },
          { action: 'line', x: 'w', y: '16' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w-16', y: '0' },
          { action: 'line', x: 'w', y: '16' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: '0' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a * 0.6, y: 0 },
            { action: 'line', x: a, y: b * 0.24 },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'line', x: 0, y: 0 },
            { action: 'close' },
          ],
        },
        {
          lineStyle: { lineWidth: 0 },
          fillStyle: { type: 'solid', color: '205, 205, 120' },
          actions: [
            { action: 'move', x: a * 0.6, y: 0 },
            { action: 'line', x: a * 0.6, y: b * 0.24 },
            { action: 'line', x: a * 0.93, y: b * 0.24 },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'linker_shape_solid',
    title: '直线',
    category: 'basic',
    attribute: { linkable: false },
    props: { w: 100, h: 100 },
    textBlock: [],
    fillStyle: { color: '0, 0, 0' },
    lineStyle: { lineWidth: 2 },
    path: [
      {
        actions: [
          { action: 'move', x: '4', y: 'h-4' },
          { action: 'line', x: 'w-6', y: '6' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: 'w-4', y: '4' },
          { action: 'line', x: 'w-20', y: '12' },
          { action: 'line', x: 'w-12', y: '20' },
          { action: 'close' },
        ],
      },
    ],
    element: {
      name: 'linker',
      boxPos: { x: 0, y: 0, w: 160, h: 0 },
      props: { x: 0, y: 0, w: 160, h: 0 },
      dataAttributes: [],
      from: { x: 0, y: 0 },
      to: { x: 160, y: 0 },
      group: '',
      id: '',
      lineStyle: {},
      linkerType: 'broken',
      locked: false,
      points: [
        { x: 80, y: 0 },
        { x: 80, y: 0 },
      ],
      text: '',
    },
  })
  Schema.addShape({
    name: 'image',
    title: 'Image',
    attribute: { linkable: false, visible: false },
    category: 'basic',
    textBlock: [],
    props: { w: 98, h: 72 },
    path: [{ actions: { ref: 'rectangle' } }],
  })
  Schema.addShape({
    name: 'round',
    title: '圆形',
    category: 'basic',
    props: { w: 70, h: 70 },
    path: [{ actions: { ref: 'round' } }],
  })
  Schema.addShape({
    name: 'rectangle',
    title: '矩形',
    category: 'basic',
    props: { w: 100, h: 70 },
    path: [{ actions: { ref: 'rectangle' } }],
  })
  Schema.addShape({
    name: 'roundRectangle',
    title: '圆角矩形',
    category: 'basic',
    props: { w: 100, h: 70 },
    path: [{ actions: { ref: 'roundRectangle' } }],
  })
  Schema.addShape({
    name: 'triangle',
    title: '三角形',
    category: 'basic',
    props: { w: 80, h: 70 },
    textBlock: [{ position: { x: '10', y: 'h*0.25', w: 'w-20', h: 'h*0.75' } }],
    anchors: [
      { x: 'w/2', y: '0' },
      { x: 'w/2', y: 'h' },
      { x: 'w*0.25', y: 'h/2' },
      { x: 'w*0.75', y: 'h/2' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: 'w/2', y: '0' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'diamond',
    title: '菱形',
    category: 'basic',
    props: { w: 120, h: 80 },
    textBlock: [{ position: { x: '10', y: 'h*0.13', w: 'w-20', h: 'h*0.75' } }],
    anchors: [
      { x: '0', y: 'h/2' },
      { x: 'w/2', y: '0' },
      { x: 'w', y: 'h/2' },
      { x: 'w/2', y: 'h' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h/2' },
          { action: 'line', x: 'w/2', y: '0' },
          { action: 'line', x: 'w', y: 'h/2' },
          { action: 'line', x: 'w/2', y: 'h' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'polygon',
    title: '五边形',
    category: 'basic',
    props: { w: 74, h: 70 },
    textBlock: [{ position: { x: '10', y: 'h*0.15', w: 'w-20', h: 'h*0.85' } }],
    anchors: [
      { x: 'w/2', y: '0' },
      { x: 'w/2', y: 'h' },
      { x: '0', y: 'h*0.39' },
      { x: 'w', y: 'h*0.39' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: 'w/2', y: '0' },
          { action: 'line', x: '0', y: 'h*0.39' },
          { action: 'line', x: 'w*0.18', y: 'h' },
          { action: 'line', x: 'w*0.82', y: 'h' },
          { action: 'line', x: 'w', y: 'h*0.39' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'hexagon',
    title: '六边形',
    category: 'basic',
    props: { w: 84, h: 70 },
    path: [
      {
        actions: [
          { action: 'move', x: 'Math.min(w,h)*0.21', y: '0' },
          { action: 'line', x: 'w-Math.min(w,h)*0.21', y: '0' },
          { action: 'line', x: 'w', y: 'h * 0.5' },
          { action: 'line', x: 'w-Math.min(w,h)*0.21', y: 'h' },
          { action: 'line', x: 'Math.min(w,h)*0.21', y: 'h' },
          { action: 'line', x: '0', y: 'h * 0.5' },
          { action: 'line', x: 'Math.min(w,h)*0.21', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'octagon',
    title: '八边形',
    category: 'basic',
    props: { w: 70, h: 70 },
    textBlock: [{ position: { x: '10', y: '10', w: 'w-20', h: 'h-20' } }],
    path: [
      {
        actions: [
          { action: 'move', x: 'Math.min(w,h)*0.29', y: '0' },
          { action: 'line', x: 'w-Math.min(w,h)*0.29', y: '0' },
          { action: 'line', x: 'w', y: 'h*0.29' },
          { action: 'line', x: 'w', y: 'h*0.71' },
          { action: 'line', x: 'w-Math.min(w,h)*0.29', y: 'h' },
          { action: 'line', x: 'Math.min(w,h)*0.29', y: 'h' },
          { action: 'line', x: '0', y: 'h*0.71' },
          { action: 'line', x: '0', y: 'h*0.29' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'pentagon',
    title: '五角星',
    category: 'basic',
    props: { w: 70, h: 70 },
    textBlock: [
      { position: { x: 'w*0.15', y: 'h*0.20', w: 'w*0.70', h: 'h*0.65' } },
    ],
    anchors: [
      { x: 'w*0.5', y: '0' },
      { x: '0', y: 'h*0.38' },
      { x: 'w*0.5', y: 'h*0.76' },
      { x: 'w', y: 'h*0.38' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: 'w*0.62', y: 'h*0.38' },
          { action: 'line', x: 'w*0.5', y: '0' },
          { action: 'line', x: 'w*0.38', y: 'h*0.38' },
          { action: 'line', x: '0', y: 'h*0.38' },
          { action: 'line', x: 'w*0.3', y: 'h*0.62' },
          { action: 'line', x: 'w*0.18', y: 'h' },
          { action: 'line', x: 'w*0.5', y: 'h*0.76' },
          { action: 'line', x: 'w*0.82', y: 'h' },
          { action: 'line', x: 'w*0.7', y: 'h*0.62' },
          { action: 'line', x: 'w', y: 'h*0.38' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'sector',
    title: '',
    category: 'basic',
    props: { w: 80, h: 80 },
    anchors: [
      { x: '0', y: '0.134*h' },
      { x: 'w/2', y: '0' },
      { x: 'w', y: '0.134*h' },
      { x: 'w/2', y: 'h' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: 'w/2', y: 'h' },
          { action: 'line', x: '0', y: '0.134*h' },
          {
            action: 'quadraticCurve',
            x1: 'w/2',
            y1: '-0.134*h',
            x: 'w',
            y: 'h*0.134',
          },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'sector2',
    title: '',
    category: 'basic',
    props: { w: 80, h: 45 },
    anchors: [
      { x: '0', y: '0.238*h' },
      { x: 'w/2', y: '0' },
      { x: 'w', y: '0.238*h' },
      { x: 'w/2', y: 'h' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: 'w*0.25', y: 'h' },
          { action: 'line', x: '0', y: '0.238*h' },
          {
            action: 'quadraticCurve',
            x1: 'w/2',
            y1: '-0.238*h',
            x: 'w',
            y: 'h*0.238',
          },
          { action: 'line', x: 'w*0.75', y: 'h' },
          {
            action: 'quadraticCurve',
            x1: 'w/2',
            y1: '0.8*h',
            x: 'w*0.25',
            y: 'h',
          },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'cross',
    title: '十字形',
    category: 'basic',
    props: { w: 70, h: 70 },
    textBlock: [
      {
        position: {
          x: '0',
          y: 'h*0.5-Math.min(w,h)/8',
          w: 'w',
          h: 'Math.min(w,h)*2/8',
        },
      },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: 'w*0.5-Math.min(w,h)/8', y: '0' },
          { action: 'line', x: 'w*0.5+Math.min(w,h)/8', y: '0' },
          {
            action: 'line',
            x: 'w*0.5+Math.min(w,h)/8',
            y: 'h*0.5-Math.min(w,h)/8',
          },
          { action: 'line', x: 'w', y: 'h*0.5-Math.min(w,h)/8' },
          { action: 'line', x: 'w', y: 'h*0.5+Math.min(w,h)/8' },
          {
            action: 'line',
            x: 'w*0.5+Math.min(w,h)/8',
            y: 'h*0.5+Math.min(w,h)/8',
          },
          { action: 'line', x: 'w*0.5+Math.min(w,h)/8', y: 'h' },
          { action: 'line', x: 'w*0.5-Math.min(w,h)/8', y: 'h' },
          {
            action: 'line',
            x: 'w*0.5-Math.min(w,h)/8',
            y: 'h*0.5+Math.min(w,h)/8',
          },
          { action: 'line', x: '0', y: 'h*0.5+Math.min(w,h)/8' },
          { action: 'line', x: '0', y: 'h*0.5-Math.min(w,h)/8' },
          {
            action: 'line',
            x: 'w*0.5-Math.min(w,h)/8',
            y: 'h*0.5-Math.min(w,h)/8',
          },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'cloud',
    title: '云',
    category: 'basic',
    props: { w: 90, h: 70 },
    textBlock: [{ position: { x: 10, y: 10, w: 'w-20', h: 'h-20' } }],
    anchors: [
      { x: '0', y: 'h*0.5' },
      { x: 'w*0.19', y: 'h*0.9' },
      { x: 'w*0.57', y: 'h' },
      { x: 'w*0.962', y: 'h*0.8' },
      { x: 'w*0.9543', y: 'h*0.23' },
      { x: 'w*0.6', y: 'h*0.01' },
      { x: 'w*0.17', y: 'h*0.09' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '0.12*w', y: '0.7*h' },
          {
            action: 'curve',
            x1: '-0.1*w',
            y1: '0.5*h',
            x2: '0.04*w',
            y2: '0.35*h',
            x: '0.09*w',
            y: '0.3*h',
          },
          {
            action: 'curve',
            x1: '0.07*w',
            y1: '0.05*h',
            x2: '0.32*w',
            y2: '0.0*h',
            x: '0.42*w',
            y: '0.1*h',
          },
          {
            action: 'curve',
            x1: '0.50*w',
            y1: '-0.05*h',
            x2: '0.75*w',
            y2: '0.0*h',
            x: '0.75*w',
            y: '0.15*h',
          },
          {
            action: 'curve',
            x1: '0.95*w',
            y1: '0.1*h',
            x2: '1.03*w',
            y2: '0.3*h',
            x: '0.95*w',
            y: '0.55*h',
          },
          {
            action: 'curve',
            x1: '1.02*w',
            y1: '0.75*h',
            x2: '0.95*w',
            y2: '1.0*h',
            x: '0.72*w',
            y: '0.9*h',
          },
          {
            action: 'curve',
            x1: '0.67*w',
            y1: '1.03*h',
            x2: '0.47*w',
            y2: '1.03*h',
            x: '0.42*w',
            y: '0.9*h',
          },
          {
            action: 'curve',
            x1: '0.32*w',
            y1: '1.0*h',
            x2: '0.12*w',
            y2: '0.95*h',
            x: '0.12*w',
            y: '0.7*h',
          },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'comment',
    title: '',
    category: 'basic',
    props: { w: 90, h: 70 },
    anchors: [
      { x: 'w', y: 'h*0.5' },
      { x: '0', y: 'h*0.5' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h/2' },
          {
            action: 'curve',
            x1: '0',
            y1: '-h/6',
            x2: 'w',
            y2: '-h/6',
            x: 'w',
            y: 'h/2',
          },
          {
            action: 'quadraticCurve',
            x1: 'w*0.98',
            y1: 'h*0.98',
            x: 'w/2',
            y: 'h',
          },
          { action: 'quadraticCurve', x1: 'w/3', y1: 'h', x: 'w/6', y: 'h*0.9' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: 'w*0.117', y: 'h*0.857' },
          { action: 'quadraticCurve', x1: '0', y1: '0.7*h', x: '0', y: 'h/2' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'braces',
    title: '大括号',
    category: 'basic',
    attribute: { linkable: false },
    props: { w: 200, h: 140 },
    fillStyle: { type: 'none' },
    anchors: [
      { x: 'w', y: 'h*0.5' },
      { x: '0', y: 'h*0.5' },
    ],
    path: [
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'Math.min(w*0.2,18)', y: '0' },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(w*0.1,9)',
            y1: '0',
            x: 'Math.min(w*0.1,9)',
            y: 'Math.min(h*0.1,9)',
          },
          {
            action: 'line',
            x: 'Math.min(w*0.1,9)',
            y: 'h*0.5-Math.min(h*0.1,9)',
          },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(w*0.1,9)',
            y1: 'h*0.5',
            x: '0',
            y: 'h*0.5',
          },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(w*0.1,9)',
            y1: 'h*0.5',
            x: 'Math.min(w*0.1,9)',
            y: 'h*0.5+Math.min(h*0.1,9)',
          },
          { action: 'line', x: 'Math.min(w*0.1,9)', y: 'h-Math.min(h*0.1,9)' },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(w*0.1,9)',
            y1: 'h',
            x: 'Math.min(w*0.2,18)',
            y: 'h',
          },
        ],
      },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'w-Math.min(w*0.2,18)', y: 'h' },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.1,9)',
            y1: 'h',
            x: 'w-Math.min(w*0.1,9)',
            y: 'h-Math.min(h*0.1,9)',
          },
          {
            action: 'line',
            x: 'w-Math.min(w*0.1,9)',
            y: 'h*0.5+Math.min(h*0.1,9)',
          },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.1,9)',
            y1: 'h*0.5',
            x: 'w',
            y: 'h*0.5',
          },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.1,9)',
            y1: 'h*0.5',
            x: 'w-Math.min(w*0.1,9)',
            y: 'h*0.5-Math.min(h*0.1,9)',
          },
          { action: 'line', x: 'w-Math.min(w*0.1,9)', y: 'Math.min(h*0.1,9)' },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.1,9)',
            y1: '0',
            x: 'w-Math.min(w*0.2,18)',
            y: '0',
          },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'parentheses',
    title: '中括号',
    category: 'basic',
    attribute: { linkable: false },
    props: { w: 200, h: 140 },
    fillStyle: { type: 'none' },
    anchors: [
      { x: 'w', y: 'h*0.5' },
      { x: '0', y: 'h*0.5' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: 'Math.min(w*0.1,18)', y: '0' },
          { action: 'line', x: '0', y: 'Math.min(h*0.1,15)' },
          { action: 'line', x: '0', y: 'h-Math.min(h*0.1,15)' },
          { action: 'line', x: 'Math.min(w*0.1,18)', y: 'h' },
          { action: 'move', x: 'w-Math.min(w*0.1,18)', y: 'h' },
          { action: 'line', x: 'w', y: 'h-Math.min(h*0.1,15)' },
          { action: 'line', x: 'w', y: 'Math.min(h*0.1,15)' },
          { action: 'line', x: 'w-Math.min(w*0.1,18)', y: '0' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'rightBrace',
    title: '备注',
    category: 'basic',
    attribute: { linkable: false },
    props: { w: 100, h: 140 },
    fontStyle: { textAlign: 'left' },
    fillStyle: { type: 'none' },
    textBlock: [{ position: { x: '27', y: '0', w: 'w-27', h: 'h' } }],
    anchors: [],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h' },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(w*0.1,9)',
            y1: 'h',
            x: 'Math.min(w*0.1,9)',
            y: 'h-Math.min(h*0.1,9)',
          },
          {
            action: 'line',
            x: 'Math.min(w*0.1,9)',
            y: 'h*0.5+Math.min(h*0.1,9)',
          },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(w*0.1,9)',
            y1: 'h*0.5',
            x: '22',
            y: 'h*0.5',
          },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(w*0.1,9)',
            y1: 'h*0.5',
            x: 'Math.min(w*0.1,9)',
            y: 'h*0.5-Math.min(h*0.1,9)',
          },
          { action: 'line', x: 'Math.min(w*0.1,9)', y: 'Math.min(h*0.1,9)' },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(w*0.1,9)',
            y1: '0',
            x: '0',
            y: '0',
          },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var a = 10
      return [
        {
          actions: [
            { action: 'move', x: a + 0, y: c },
            {
              action: 'quadraticCurve',
              x1: a + Math.min(b * 0.1, 9),
              y1: c,
              x: a + Math.min(b * 0.1, 9),
              y: c - Math.min(c * 0.1, 9),
            },
            {
              action: 'line',
              x: a + Math.min(b * 0.1, 9),
              y: c * 0.5 + Math.min(c * 0.1, 9),
            },
            {
              action: 'quadraticCurve',
              x1: a + Math.min(b * 0.1, 9),
              y1: c * 0.5,
              x: a + b * 0.2,
              y: c * 0.5,
            },
            {
              action: 'quadraticCurve',
              x1: a + Math.min(b * 0.1, 9),
              y1: c * 0.5,
              x: a + Math.min(b * 0.1, 9),
              y: c * 0.5 - Math.min(c * 0.1, 9),
            },
            {
              action: 'line',
              x: a + Math.min(b * 0.1, 9),
              y: Math.min(c * 0.1, 9),
            },
            {
              action: 'quadraticCurve',
              x1: a + Math.min(b * 0.1, 9),
              y1: 0,
              x: a + 0,
              y: 0,
            },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'leftBrace',
    title: '备注',
    category: 'basic',
    attribute: { linkable: false },
    props: { w: 100, h: 140 },
    fontStyle: { textAlign: 'right' },
    fillStyle: { type: 'none' },
    textBlock: [{ position: { x: '0', y: '0', w: 'w-27', h: 'h' } }],
    anchors: [],
    path: [
      {
        actions: [
          { action: 'move', x: 'w', y: '0' },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.1,9)',
            y1: '0',
            x: 'w-Math.min(w*0.1,9)',
            y: 'Math.min(h*0.1,9)',
          },
          {
            action: 'line',
            x: 'w-Math.min(w*0.1,9)',
            y: 'h*0.5-Math.min(h*0.1,9)',
          },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.1,9)',
            y1: 'h*0.5',
            x: 'w-22',
            y: 'h*0.5',
          },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.1,9)',
            y1: 'h*0.5',
            x: 'w-Math.min(w*0.1,9)',
            y: 'h*0.5+Math.min(h*0.1,9)',
          },
          { action: 'line', x: 'w-Math.min(w*0.1,9)', y: 'h-Math.min(h*0.1,9)' },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.1,9)',
            y1: 'h',
            x: 'w',
            y: 'h',
          },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var a = 12
      return [
        {
          actions: [
            { action: 'move', x: b - a, y: 0 },
            {
              action: 'quadraticCurve',
              x1: b - Math.min(b * 0.1, 9) - a,
              y1: 0,
              x: b - Math.min(b * 0.1, 9) - a,
              y: Math.min(c * 0.1, 9),
            },
            {
              action: 'line',
              x: b - Math.min(b * 0.1, 9) - a,
              y: c * 0.5 - Math.min(c * 0.1, 9),
            },
            {
              action: 'quadraticCurve',
              x1: b - Math.min(b * 0.1, 9) - a,
              y1: c * 0.5,
              x: b - b * 0.2 - a,
              y: c * 0.5,
            },
            {
              action: 'quadraticCurve',
              x1: b - Math.min(b * 0.1, 9) - a,
              y1: c * 0.5,
              x: b - Math.min(b * 0.1, 9) - a,
              y: c * 0.5 + Math.min(c * 0.1, 9),
            },
            {
              action: 'line',
              x: b - Math.min(b * 0.1, 9) - a,
              y: c - Math.min(c * 0.1, 9),
            },
            {
              action: 'quadraticCurve',
              x1: b - Math.min(b * 0.1, 9) - a,
              y1: c,
              x: b - a,
              y: c,
            },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'apqc',
    title: 'APQC',
    category: 'basic',
    props: { w: 200, h: 150 },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h/8' },
          { action: 'quadraticCurve', x1: 'w*0.5', y1: '-h/8', x: 'w', y: 'h/8' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: 'h/8' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'teardrop',
    title: '水滴',
    category: 'basic',
    props: { w: 70, h: 70 },
    path: [
      {
        actions: [
          { action: 'move', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h/2' },
          {
            action: 'curve',
            x1: 'w',
            y1: 'h+h/6',
            x2: '0',
            y2: 'h+h/6',
            x: '0',
            y: 'h*0.5',
          },
          { action: 'quadraticCurve', x1: '0', y1: '0', x: 'w/2', y: '0' },
          { action: 'line', x: 'w/2', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'singleLeftArrow',
    title: '左箭头',
    category: 'basic',
    props: { w: 90, h: 60 },
    anchors: [
      { x: 'w', y: 'h*0.5' },
      { x: '0', y: 'h*0.5' },
    ],
    textBlock: [{ position: { x: '0', y: 'h*0.33', w: 'w', h: 'h*0.34' } }],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h/2' },
          { action: 'line', x: 'Math.min(0.5*h,0.45*w)', y: '0' },
          { action: 'line', x: 'Math.min(0.5*h,0.45*w)', y: 'h*0.33' },
          { action: 'line', x: 'w', y: 'h*0.33' },
          { action: 'line', x: 'w', y: 'h*0.67' },
          { action: 'line', x: 'Math.min(0.5*h,0.45*w)', y: 'h*0.67' },
          { action: 'line', x: 'Math.min(0.5*h,0.45*w)', y: 'h' },
          { action: 'line', x: '0', y: 'h/2' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'singleRightArrow',
    title: '右箭头',
    category: 'basic',
    props: { w: 90, h: 60 },
    anchors: [
      { x: 'w', y: 'h*0.5' },
      { x: '0', y: 'h*0.5' },
    ],
    textBlock: [{ position: { x: '0', y: 'h*0.33', w: 'w', h: 'h*0.34' } }],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h*0.33' },
          { action: 'line', x: 'w-Math.min(h*0.5,w*0.45)', y: 'h*0.33' },
          { action: 'line', x: 'w-Math.min(h*0.5,w*0.45)', y: '0' },
          { action: 'line', x: 'w', y: 'h*0.5' },
          { action: 'line', x: 'w-Math.min(h*0.5,w*0.45)', y: 'h' },
          { action: 'line', x: 'w-Math.min(h*0.5,w*0.45)', y: 'h*0.67' },
          { action: 'line', x: '0', y: 'h*0.67' },
          { action: 'line', x: '0', y: 'h*0.33' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'doubleHorizontalArrow',
    title: '左右箭头',
    category: 'basic',
    props: { w: 90, h: 60 },
    anchors: [
      { x: 'w', y: 'h*0.5' },
      { x: '0', y: 'h*0.5' },
    ],
    textBlock: [{ position: { x: '0', y: 'h*0.33', w: 'w', h: 'h*0.34' } }],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h*0.5' },
          { action: 'line', x: 'Math.min(h*0.5,w*0.45)', y: '0' },
          { action: 'line', x: 'Math.min(h*0.5,w*0.45)', y: 'h*0.33' },
          { action: 'line', x: 'w-Math.min(h*0.5,w*0.45)', y: 'h*0.33' },
          { action: 'line', x: 'w-Math.min(h*0.5,w*0.45)', y: '0' },
          { action: 'line', x: 'w', y: 'h*0.5' },
          { action: 'line', x: 'w-Math.min(h*0.5,w*0.45)', y: 'h' },
          { action: 'line', x: 'w-Math.min(h*0.5,w*0.45)', y: 'h*0.67' },
          { action: 'line', x: 'Math.min(h*0.5,w*0.45)', y: 'h*0.67' },
          { action: 'line', x: 'Math.min(h*0.5,w*0.45)', y: 'h' },
          { action: 'line', x: '0', y: 'h*0.5' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'singleUpArrow',
    title: '上箭头',
    category: 'basic',
    props: { w: 60, h: 90 },
    anchors: [
      { x: 'w*0.5', y: '0' },
      { x: 'w*0.5', y: 'h' },
    ],
    textBlock: [
      { position: { x: '-w*0.2', y: 'h*0.43', w: 'w*1.4', h: 'h*0.24' } },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: 'w*0.5', y: '0' },
          { action: 'line', x: 'w', y: 'Math.min(w*0.5,h*0.45)' },
          { action: 'line', x: 'w*0.67', y: 'Math.min(w*0.5,h*0.45)' },
          { action: 'line', x: 'w*0.67', y: 'h' },
          { action: 'line', x: 'w*0.33', y: 'h' },
          { action: 'line', x: 'w*0.33', y: 'Math.min(w*0.5,h*0.45)' },
          { action: 'line', x: '0', y: 'Math.min(w*0.5,h*0.45)' },
          { action: 'line', x: 'w*0.5', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'singleDownArrow',
    title: '下箭头',
    category: 'basic',
    props: { w: 60, h: 90 },
    anchors: [
      { x: 'w*0.5', y: '0' },
      { x: 'w*0.5', y: 'h' },
    ],
    textBlock: [
      { position: { x: '-w*0.2', y: 'h*0.33', w: 'w*1.4', h: 'h*0.24' } },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: 'w*0.33', y: '0' },
          { action: 'line', x: 'w*0.67', y: '0' },
          { action: 'line', x: 'w*0.67', y: 'h-Math.min(w*0.5,h*0.45)' },
          { action: 'line', x: 'w', y: 'h-Math.min(w*0.5,h*0.45)' },
          { action: 'line', x: 'w*0.5', y: 'h' },
          { action: 'line', x: '0', y: 'h-Math.min(w*0.5,h*0.45)' },
          { action: 'line', x: 'w*0.33', y: 'h-Math.min(w*0.5,h*0.45)' },
          { action: 'line', x: 'w*0.33', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'doubleVerticalArrow',
    title: '上下箭头',
    category: 'basic',
    props: { w: 60, h: 90 },
    anchors: [
      { x: 'w*0.5', y: '0' },
      { x: 'w*0.5', y: 'h' },
    ],
    textBlock: [
      { position: { x: '-w*0.2', y: 'h*0.38', w: 'w*1.4', h: 'h*0.24' } },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: 'w*0.5', y: '0' },
          { action: 'line', x: 'w', y: 'Math.min(w*0.5,h*0.45)' },
          { action: 'line', x: 'w*0.67', y: 'Math.min(w*0.5,h*0.45)' },
          { action: 'line', x: 'w*0.67', y: 'h-Math.min(w*0.5,h*0.45)' },
          { action: 'line', x: 'w', y: 'h-Math.min(w*0.5,h*0.45)' },
          { action: 'line', x: 'w*0.5', y: 'h' },
          { action: 'line', x: '0', y: 'h-Math.min(w*0.5,h*0.45)' },
          { action: 'line', x: 'w*0.33', y: 'h-Math.min(w*0.5,h*0.45)' },
          { action: 'line', x: 'w*0.33', y: 'Math.min(w*0.5,h*0.45)' },
          { action: 'line', x: '0', y: 'Math.min(w*0.5,h*0.45)' },
          { action: 'line', x: 'w*0.5', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'backArrow',
    title: '左返回箭头',
    category: 'basic',
    props: { w: 70, h: 70 },
    anchors: [
      { x: 'w-Math.min(w*0.12,20)', y: 'h*0.5' },
      { x: '0', y: 'h*0.5' },
    ],
    textBlock: [{ position: { x: '0', y: '0', w: 'w-10', h: 'h' } }],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'Math.min(Math.min(w,h)*0.4,80)' },
          {
            action: 'quadraticCurve',
            x1: '0',
            y1: '0',
            x: 'Math.min(Math.min(w,h)*0.4,80)',
            y: '0',
          },
          {
            action: 'line',
            x: 'w-Math.min(w*0.12,20)-Math.min(Math.min(w,h)*0.4,80)',
            y: '0',
          },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.12,20)',
            y1: '0',
            x: 'w-Math.min(w*0.12,20)',
            y: 'Math.min(Math.min(w,h)*0.4,80)',
          },
          {
            action: 'line',
            x: 'w-Math.min(w*0.12,20)',
            y: 'h-h*0.1-Math.min(h*0.1,50)',
          },
          { action: 'line', x: 'w', y: 'h-h*0.1-Math.min(h*0.1,50)' },
          {
            action: 'line',
            x: 'w-Math.min(w*0.12,20)-Math.min(Math.min(h,w)*0.25,50)/2',
            y: 'h',
          },
          {
            action: 'line',
            x: 'w-Math.min(w*0.12,20)*2 - Math.min(Math.min(h,w)*0.25,50)',
            y: 'h-h*0.1-Math.min(h*0.1,50)',
          },
          {
            action: 'line',
            x: 'w-Math.min(w*0.12,20) - Math.min(Math.min(h,w)*0.25,50)',
            y: 'h-h*0.1-Math.min(h*0.1,50)',
          },
          {
            action: 'line',
            x: 'w-Math.min(w*0.12,20) - Math.min(Math.min(h,w)*0.25,50)',
            y: 'Math.min(Math.min(h,w)*0.4,80)',
          },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.12,20)-Math.min(Math.min(h,w)*0.25,50)',
            y1: 'Math.min(Math.min(h,w)*0.25,50)',
            x: 'w-Math.min(w*0.12,20)-Math.min(Math.min(h,w)*0.25,50)-Math.min(w*0.15,30)',
            y: 'Math.min(Math.min(h,w)*0.25,50)',
          },
          {
            action: 'line',
            x: 'Math.min(Math.min(h,w)*0.25,50)+Math.min(w*0.15,30)',
            y: 'Math.min(Math.min(h,w)*0.25,50)',
          },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(Math.min(h,w)*0.25,50)',
            y1: 'Math.min(Math.min(h,w)*0.25,50)',
            x: 'Math.min(Math.min(h,w)*0.25,50)',
            y: 'Math.min(Math.min(h,w)*0.4,80)',
          },
          { action: 'line', x: 'Math.min(Math.min(h,w)*0.25,50)', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: 'Math.min(Math.min(h,w)*0.4,80)' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'rightBackArrow',
    title: '右返回箭头',
    category: 'basic',
    props: { w: 70, h: 70 },
    anchors: [
      { x: 'Math.min(w*0.12,20)', y: 'h*0.5' },
      { x: 'w', y: 'h*0.5' },
    ],
    textBlock: [{ position: { x: '10', y: '0', w: 'w-10', h: 'h' } }],
    path: [
      {
        actions: [
          { action: 'move', x: 'w', y: 'Math.min(Math.min(w,h)*0.4,80)' },
          {
            action: 'quadraticCurve',
            x1: 'w',
            y1: '0',
            x: 'w-Math.min(Math.min(w,h)*0.4,80)',
            y: '0',
          },
          {
            action: 'line',
            x: 'Math.min(w*0.12,20)+Math.min(Math.min(w,h)*0.4,80)',
            y: '0',
          },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(w*0.12,20)',
            y1: '0',
            x: 'Math.min(w*0.12,20)',
            y: 'Math.min(Math.min(w,h)*0.4,80)',
          },
          {
            action: 'line',
            x: 'Math.min(w*0.12,20)',
            y: 'h-h*0.1-Math.min(h*0.1,50)',
          },
          { action: 'line', x: '0', y: 'h-h*0.1-Math.min(h*0.1,50)' },
          {
            action: 'line',
            x: 'Math.min(w*0.12,20)+Math.min(Math.min(h,w)*0.25,50)/2',
            y: 'h',
          },
          {
            action: 'line',
            x: 'Math.min(Math.min(h,w)*0.25,50)+Math.min(w*0.12,20)*2',
            y: 'h-h*0.1-Math.min(h*0.1,50)',
          },
          {
            action: 'line',
            x: 'Math.min(Math.min(h,w)*0.25,50)+Math.min(w*0.12,20)',
            y: 'h-h*0.1-Math.min(h*0.1,50)',
          },
          {
            action: 'line',
            x: 'Math.min(Math.min(h,w)*0.25,50)+Math.min(w*0.12,20)',
            y: 'Math.min(Math.min(h,w)*0.4,80)',
          },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(Math.min(h,w)*0.25,50)+Math.min(w*0.12,20)',
            y1: 'Math.min(Math.min(h,w)*0.25,50)',
            x: 'Math.min(Math.min(h,w)*0.25,50)+Math.min(w*0.12,20)+Math.min(w*0.15,30)',
            y: 'Math.min(Math.min(h,w)*0.25,50)',
          },
          {
            action: 'line',
            x: 'w-Math.min(Math.min(h,w)*0.25,50)-Math.min(w*0.15,30)',
            y: 'Math.min(Math.min(h,w)*0.25,50)',
          },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(Math.min(h,w)*0.25,50)',
            y1: 'Math.min(Math.min(h,w)*0.25,50)',
            x: 'w-Math.min(Math.min(h,w)*0.25,50)',
            y: 'Math.min(Math.min(h,w)*0.4,80)',
          },
          { action: 'line', x: 'w-Math.min(Math.min(h,w)*0.25,50)', y: 'h' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: 'w', y: 'Math.min(Math.min(h,w)*0.4,80)' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'corner',
    title: '拐角',
    category: 'basic',
    props: { w: 70, h: 70 },
    anchors: [
      { x: 'w*0.5', y: '0' },
      { x: 'w*0.5', y: '0' },
      { x: '0', y: 'h*0.5' },
      { x: '0', y: 'h*0.5' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w-Math.min(w/6,30)', y: 'Math.min(h/6,30)' },
          { action: 'line', x: 'Math.min(w/6,30)', y: 'Math.min(h/6,30)' },
          { action: 'line', x: 'Math.min(w/6,30)', y: 'h-Math.min(h/6,30)' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: '0' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'basic_container',
    title: '容器',
    category: 'basic',
    attribute: { container: true },
    children: [],
    props: { w: 360, h: 240, zindex: 1 },
    textBlock: [
      {
        position: { x: '5', y: '2', w: 'w-10', h: 'h*(1/7)-2' },
        text: 'Container',
      },
    ],
    path: [{ actions: { ref: 'roundRectangle' } }],
  })
  Schema.addCategory({
    name: 'flow',
    text: 'Flowchart 流程图',
    dataAttributes: [
      { name: '序号', type: 'number', value: '', category: 'default' },
      { name: '名称', type: 'string', value: '', category: 'default' },
      { name: '所有者', type: 'string', value: '', category: 'default' },
      { name: '连接', type: 'link', value: '', category: 'default' },
      { name: '便笺', type: 'string', value: '', category: 'default' },
      { name: '成本', type: 'number', value: '', category: 'default' },
      { name: '时间', type: 'number', value: '', category: 'default' },
      { name: '部门', type: 'string', value: '', category: 'default' },
      { name: '输入', type: 'string', value: '', category: 'default' },
      { name: '输出', type: 'string', value: '', category: 'default' },
      { name: '风险', type: 'string', value: '', category: 'default' },
      { name: '备注', type: 'string', value: '', category: 'default' },
    ],
  })
  Schema.addShape({
    name: 'process',
    title: '流程',
    category: 'flow',
    props: { w: 100, h: 70 },
    path: [{ actions: { ref: 'rectangle' } }],
  })
  Schema.addShape({
    name: 'decision',
    title: '判定',
    category: 'flow',
    props: { w: 90, h: 70 },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h/2' },
          { action: 'line', x: 'w/2', y: '0' },
          { action: 'line', x: 'w', y: 'h/2' },
          { action: 'line', x: 'w/2', y: 'h' },
          { action: 'line', x: '0', y: 'h/2' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'terminator',
    title: '开始/结束',
    category: 'flow',
    props: { w: 100, h: 50 },
    path: [
      {
        actions: [
          { action: 'move', x: 'Math.min(w,h)/3', y: '0' },
          { action: 'line', x: 'w-Math.min(w,h)/3', y: '0' },
          {
            action: 'curve',
            x1: 'w+Math.min(w,h)/3/3',
            y1: '0',
            x2: 'w+Math.min(w,h)/3/3',
            y2: 'h',
            x: 'w-Math.min(w,h)/3',
            y: 'h',
          },
          { action: 'line', x: 'Math.min(w,h)/3', y: 'h' },
          {
            action: 'curve',
            x1: '-Math.min(w,h)/3/3',
            y1: 'h',
            x2: '-Math.min(w,h)/3/3',
            y2: '0',
            x: 'Math.min(w,h)/3',
            y: '0',
          },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'document',
    title: '文档',
    category: 'flow',
    props: { w: 100, h: 70 },
    anchors: [
      { x: 'w*0.5', y: '0' },
      { x: 'w', y: 'h*0.5' },
      { x: 'w*0.5', y: 'h-Math.min(h/8,w/12)' },
      { x: '0', y: 'h*0.5' },
    ],
    textBlock: [{ position: { x: '0', y: '0', w: 'w', h: 'h*0.9' } }],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h-Math.min(h/8,w/12)' },
          { action: 'line', x: '0', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h-Math.min(h/8,w/12)' },
          {
            action: 'quadraticCurve',
            x1: 'w*0.75',
            y1: 'h-3*Math.min(h/8,w/12)',
            x: 'w*0.5',
            y: 'h-Math.min(h/8,w/12)',
          },
          {
            action: 'quadraticCurve',
            x1: 'w*0.25',
            y1: 'h+Math.min(h/8,w/12)',
            x: '0',
            y: 'h-Math.min(h/8,w/12)',
          },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'data',
    title: '数据',
    category: 'flow',
    props: { w: 100, h: 70 },
    anchors: [
      { x: 'w*0.5', y: '0' },
      { x: 'w-Math.min(h/3,w/3)/2', y: 'h*0.5' },
      { x: 'w*0.5', y: 'h' },
      { x: 'Math.min(h/3,w/3)/2', y: 'h*0.5' },
    ],
    textBlock: [{ position: { x: 'w*0.15', y: '0', w: 'w*0.7', h: 'h' } }],
    path: [
      {
        actions: [
          { action: 'move', x: 'Math.min(h/3,w/3)', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w-Math.min(h/3,w/3)', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: 'Math.min(h/3,w/3)', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'predefinedProcess',
    title: '子流程',
    category: 'flow',
    props: { w: 100, h: 70 },
    textBlock: [
      {
        position: {
          x: 'Math.min(w/6,20)',
          y: '0',
          w: 'w-Math.min(w/6,20)*2',
          h: 'h',
        },
      },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: '0' },
          { action: 'close' },
          { action: 'move', x: 'Math.min(w/6,20)', y: '0' },
          { action: 'line', x: 'Math.min(w/6,20)', y: 'h' },
          { action: 'move', x: 'w- Math.min(w/6,20)', y: '0' },
          { action: 'line', x: 'w- Math.min(w/6,20)', y: 'h' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'storedData',
    title: '外部数据',
    category: 'flow',
    props: { w: 100, h: 70 },
    anchors: [
      { x: 'w*0.5', y: '0' },
      { x: 'w-Math.min(w/8,h/8)', y: 'h*0.5' },
      { x: 'w*0.5', y: 'h' },
      { x: '0', y: 'h*0.5' },
    ],
    textBlock: [{ position: { x: 'w*0.1', y: '0', w: 'w*0.75', h: 'h' } }],
    path: [
      {
        actions: [
          { action: 'move', x: 'w/6', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          {
            action: 'curve',
            x1: 'w-w/6',
            y1: '0',
            x2: 'w-w/6',
            y2: 'h',
            x: 'w',
            y: 'h',
          },
          { action: 'line', x: 'w/6', y: 'h' },
          {
            action: 'curve',
            x1: '-w/17',
            y1: 'h',
            x2: '-w/17',
            y2: '0',
            x: 'w/7',
            y: '0',
          },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'internalStorage',
    title: '内部存储',
    category: 'flow',
    props: { w: 100, h: 70 },
    textBlock: [
      {
        position: {
          x: 'Math.min(w/6,20)',
          y: 'Math.min(h/5,20)',
          w: 'w - Math.min(w/6,20)',
          h: 'h- Math.min(h/5,20)',
        },
      },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: '0' },
          { action: 'close' },
          { action: 'move', x: 'Math.min(w/6,20)', y: '0' },
          { action: 'line', x: 'Math.min(w/6,20)', y: 'h' },
          { action: 'move', x: '0', y: 'Math.min(h/5,20)' },
          { action: 'line', x: 'w', y: 'Math.min(h/5,20)' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'sequentialData',
    title: '队列数据',
    category: 'flow',
    props: { w: 70, h: 70 },
    path: [
      {
        actions: [
          { action: 'move', x: 'w/2', y: 'h' },
          {
            action: 'curve',
            x1: 'w/2-w*2/3',
            y1: 'h',
            x2: 'w/2-w*2/3',
            y2: '0',
            x: 'w/2',
            y: '0',
          },
          {
            action: 'curve',
            x1: 'w/2+w*2/3',
            y1: '0',
            x2: 'w/2+w*2/3',
            y2: 'h',
            x: 'w/2',
            y: 'h',
          },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'directData',
    title: '数据库',
    category: 'flow',
    props: { w: 100, h: 70 },
    textBlock: [{ position: { x: '0', y: '0', w: 'w*0.8', h: 'h' } }],
    path: [
      {
        actions: [
          { action: 'move', x: 'w*0.15', y: '0' },
          { action: 'line', x: 'w-h/6', y: '0' },
          {
            action: 'curve',
            x1: 'w+h/22',
            y1: '0',
            x2: 'w+h/22',
            y2: 'h',
            x: 'w-h/6',
            y: 'h',
          },
          { action: 'line', x: 'w*0.15', y: 'h' },
          {
            action: 'curve',
            x1: '-w*0.05',
            y1: 'h',
            x2: '-w*0.05',
            y2: '0',
            x: 'w*0.15',
            y: '0',
          },
          { action: 'close' },
          { action: 'move', x: 'w-h/6', y: '0' },
          {
            action: 'curve',
            x1: 'w-h/8*3',
            y1: '0',
            x2: 'w-h/8*3',
            y2: 'h',
            x: 'w-h/6',
            y: 'h',
          },
          {
            action: 'curve',
            x1: 'w-h/8*3',
            y1: 'h',
            x2: 'w-h/8*3',
            y2: '0',
            x: 'w-h/6',
            y: '0',
          },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'manualInput',
    title: '人工输入',
    category: 'flow',
    props: { w: 100, h: 70 },
    anchors: [
      { x: '0', y: 'h*0.5' },
      { x: 'w*0.5', y: 'Math.min(h/2,w/6)/2' },
      { x: 'w', y: 'h*0.5' },
      { x: 'w*0.5', y: 'h' },
    ],
    textBlock: [{ position: { x: '0', y: 'h*0.1', w: 'w', h: 'h*0.9' } }],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'Math.min(h/2,w/6)' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: 'Math.min(h/2,w/6)' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'card',
    title: '卡片',
    category: 'flow',
    props: { w: 100, h: 70 },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'Math.min(h/2,w/4)' },
          { action: 'line', x: 'Math.min(h/2,w/4)', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: 'Math.min(h/2,w/4)' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'paperTape',
    title: '条带',
    category: 'flow',
    props: { w: 100, h: 70 },
    textBlock: [{ position: { x: '0', y: 'h*0.1', w: 'w', h: 'h*0.8' } }],
    anchors: [
      { x: 'w*0.5', y: 'Math.min(Math.min(w,h)/8,w/12)' },
      { x: 'w', y: 'h*0.5' },
      { x: 'w*0.5', y: 'h-Math.min(Math.min(w,h)/8,w/12)' },
      { x: '0', y: 'h*0.5' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'Math.min(Math.min(w,h)/8,w/12)' },
          {
            action: 'quadraticCurve',
            x1: 'w*0.25',
            y1: '3*Math.min(Math.min(w,h)/8,w/12)',
            x: 'w*0.5',
            y: 'Math.min(Math.min(w,h)/8,w/12)',
          },
          {
            action: 'quadraticCurve',
            x1: 'w*0.75',
            y1: '-Math.min(Math.min(w,h)/8,w/12)',
            x: 'w',
            y: 'Math.min(Math.min(w,h)/8,w/12)',
          },
          { action: 'line', x: 'w', y: 'h-Math.min(Math.min(w,h)/8,w/12)' },
          {
            action: 'quadraticCurve',
            x1: 'w*0.75',
            y1: 'h-3*Math.min(Math.min(w,h)/8,w/12)',
            x: 'w*0.5',
            y: 'h-Math.min(Math.min(w,h)/8,w/12)',
          },
          {
            action: 'quadraticCurve',
            x1: 'w*0.25',
            y1: 'h+Math.min(Math.min(w,h)/8,w/12)',
            x: '0',
            y: 'h-Math.min(Math.min(w,h)/8,w/12)',
          },
          { action: 'line', x: '0', y: 'Math.min(Math.min(w,h)/8,w/12)' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'display',
    title: '展示',
    category: 'flow',
    props: { w: 100, h: 70 },
    path: [
      {
        actions: [
          { action: 'move', x: 'w-w/6', y: '0' },
          { action: 'line', x: 'w/6', y: '0' },
          { action: 'line', x: '0', y: 'h/2' },
          { action: 'line', x: 'w/6', y: 'h' },
          { action: 'line', x: 'w-w/6', y: 'h' },
          { action: 'quadraticCurve', x1: 'w', y1: 'h', x: 'w', y: 'h*0.5' },
          { action: 'quadraticCurve', x1: 'w', y1: '0', x: 'w-w/6', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'manualOperation',
    title: '人工操作',
    category: 'flow',
    props: { w: 100, h: 70 },
    textBlock: [{ position: { x: 'w*0.1', y: '0', w: 'w*0.8', h: 'h' } }],
    anchors: [
      { x: 'w*0.5', y: '0' },
      { x: 'w-Math.min(h/2,w/6)/2', y: 'h*0.5' },
      { x: 'w*0.5', y: 'h' },
      { x: 'Math.min(h/2,w/6)/2', y: 'h*0.5' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w-Math.min(h/2,w/6)', y: 'h' },
          { action: 'line', x: 'Math.min(h/2,w/6)', y: 'h' },
          { action: 'line', x: '0', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'preparation',
    title: '预备',
    category: 'flow',
    props: { w: 100, h: 70 },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h*0.5' },
          { action: 'line', x: 'Math.min(h/2,w/6)', y: '0' },
          { action: 'line', x: 'w-Math.min(h/2,w/6)', y: '0' },
          { action: 'line', x: 'w', y: 'h/2' },
          { action: 'line', x: 'w-Math.min(h/2,w/6)', y: 'h' },
          { action: 'line', x: 'Math.min(h/2,w/6)', y: 'h' },
          { action: 'line', x: '0', y: 'h/2' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'parallelMode',
    title: '并行模式',
    category: 'flow',
    props: { w: 100, h: 70 },
    anchors: [
      { x: 'w*0.5', y: '0' },
      { x: 'w*0.5', y: '0' },
      { x: 'w*0.5', y: 'h' },
      { x: 'w*0.5', y: 'h' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: '0', y: '0' },
          { action: 'move', x: '0', y: 'h' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'loopLimit',
    title: '循环限值',
    category: 'flow',
    props: { w: 100, h: 70 },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'Math.min(h/2,w/6)' },
          { action: 'line', x: 'Math.min(h/2,w/6)', y: '0' },
          { action: 'line', x: 'w-Math.min(h/2,w/6)', y: '0' },
          { action: 'line', x: 'w', y: 'Math.min(h/2,w/6)' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: 'Math.min(h/2,w/6)' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'onPageReference',
    title: '页面内引用',
    category: 'flow',
    props: { w: 70, h: 70 },
    path: [{ actions: { ref: 'round' } }],
  })
  Schema.addShape({
    name: 'offPageReference',
    title: '跨页引用',
    category: 'flow',
    props: { w: 70, h: 60 },
    textBlock: [{ position: { x: '0', y: '0', w: 'w', h: 'h-Math.min(h,w)/3' } }],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h-Math.min(h,w)/3' },
          { action: 'line', x: 'w*0.5', y: 'h' },
          { action: 'line', x: '0', y: 'h-Math.min(h,w)/3' },
          { action: 'line', x: '0', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'annotation',
    title: '注释',
    category: 'flow',
    props: { w: 100, h: 70 },
    anchors: [
      { x: '0', y: 'h*0.5' },
      { x: '0', y: 'h*0.5' },
      { x: '0', y: 'h*0.5' },
      { x: '0', y: 'h*0.5' },
    ],
    path: [
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'Math.min(w/6, 20)', y: '0' },
          { action: 'line', x: '0', y: '0' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: 'Math.min(w/6, 20)', y: 'h' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addCategory({
    name: 'bpmn',
    text: 'BPMN',
    dataAttributes: [
      { name: '名称', type: 'string', value: '', category: 'default' },
      { name: '文档', type: 'string', value: '', category: 'default' },
    ],
  })
  Schema.addGlobalCommand('inneround', [
    { action: 'move', x: '3', y: 'h*0.5' },
    {
      action: 'curve',
      x1: '3',
      y1: '-h/6+4',
      x2: 'w-3',
      y2: '-h/6+4',
      x: 'w-3',
      y: 'h*0.5',
    },
    {
      action: 'curve',
      x1: 'w-3',
      y1: 'h+h/6-4',
      x2: '3',
      y2: 'h+h/6-4',
      x: '3',
      y: 'h*0.5',
    },
  ])
  Schema.addGlobalCommand('message0', [
    { action: 'move', x: 'w*0.5-w*0.3', y: 'h*0.5-h*0.2' },
    { action: 'line', x: 'w*0.5+w*0.3', y: 'h*0.5-h*0.2' },
    { action: 'line', x: 'w*0.5+w*0.3', y: 'h*0.5+h*0.2' },
    { action: 'line', x: 'w*0.5-w*0.3', y: 'h*0.5+h*0.2' },
    { action: 'line', x: 'w*0.5-w*0.3', y: 'h*0.5-h*0.2' },
    { action: 'close' },
    { action: 'move', x: 'w*0.5', y: 'h*0.5' },
    { action: 'line', x: 'w*0.5+w*0.3', y: 'h*0.5-h*0.2' },
    { action: 'move', x: 'w*0.5', y: 'h*0.5' },
    { action: 'line', x: 'w*0.5-w*0.3', y: 'h*0.5-h*0.2' },
  ])
  Schema.addGlobalCommand('timer0', [
    { action: 'move', x: 'w*0.5', y: 'h*0.5' },
    { action: 'move', x: 'w*0.5-w*0.3', y: 'h*0.5' },
    {
      action: 'curve',
      x1: 'w*0.5-w*0.3',
      y1: 'h*0.5-h*0.6*2/3',
      x2: 'w*0.5+w*0.3',
      y2: 'h*0.5-h*0.6*2/3',
      x: 'w*0.5+w*0.3',
      y: 'h*0.5',
    },
    {
      action: 'curve',
      x1: 'w*0.5+w*0.3',
      y1: 'h*0.5+h*0.6*2/3',
      x2: 'w*0.5-w*0.3',
      y2: 'h*0.5+h*0.6*2/3',
      x: 'w*0.5-w*0.3',
      y: 'h*0.5',
    },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('timer0_needle', [
    { action: 'move', x: 'w*0.5+w*0.15', y: 'h*0.5' },
    { action: 'line', x: 'w*0.5', y: 'h*0.5' },
    {
      action: 'line',
      x: 'w*0.5+w*0.25*Math.cos(Math.PI/12*5)',
      y: 'h*0.5-h*0.25*Math.sin(Math.PI/12*5)',
    },
    { action: 'line', x: 'w*0.5', y: 'h*0.5' },
  ])
  Schema.addGlobalCommand('timer0_num', [
    {
      action: 'move',
      x: 'w*0.5+w*0.3*Math.cos(0)',
      y: 'h*0.5+h*0.3*Math.sin(0)',
    },
    {
      action: 'line',
      x: 'w*0.5+w*0.25*Math.cos(0)',
      y: 'h*0.5+h*0.25*Math.sin(0)',
    },
    {
      action: 'move',
      x: 'w*0.5+w*0.3*Math.cos(Math.PI/6)',
      y: 'h*0.5+h*0.3*Math.sin(Math.PI/6)',
    },
    {
      action: 'line',
      x: 'w*0.5+w*0.25*Math.cos(Math.PI/6)',
      y: 'h*0.5+h*0.25*Math.sin(Math.PI/6)',
    },
    {
      action: 'move',
      x: 'w*0.5+w*0.3*Math.cos(Math.PI/6*2)',
      y: 'h*0.5+h*0.3*Math.sin(Math.PI/6*2)',
    },
    {
      action: 'line',
      x: 'w*0.5+w*0.25*Math.cos(Math.PI/6*2)',
      y: 'h*0.5+h*0.25*Math.sin(Math.PI/6*2)',
    },
    {
      action: 'move',
      x: 'w*0.5+w*0.3*Math.cos(Math.PI/6*3)',
      y: 'h*0.5+h*0.3*Math.sin(Math.PI/6*3)',
    },
    {
      action: 'line',
      x: 'w*0.5+w*0.25*Math.cos(Math.PI/6*3)',
      y: 'h*0.5+h*0.25*Math.sin(Math.PI/6*3)',
    },
    {
      action: 'move',
      x: 'w*0.5+w*0.3*Math.cos(Math.PI/6*4)',
      y: 'h*0.5+h*0.3*Math.sin(Math.PI/6*4)',
    },
    {
      action: 'line',
      x: 'w*0.5+w*0.25*Math.cos(Math.PI/6*4)',
      y: 'h*0.5+h*0.25*Math.sin(Math.PI/6*4)',
    },
    {
      action: 'move',
      x: 'w*0.5+w*0.3*Math.cos(Math.PI/6*5)',
      y: 'h*0.5+h*0.3*Math.sin(Math.PI/6*5)',
    },
    {
      action: 'line',
      x: 'w*0.5+w*0.25*Math.cos(Math.PI/6*5)',
      y: 'h*0.5+h*0.25*Math.sin(Math.PI/6*5)',
    },
    {
      action: 'move',
      x: 'w*0.5+w*0.3*Math.cos(Math.PI/6*6)',
      y: 'h*0.5+h*0.3*Math.sin(Math.PI/6*6)',
    },
    {
      action: 'line',
      x: 'w*0.5+w*0.25*Math.cos(Math.PI/6*6)',
      y: 'h*0.5+h*0.25*Math.sin(Math.PI/6*6)',
    },
    {
      action: 'move',
      x: 'w*0.5+w*0.3*Math.cos(Math.PI/6*7)',
      y: 'h*0.5+h*0.3*Math.sin(Math.PI/6*7)',
    },
    {
      action: 'line',
      x: 'w*0.5+w*0.25*Math.cos(Math.PI/6*7)',
      y: 'h*0.5+h*0.25*Math.sin(Math.PI/6*7)',
    },
    {
      action: 'move',
      x: 'w*0.5+w*0.3*Math.cos(Math.PI/6*8)',
      y: 'h*0.5+h*0.3*Math.sin(Math.PI/6*8)',
    },
    {
      action: 'line',
      x: 'w*0.5+w*0.25*Math.cos(Math.PI/6*8)',
      y: 'h*0.5+h*0.25*Math.sin(Math.PI/6*8)',
    },
    {
      action: 'move',
      x: 'w*0.5+w*0.3*Math.cos(Math.PI/6*9)',
      y: 'h*0.5+h*0.3*Math.sin(Math.PI/6*9)',
    },
    {
      action: 'line',
      x: 'w*0.5+w*0.25*Math.cos(Math.PI/6*9)',
      y: 'h*0.5+h*0.25*Math.sin(Math.PI/6*9)',
    },
    {
      action: 'move',
      x: 'w*0.5+w*0.3*Math.cos(Math.PI/6*10)',
      y: 'h*0.5+h*0.3*Math.sin(Math.PI/6*10)',
    },
    {
      action: 'line',
      x: 'w*0.5+w*0.25*Math.cos(Math.PI/6*10)',
      y: 'h*0.5+h*0.25*Math.sin(Math.PI/6*10)',
    },
    {
      action: 'move',
      x: 'w*0.5+w*0.3*Math.cos(Math.PI/6*11)',
      y: 'h*0.5+h*0.3*Math.sin(Math.PI/6*11)',
    },
    {
      action: 'line',
      x: 'w*0.5+w*0.25*Math.cos(Math.PI/6*11)',
      y: 'h*0.5+h*0.25*Math.sin(Math.PI/6*11)',
    },
  ])
  Schema.addGlobalCommand('conditional0', [
    { action: 'move', x: 'w*0.5', y: 'h*0.5' },
    { action: 'move', x: 'w*0.5-w*0.25', y: 'h*0.5-h*0.25' },
    { action: 'line', x: 'w*0.5+w*0.25', y: 'h*0.5-h*0.25' },
    { action: 'line', x: 'w*0.5+w*0.25', y: 'h*0.5+h*0.25' },
    { action: 'line', x: 'w*0.5-w*0.25', y: 'h*0.5+h*0.25' },
    { action: 'line', x: 'w*0.5-w*0.25', y: 'h*0.5-h*0.25' },
    { action: 'close' },
    { action: 'move', x: 'w*0.5-w*0.2', y: 'h*0.5-h*0.05' },
    { action: 'line', x: 'w*0.5+w*0.2', y: 'h*0.5-h*0.05' },
    { action: 'move', x: 'w*0.5-w*0.2', y: 'h*0.5-h*0.16' },
    { action: 'line', x: 'w*0.5+w*0.2', y: 'h*0.5-h*0.16' },
    { action: 'move', x: 'w*0.5-w*0.2', y: 'h*0.5+h*0.05' },
    { action: 'line', x: 'w*0.5+w*0.2', y: 'h*0.5+h*0.05' },
    { action: 'move', x: 'w*0.5-w*0.2', y: 'h*0.5+h*0.16' },
    { action: 'line', x: 'w*0.5+w*0.2', y: 'h*0.5+h*0.16' },
  ])
  Schema.addGlobalCommand('escalation0', [
    { action: 'move', x: 'w*0.5', y: 'h*0.5' },
    { action: 'line', x: 'w*0.5+w*0.2', y: 'h*0.5+h*0.25' },
    { action: 'line', x: 'w*0.5', y: 'h*0.5-h*0.25' },
    { action: 'line', x: 'w*0.5-w*0.2', y: 'h*0.5+h*0.25' },
    { action: 'line', x: 'w*0.5', y: 'h*0.5' },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('signal0', [
    { action: 'move', x: 'w*0.5', y: 'h*0.5-h*0.32' },
    { action: 'line', x: 'w*0.5+w*0.28', y: 'h*0.5+h*0.15' },
    { action: 'line', x: 'w*0.5-w*0.28', y: 'h*0.5+h*0.15' },
    { action: 'line', x: 'w*0.5', y: 'h*0.5-h*0.32' },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('compensation0', [
    { action: 'move', x: 'w*0.5', y: 'h*0.5' },
    { action: 'line', x: 'w*0.5+w*0.25', y: 'h*0.5-h*0.2' },
    { action: 'line', x: 'w*0.5+w*0.25', y: 'h*0.5+h*0.2' },
    { action: 'line', x: 'w*0.5', y: 'h*0.5' },
    { action: 'close' },
    { action: 'move', x: 'w*0.5-w*0.25', y: 'h*0.5' },
    { action: 'line', x: 'w*0.5', y: 'h*0.5-h*0.2' },
    { action: 'line', x: 'w*0.5', y: 'h*0.5+h*0.2' },
    { action: 'line', x: 'w*0.5-w*0.25', y: 'h*0.5' },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('error0', [
    { action: 'move', x: 'w*0.5', y: 'h*0.5' },
    { action: 'move', x: 'w*0.5+w*0.1', y: 'h*0.5' },
    { action: 'line', x: 'w*0.5+w*0.28', y: 'h*0.5-h*0.2' },
    { action: 'line', x: 'w*0.5+w*0.1', y: 'h*0.5+h*0.2' },
    { action: 'line', x: 'w*0.5-w*0.1', y: 'h*0.5' },
    { action: 'line', x: 'w*0.5-w*0.28', y: 'h*0.5+h*0.2' },
    { action: 'line', x: 'w*0.5-w*0.1', y: 'h*0.5-h*0.2' },
    { action: 'line', x: 'w*0.5+w*0.1', y: 'h*0.5' },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('multiple0', [
    { action: 'move', x: 'w*0.5', y: 'h*0.5-h*0.28' },
    { action: 'line', x: 'w*0.5+w*0.28', y: 'h*0.5-h*0.08' },
    { action: 'line', x: 'w*0.5+w*0.17', y: 'h*0.5+h*0.25' },
    { action: 'line', x: 'w*0.5-w*0.17', y: 'h*0.5+h*0.25' },
    { action: 'line', x: 'w*0.5-w*0.28', y: 'h*0.5-h*0.08' },
    { action: 'line', x: 'w*0.5', y: 'h*0.5-h*0.28' },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('parallel0', [
    { action: 'move', x: 'w*0.5+w*0.07', y: 'h*0.5-h*0.07' },
    { action: 'line', x: 'w*0.5+w*0.27', y: 'h*0.5-h*0.07' },
    { action: 'line', x: 'w*0.5+w*0.27', y: 'h*0.5+h*0.07' },
    { action: 'line', x: 'w*0.5+w*0.07', y: 'h*0.5+h*0.07' },
    { action: 'line', x: 'w*0.5+w*0.07', y: 'h*0.5+h*0.27' },
    { action: 'line', x: 'w*0.5-w*0.07', y: 'h*0.5+h*0.27' },
    { action: 'line', x: 'w*0.5-w*0.07', y: 'h*0.5+h*0.07' },
    { action: 'line', x: 'w*0.5-w*0.27', y: 'h*0.5+h*0.07' },
    { action: 'line', x: 'w*0.5-w*0.27', y: 'h*0.5-h*0.07' },
    { action: 'line', x: 'w*0.5-w*0.07', y: 'h*0.5-h*0.07' },
    { action: 'line', x: 'w*0.5-w*0.07', y: 'h*0.5-h*0.27' },
    { action: 'line', x: 'w*0.5+w*0.07', y: 'h*0.5-h*0.27' },
    { action: 'line', x: 'w*0.5+w*0.07', y: 'h*0.5-h*0.07' },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('gateway0', [
    { action: 'move', x: '0', y: 'h*0.5' },
    { action: 'line', x: 'w*0.5', y: '0' },
    { action: 'line', x: 'w', y: 'h*0.5' },
    { action: 'line', x: 'w*0.5', y: 'h' },
    { action: 'line', x: '0', y: 'h*0.5' },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('link3', [
    { action: 'move', x: 'w*0.5', y: 'h*0.5' },
    { action: 'move', x: 'w*0.5-w*0.26', y: 'h*0.5-h*0.08' },
    { action: 'line', x: 'w*0.5+w*0.16', y: 'h*0.5-h*0.08' },
    { action: 'line', x: 'w*0.5+w*0.16', y: 'h*0.5-h*0.18' },
    { action: 'line', x: 'w*0.5+w*0.26', y: 'h*0.5' },
    { action: 'line', x: 'w*0.5+w*0.16', y: 'h*0.5+h*0.18' },
    { action: 'line', x: 'w*0.5+w*0.16', y: 'h*0.5+h*0.08' },
    { action: 'line', x: 'w*0.5-w*0.26', y: 'h*0.5+h*0.08' },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('cancel3', [
    { action: 'move', x: 'w*0.5', y: 'h*0.5' },
    { action: 'move', x: 'w*0.5', y: 'h*0.5-h*0.1' },
    { action: 'line', x: 'w*0.5+w*0.16', y: 'h*0.5-h*0.25' },
    { action: 'line', x: 'w*0.5+w*0.25', y: 'h*0.5-h*0.16' },
    { action: 'line', x: 'w*0.5+w*0.1', y: 'h*0.5' },
    { action: 'line', x: 'w*0.5+w*0.25', y: 'h*0.5+h*0.16' },
    { action: 'line', x: 'w*0.5+w*0.16', y: 'h*0.5+h*0.25' },
    { action: 'line', x: 'w*0.5', y: 'h*0.5+h*0.1' },
    { action: 'line', x: 'w*0.5-w*0.16', y: 'h*0.5+h*0.25' },
    { action: 'line', x: 'w*0.5-w*0.25', y: 'h*0.5+h*0.16' },
    { action: 'line', x: 'w*0.5-w*0.1', y: 'h*0.5' },
    { action: 'line', x: 'w*0.5-w*0.25', y: 'h*0.5-h*0.16' },
    { action: 'line', x: 'w*0.5-w*0.16', y: 'h*0.5-h*0.25' },
    { action: 'line', x: 'w*0.5', y: 'h*0.5-h*0.1' },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('message4', [
    { action: 'move', x: 'w*0.5', y: 'h*0.5' },
    { action: 'move', x: 'w*0.5-w*0.3', y: 'h*0.5-h*0.2' },
    { action: 'line', x: 'w*0.5+w*0.3', y: 'h*0.5-h*0.2' },
    { action: 'line', x: 'w*0.5+w*0.3', y: 'h*0.5+h*0.2' },
    { action: 'line', x: 'w*0.5-w*0.3', y: 'h*0.5+h*0.2' },
    { action: 'line', x: 'w*0.5-w*0.3', y: 'h*0.5-h*0.2' },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('message4_0', [
    { action: 'move', x: 'w*0.5-w*0.3', y: 'h*0.5-h*0.2' },
    { action: 'line', x: 'w*0.5', y: 'h*0.5' },
    { action: 'line', x: 'w*0.5+w*0.3', y: 'h*0.5-h*0.2' },
    { action: 'line', x: 'w*0.5', y: 'h*0.5' },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('g_round', [
    { action: 'move', x: 'w*0.5 - w*0.25', y: 'h*0.5' },
    {
      action: 'curve',
      x1: 'w*0.5 - w*0.25',
      y1: 'h*0.5 - h*2/3*0.5',
      x2: 'w*0.5 + w*0.25',
      y2: 'h*0.5 - h*2/3*0.5',
      x: 'w*0.5 + w*0.25',
      y: 'h*0.5',
    },
    {
      action: 'curve',
      x1: 'w*0.5 + w*0.25',
      y1: 'h*0.5 + h*2/3*0.5',
      x2: 'w*0.5 - w*0.25',
      y2: 'h*0.5 + h*2/3*0.5',
      x: 'w*0.5 - w*0.25',
      y: 'h*0.5',
    },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('manual_task', [
    { action: 'move', x: '100*0.15- 100*0.08', y: '60*0.2' },
    { action: 'line', x: '100*0.15- 100*0.04', y: '60*0.2' },
    { action: 'line', x: '100*0.15+ 100*0.01', y: '60*0.13' },
    { action: 'line', x: '100*0.15+ 100*0.04', y: '60*0.13' },
    { action: 'line', x: '100*0.15 + 100*0.04', y: '60*0.17' },
    { action: 'line', x: '100*0.15+ 100*0.01', y: '60*0.17' },
    { action: 'line', x: '100*0.15+ 100*0.1', y: '60*0.17' },
    { action: 'line', x: '100*0.15+ 100*0.1', y: '60*0.21' },
    { action: 'line', x: '100*0.15+ 100*0.01', y: '60*0.21' },
    { action: 'line', x: '100*0.15+ 100*0.06', y: '60*0.21' },
    { action: 'line', x: '100*0.15+ 100*0.06', y: '60*0.25' },
    { action: 'line', x: '100*0.15+ 100*0.01', y: '60*0.25' },
    { action: 'line', x: '100*0.15+ 100*0.06', y: '60*0.25' },
    { action: 'line', x: '100*0.15+ 100*0.06', y: '60*0.29' },
    { action: 'line', x: '100*0.15+ 100*0.06', y: '60*0.29' },
    { action: 'line', x: '100*0.15+ 100*0.04', y: '60*0.29' },
    { action: 'line', x: '100*0.15+ 100*0.04', y: '60*0.33' },
    { action: 'line', x: '100*0.15- 100*0.04', y: '60*0.33' },
    { action: 'line', x: '100*0.15- 100*0.08', y: '60*0.28' },
    { action: 'line', x: '100*0.15- 100*0.08', y: '60*0.2' },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('receive_task', [
    { action: 'move', x: '100*0.15+ 100*0.08', y: '60*0.24- 60*0.1' },
    { action: 'line', x: '100*0.15- 100*0.08', y: '60*0.24- 60*0.1' },
    { action: 'line', x: '100*0.15 - 100*0.08', y: '60*0.24 + 60*0.08' },
    { action: 'line', x: '100*0.15+ 100*0.08', y: '60*0.24 + 60*0.08' },
    { action: 'line', x: '100*0.15+ 100*0.08', y: '60*0.24- 60*0.1' },
    { action: 'close' },
    { action: 'line', x: '100*0.15 - 0', y: '60*0.24- 60*0.01' },
    { action: 'line', x: '100*0.15 - 100*0.08', y: '60*0.24- 60*0.1' },
    { action: 'line', x: '100*0.15 - 0', y: '60*0.24- 60*0.01' },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('receive_task_dark', [
    { action: 'move', x: '100*0.15+ 100*0.08', y: '60*0.24- 60*0.1' },
    { action: 'line', x: '100*0.15- 100*0.08', y: '60*0.24- 60*0.1' },
    { action: 'line', x: '100*0.15 - 100*0.08', y: '60*0.24 + 60*0.08' },
    { action: 'line', x: '100*0.15+ 100*0.08', y: '60*0.24 + 60*0.08' },
    { action: 'line', x: '100*0.15+ 100*0.08', y: '60*0.24- 60*0.1' },
    { action: 'close' },
    { action: 'line', x: '100*0.15 - 0', y: '60*0.24- 60*0.01' },
    { action: 'line', x: '100*0.15 - 100*0.08', y: '60*0.24- 60*0.1' },
    { action: 'line', x: '100*0.15 - 0', y: '60*0.24- 60*0.01' },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('service_task', [
    {
      action: 'move',
      x: '100*0.09 -100*0.26 *0.16',
      y: '60*0.14 + 60/5*8 *0.16 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 -100*0.28 *0.16',
      y: '60*0.14 + 60/5*8 *0.11 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 - 100*0.26 *0.16',
      y: '60*0.14 + 60/5*8 *0.05 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 -100*0.17 *0.16',
      y: '60*0.14 + 60/5*8 *0.05 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 -100*0.12 *0.16',
      y: '60*0.14 -60/5*8 *0.02 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 -100*0.21 *0.16',
      y: '60*0.14 -60/5*8 *0.13 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 -100*0.18 *0.16',
      y: '60*0.14 -60/5*8 *0.17 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 -100*0.13 *0.16',
      y: '60*0.14 -60/5*8 *0.19 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 -100*0.05 *0.16',
      y: '60*0.14 -60/5*8 *0.11 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 +100*0.03 *0.16',
      y: '60*0.14 -60/5*8 *0.15 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.04 *0.16',
      y: '60*0.14 -60/5*8 *0.25 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.10 *0.16',
      y: '60*0.14 -60/5*8 *0.27 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.15 *0.16',
      y: '60*0.14 -60/5*8 *0.25 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.15 *0.16',
      y: '60*0.14 -60/5*8 *0.15 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.23 *0.16',
      y: '60*0.14 -60/5*8 *0.12 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.30 *0.16',
      y: '60*0.14 -60/5*8 *0.19 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.35 *0.16',
      y: '60*0.14 -60/5*8 *0.16 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.38 *0.16',
      y: '60*0.14 -60/5*8 *0.12 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.32 *0.16',
      y: '60*0.14 -60/5*8 *0.05 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.37 *0.16',
      y: '60*0.14 + 60/5*8 *0.05 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.46 *0.16',
      y: '60*0.14 + 60/5*8 *0.05 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.48 *0.16',
      y: '60*0.14 + 60/5*8 *0.10 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.46 *0.16',
      y: '60*0.14 + 60/5*8 *0.16 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.37 *0.16',
      y: '60*0.14 + 60/5*8 *0.16 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.33 *0.16',
      y: '60*0.14 + 60/5*8 *0.25 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.38 *0.16',
      y: '60*0.14 + 60/5*8 *0.31 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.36 *0.16',
      y: '60*0.14 + 60/5*8 *0.37 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.29 *0.16',
      y: '60*0.14 + 60/5*8 *0.39 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.25 *0.16',
      y: '60*0.14 + 60/5*8 *0.35 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.16 *0.16',
      y: '60*0.14 + 60/5*8 *0.37 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.16 *0.16',
      y: '60*0.14 + 60/5*8 *0.46 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.10 *0.16',
      y: '60*0.14 + 60/5*8 *0.48 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.04 *0.16',
      y: '60*0.14 + 60/5*8 *0.46 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.04 *0.16',
      y: '60*0.14 + 60/5*8 *0.37 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 -100*0.04 *0.16',
      y: '60*0.14 + 60/5*8 *0.33 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 -100*0.12 *0.16',
      y: '60*0.14 + 60/5*8 *0.38 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 -100*0.18 *0.16',
      y: '60*0.14 + 60/5*8 *0.37 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 -100*0.21 *0.16',
      y: '60*0.14 + 60/5*8 *0.33 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 -100*0.14 *0.16',
      y: '60*0.14 + 60/5*8 *0.25 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 -100*0.16 *0.16',
      y: '60*0.14 + 60/5*8 *0.16 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 -100*0.26 *0.16',
      y: '60*0.14 + 60/5*8 *0.16 *0.16',
    },
    { action: 'close' },
    {
      action: 'move',
      x: '100*0.09 -100*0.01 *0.16',
      y: '60*0.14 +  60/5*8 *0.01 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 +100*0.01 *0.16',
      y: '60*0.14 - 60*0.01 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 +100*0.04 *0.16',
      y: '60*0.14 + 60*0.01 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.08 *0.16',
      y: '60*0.14 + 60*0.01 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.08 *0.16',
      y: '60*0.14 - 60*0.03 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.12 *0.16',
      y: '60*0.14 - 60*0.03 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.12 *0.16',
      y: '60*0.14 - 60*0.0 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.15 *0.16',
      y: '60*0.14 + 60*0.02 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.18 *0.16',
      y: '60*0.14 -60*0.01 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.22 *0.16',
      y: '60*0.14 + 60*0.01 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.18 *0.16',
      y: '60*0.14 + 60*0.04 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.20 *0.16',
      y: '60*0.14 + 60*0.08 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.25 *0.16',
      y: '60*0.14 + 60*0.08 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.25 *0.16',
      y: '60*0.14 + 60*0.12 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.20 *0.16',
      y: '60*0.14 + 60*0.12 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.18 *0.16',
      y: '60*0.14 + 60*0.16 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.21 *0.16',
      y: '60*0.14 + 60*0.19 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.18 *0.16',
      y: '60*0.14 + 60*0.22 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.15 *0.16',
      y: '60*0.14 + 60*0.19 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.12 *0.16',
      y: '60*0.14 + 60*0.21 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.12 *0.16',
      y: '60*0.14 + 60*0.25 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.08 *0.16',
      y: '60*0.14 + 60*0.26 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.08 *0.16',
      y: '60*0.14 + 60*0.21 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.05 *0.16',
      y: '60*0.14 + 60*0.18 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.01 *0.16',
      y: '60*0.14 + 60*0.22 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 - 100*0.02 *0.16',
      y: '60*0.14 + 60*0.19 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.0 *0.16',
      y: '60*0.14 + 60*0.16 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.0 *0.16',
      y: '60*0.14 + 60*0.12 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 -100*0.04 *0.16',
      y: '60*0.14 + 60*0.12 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 -100*0.04 *0.16',
      y: '60*0.14 + 60*0.08 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0. *0.16',
      y: '60*0.14 + 60*0.08 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 + 100*0.01 *0.16',
      y: '60*0.14 + 60*0.05 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.09 -100*0.01 *0.16',
      y: '60*0.14 + 60*0.01 /5*8 *0.16',
    },
    { action: 'close' },
    {
      action: 'move',
      x: '100*0.15 -100*0.26 *0.16',
      y: '60*0.24 + 60/5*8 *0.16 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 -100*0.28 *0.16',
      y: '60*0.24 + 60/5*8 *0.11 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 -100*0.26 *0.16',
      y: '60*0.24 + 60/5*8 *0.05 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 -100*0.17 *0.16',
      y: '60*0.24 + 60/5*8 *0.05 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 -100*0.12 *0.16',
      y: '60*0.24 -60/5*8 *0.02 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 -100*0.21 *0.16',
      y: '60*0.24 -60/5*8 *0.13 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 -100*0.18 *0.16',
      y: '60*0.24 -60/5*8 *0.17 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 -100*0.13 *0.16',
      y: '60*0.24 -60/5*8 *0.19 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 -100*0.05 *0.16',
      y: '60*0.24 -60/5*8 *0.11 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.03 *0.16',
      y: '60*0.24 -60/5*8 *0.15 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 +  100*0.04 *0.16',
      y: '60*0.24 -60/5*8 *0.25 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 +  100*0.10 *0.16',
      y: '60*0.24 -60/5*8 *0.27 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 +  100*0.15 *0.16',
      y: '60*0.24 -60/5*8 *0.25 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 +  100*0.15 *0.16',
      y: '60*0.24 -60/5*8 *0.15 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 +  100*0.23 *0.16',
      y: '60*0.24 -60/5*8 *0.12 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 +  100*0.30 *0.16',
      y: '60*0.24 -60/5*8 *0.19 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 +  100*0.35 *0.16',
      y: '60*0.24 -60/5*8 *0.16 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 +  100*0.38 *0.16',
      y: '60*0.24 -60/5*8 *0.12 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 +  100*0.32 *0.16',
      y: '60*0.24 -60/5*8 *0.05 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 +  100*0.37 *0.16',
      y: '60*0.24 +60/5*8 *0.05 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 +  100*0.46 *0.16',
      y: '60*0.24 +60/5*8 *0.05 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 +  100*0.48 *0.16',
      y: '60*0.24 +60/5*8 *0.10 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 +  100*0.46 *0.16',
      y: '60*0.24 +60/5*8 *0.16 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 +  100*0.37 *0.16',
      y: '60*0.24 +60/5*8 *0.16 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 +  100*0.33 *0.16',
      y: '60*0.24 +60/5*8 *0.25 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.38 *0.16',
      y: '60*0.24 +60/5*8 *0.31 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.36 *0.16',
      y: '60*0.24 +60/5*8 *0.37 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.29 *0.16',
      y: '60*0.24 +60/5*8 *0.39 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.25 *0.16',
      y: '60*0.24 +60/5*8 *0.35 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.16 *0.16',
      y: '60*0.24 +60/5*8 *0.37 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.16 *0.16',
      y: '60*0.24 +60/5*8 *0.46 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.10 *0.16',
      y: '60*0.24 +60/5*8 *0.48 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.04 *0.16',
      y: '60*0.24 +60/5*8 *0.46 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.04 *0.16',
      y: '60*0.24 +60/5*8 *0.37 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 -100*0.04 *0.16',
      y: '60*0.24 +60/5*8 *0.33 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 -100*0.12 *0.16',
      y: '60*0.24 +60/5*8 *0.38 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 -100*0.18 *0.16',
      y: '60*0.24 +60/5*8 *0.37 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 -100*0.21 *0.16',
      y: '60*0.24 +60/5*8 *0.33 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 -100*0.14 *0.16',
      y: '60*0.24 +60/5*8 *0.25 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 -100*0.16 *0.16',
      y: '60*0.24 +60/5*8 *0.16 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 -100*0.26 *0.16',
      y: '60*0.24 +60/5*8 *0.16 *0.16',
    },
    { action: 'close' },
    {
      action: 'move',
      x: '100*0.15 -100*0.01 *0.16',
      y: '60*0.24 +60/5*8 *0.01 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.01 *0.16',
      y: '60*0.24 - 60*0.01 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.04 *0.16',
      y: '60*0.24 + 60*0.01 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.08 *0.16',
      y: '60*0.24 + 60*0.01 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.08 *0.16',
      y: '60*0.24 - 60*0.03 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.12 *0.16',
      y: '60*0.24 - 60*0.03 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.12 *0.16',
      y: '60*0.24 - 60*0.0 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.15 *0.16',
      y: '60*0.24 + 60*0.02 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.18 *0.16',
      y: '60*0.24 -60*0.01 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.22 *0.16',
      y: '60*0.24 + 60*0.01 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.18 *0.16',
      y: '60*0.24 + 60*0.04 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.20 *0.16',
      y: '60*0.24 + 60*0.08 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.25 *0.16',
      y: '60*0.24 + 60*0.08 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.25 *0.16',
      y: '60*0.24 + 60*0.12 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.20 *0.16',
      y: '60*0.24 + 60*0.12 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.18 *0.16',
      y: '60*0.24 + 60*0.16 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.21 *0.16',
      y: '60*0.24 + 60*0.19 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.18 *0.16',
      y: '60*0.24 + 60*0.22 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.15 *0.16',
      y: '60*0.24 + 60*0.19 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.12 *0.16',
      y: '60*0.24 + 60*0.21 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.12 *0.16',
      y: '60*0.24 + 60*0.25 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.08 *0.16',
      y: '60*0.24 + 60*0.26 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.08 *0.16',
      y: '60*0.24 + 60*0.21 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.05 *0.16',
      y: '60*0.24 + 60*0.18 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.01 *0.16',
      y: '60*0.24 + 60*0.22 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 - 100*0.02 *0.16',
      y: '60*0.24 + 60*0.19 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.0 *0.16',
      y: '60*0.24 + 60*0.16 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.0 *0.16',
      y: '60*0.24 + 60*0.12 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 -100*0.04 *0.16',
      y: '60*0.24 + 60*0.12 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 -100*0.04 *0.16',
      y: '60*0.24 + 60*0.08 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0 *0.16',
      y: '60*0.24 + 60*0.08 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 + 100*0.01 *0.16',
      y: '60*0.24 + 60*0.05 /5*8 *0.16',
    },
    {
      action: 'line',
      x: '100*0.15 -100*0.01 *0.16',
      y: '60*0.24 + 60*0.01 /5*8 *0.16',
    },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('script_task', [
    { action: 'move', x: '100*0.15- 100*0.05', y: '60*0.24- 60*0.1' },
    { action: 'line', x: '100*0.15 + 100*0.05', y: '60*0.24 - 60*0.1' },
    {
      action: 'curve',
      x1: '100*0.15 + 100*0.02',
      y1: '60*0.24 - 60*0.1',
      x2: '100*0.15 + 100*0.02',
      y2: '60*0.24',
      x: '100*0.15 + 100*0.04',
      y: '60*0.24',
    },
    {
      action: 'curve',
      x1: '100*0.15 + 100*0.06',
      y1: '60*0.24',
      x2: '100*0.15 + 100*0.06',
      y2: '60*0.24 + 60*0.1',
      x: '100*0.15 + 100*0.03',
      y: '60*0.24 + 60*0.1',
    },
    { action: 'line', x: '100*0.15 - 100*0.08', y: '60*0.24 + 60*0.1' },
    {
      action: 'curve',
      x1: '100*0.15 - 100*0.05',
      y1: '60*0.24 + 60*0.1',
      x2: '100*0.15 - 100*0.05',
      y2: '60*0.24',
      x: '100*0.15 - 100*0.07',
      y: '60*0.24',
    },
    {
      action: 'curve',
      x1: '100*0.15 - 100*0.09',
      y1: '60*0.24',
      x2: '100*0.15 - 100*0.09',
      y2: '60*0.24 - 60*0.1',
      x: '100*0.15 - 100*0.05',
      y: '60*0.24 - 60*0.1',
    },
    { action: 'close' },
    { action: 'move', x: '100*0.15 - 100*0.08', y: '60*0.24 - 60*0.05' },
    { action: 'line', x: '100*0.15 + 100*0.025', y: '60*0.24 - 60*0.05' },
    { action: 'move', x: '100*0.15 - 100*0.07', y: '60*0.24 - 0' },
    { action: 'line', x: '100*0.15 + 100*0.04', y: '60*0.24 - 0' },
    { action: 'move', x: '100*0.15 - 100*0.055', y: '60*0.24 + 60*0.06' },
    { action: 'line', x: '100*0.15 + 100*0.05', y: '60*0.24 + 60*0.06' },
  ])
  Schema.addGlobalCommand('business_rule', [
    { action: 'move', x: '100*0.15- 100*0.08', y: '60*0.24- 60*0.1' },
    { action: 'line', x: '100*0.15 + 100*0.08', y: '60*0.24- 60*0.1' },
    { action: 'line', x: '100*0.15 + 100*0.08', y: '60*0.24 + 60*0.1' },
    { action: 'line', x: '100*0.15 - 100*0.08', y: '60*0.24 + 60*0.1' },
    { action: 'close' },
    { action: 'move', x: '100*0.15 - 100*0.08', y: '60*0.24 - 60*0.05' },
    { action: 'line', x: '100*0.15 + 100*0.08', y: '60*0.24 - 60*0.05' },
    { action: 'move', x: '100*0.15 - 100*0.08', y: '60*0.24 + 60*0.0' },
    { action: 'line', x: '100*0.15 + 100*0.08', y: '60*0.24 + 60*0.0' },
    { action: 'move', x: '100*0.15 - 100*0.08', y: '60*0.24 + 60*0.05' },
    { action: 'line', x: '100*0.15 + 100*0.08', y: '60*0.24 + 60*0.05' },
    { action: 'move', x: '100*0.15 - 100*0.04', y: '60*0.24 - 60*0.1' },
    { action: 'line', x: '100*0.15 - 100*0.04', y: '60*0.24 + 60*0.1' },
  ])
  Schema.addGlobalCommand('user_task', [
    {
      action: 'move',
      x: '100*0.05+ 100/11*2*0.5-100/11*2*0.2',
      y: '60*0.1+ 60/55*16*0.3',
    },
    {
      action: 'curve',
      x1: '100*0.05+ 100/11*2*0.30',
      y1: '60*0.1+ 60/55*16*0.3 - 60/55*16*0.4*2/3',
      x2: '100*0.05+ 100/11*2*0.5+100/11*2*0.2',
      y2: '60*0.1+ 60/55*16*0.3 - 60/55*16*0.4*2/3',
      x: '100*0.05+ 100/11*2*0.5+100/11*2*0.2',
      y: '60*0.1+ 60/55*16*0.3',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.5-100/11*2*0.2',
      y: '60*0.1+ 60/55*16*0.3',
    },
    { action: 'close' },
    {
      action: 'move',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.1',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.96',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.1',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.68',
    },
    {
      action: 'quadraticCurve',
      x1: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.1',
      y1: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.45',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.35',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.45',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.35',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.58',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.60',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.58',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.60',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.45',
    },
    {
      action: 'quadraticCurve',
      x1: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.95',
      y1: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.45',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.95',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.68',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.95',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.96',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.77',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.96',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.77',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.77',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.77',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.96',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.23',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.96',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.23',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.77',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.23',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.96',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.05',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.96',
    },
    { action: 'close' },
    {
      action: 'move',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.35',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.45',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.38',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.42',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.35',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.40',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.32',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.35',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.32',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.27',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.43',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.27',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.46',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.24',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.68',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.24',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.68',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.35',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.60',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.40',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.62',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.42',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.60',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.45',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.60',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.58',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.35',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.58',
    },
    {
      action: 'line',
      x: '100*0.05+ 100/11*2*0.0 + 100/11*2*0.35',
      y: '60*0.1+ 60/55*16*0.0 + 60/55*16*0.45',
    },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('inner_roundRectangle', [
    { action: 'move', x: 'w * 0 +3', y: 'h * 0 + h/30 +3' },
    {
      action: 'quadraticCurve',
      x1: 'w * 0 +3 +1',
      y1: 'h * 0 +3 +1',
      x: 'w * 0 + h/30 +3',
      y: 'h * 0  +3',
    },
    { action: 'line', x: 'w * 1 - h/30 -3', y: 'h * 0 +3' },
    {
      action: 'quadraticCurve',
      x1: 'w * 1 -3',
      y1: 'h * 0+3',
      x: 'w * 1  -3',
      y: 'h * 0 + h/30 +3',
    },
    { action: 'line', x: 'w * 1 -3', y: 'h * 1 - h/30-3' },
    {
      action: 'quadraticCurve',
      x1: 'w * 1 -3',
      y1: 'h * 1 -3',
      x: 'w * 1 - h/30-3',
      y: 'h * 1 -3',
    },
    { action: 'line', x: 'w * 0 + h/30 +3', y: 'h * 1 -3' },
    {
      action: 'quadraticCurve',
      x1: 'w * 0+3',
      y1: 'h * 1-3',
      x: 'w * 0 +3',
      y: 'h * 1 - h/30 -3',
    },
    { action: 'line', x: 'w * 0 + 3', y: 'h * 0 + h/30+3' },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('exclusive_gateway', [
    { action: 'move', x: 'w*0.5', y: 'h*0.5' },
    {
      action: 'move',
      x: 'w*0.5 - w*0.5*0.4 + w*0.02',
      y: 'h*0.5 - h*0.5*0.4 - h*0.02',
    },
    {
      action: 'line',
      x: 'w*0.5 + w*0.5*0.4 + w*0.02',
      y: 'h*0.5 + h*0.5*0.4 - h*0.02',
    },
    {
      action: 'line',
      x: 'w*0.5 + w*0.5*0.4 - w*0.02',
      y: 'h*0.5 + h*0.5*0.4 + h*0.02',
    },
    {
      action: 'line',
      x: 'w*0.5 - w*0.5*0.4 - w*0.02',
      y: 'h*0.5 - h*0.5*0.4 + h*0.02',
    },
    { action: 'close' },
    {
      action: 'move',
      x: 'w*0.5 + w*0.5*0.4 - w*0.02',
      y: 'h*0.5 - h*0.5*0.4 - h*0.02',
    },
    {
      action: 'line',
      x: 'w*0.5 - w*0.5*0.4 - w*0.02',
      y: 'h*0.5 + h*0.5*0.4 - h*0.02',
    },
    {
      action: 'line',
      x: 'w*0.5 - w*0.5*0.4 + w*0.02',
      y: 'h*0.5 + h*0.5*0.4 + h*0.02',
    },
    {
      action: 'line',
      x: 'w*0.5 + w*0.5*0.4 + w*0.02',
      y: 'h*0.5 - h*0.5*0.4 + h*0.02',
    },
    {
      action: 'line',
      x: 'w*0.5 + w*0.5*0.4 - w*0.02',
      y: 'h*0.5 - h*0.5*0.4 - h*0.02',
    },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('complex_gateway0', [
    {
      action: 'move',
      x: 'w*0.5 - Math.min(w,h)*0.5*0.3 + Math.min(w,h)*0.02',
      y: 'h*0.5 - Math.min(w,h)*0.5*0.3 - Math.min(w,h)*0.02',
    },
    {
      action: 'line',
      x: 'w*0.5 + Math.min(w,h)*0.5*0.3 + Math.min(w,h)*0.02',
      y: 'h*0.5 + Math.min(w,h)*0.5*0.3 - Math.min(w,h)*0.03',
    },
    {
      action: 'line',
      x: 'w*0.5 + Math.min(w,h)*0.5*0.3 - Math.min(w,h)*0.02',
      y: 'h*0.5 + Math.min(w,h)*0.5*0.3 + Math.min(w,h)*0.02',
    },
    {
      action: 'line',
      x: 'w*0.5 - Math.min(w,h)*0.5*0.3 - Math.min(w,h)*0.02',
      y: 'h*0.5 - Math.min(w,h)*0.5*0.3 + Math.min(w,h)*0.02',
    },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('complex_gateway1', [
    {
      action: 'move',
      x: 'w*0.5 + Math.min(w,h)*0.5*0.3 - Math.min(w,h)*0.02',
      y: 'h*0.5 - Math.min(w,h)*0.5*0.3 - Math.min(w,h)*0.02',
    },
    {
      action: 'line',
      x: 'w*0.5 - Math.min(w,h)*0.5*0.3 - Math.min(w,h)*0.02',
      y: 'h*0.5 + Math.min(w,h)*0.5*0.3 - Math.min(w,h)*0.02',
    },
    {
      action: 'line',
      x: 'w*0.5 - Math.min(w,h)*0.5*0.3 + Math.min(w,h)*0.02',
      y: 'h*0.5 + Math.min(w,h)*0.5*0.3 + Math.min(w,h)*0.02',
    },
    {
      action: 'line',
      x: 'w*0.5 + Math.min(w,h)*0.5*0.3 + Math.min(w,h)*0.02',
      y: 'h*0.5 - Math.min(w,h)*0.5*0.3 + Math.min(w,h)*0.02',
    },
    {
      action: 'line',
      x: 'w*0.5 + Math.min(w,h)*0.5*0.3 - Math.min(w,h)*0.02',
      y: 'h*0.5 - Math.min(w,h)*0.5*0.3 - Math.min(w,h)*0.02',
    },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('complex_gateway2', [
    {
      action: 'move',
      x: 'w*0.5 - Math.min(w,h)*0.027',
      y: 'h*0.5 - Math.min(w,h)*0.5*0.4',
    },
    {
      action: 'line',
      x: 'w*0.5 - Math.min(w,h)*0.027',
      y: 'h*0.5 + Math.min(w,h)*0.5*0.4',
    },
    {
      action: 'line',
      x: 'w*0.5 + Math.min(w,h)*0.027',
      y: 'h*0.5 + Math.min(w,h)*0.5*0.4',
    },
    {
      action: 'line',
      x: 'w*0.5 + Math.min(w,h)*0.027',
      y: 'h*0.5 - Math.min(w,h)*0.5*0.4',
    },
    {
      action: 'line',
      x: 'w*0.5 - Math.min(w,h)*0.027',
      y: 'h*0.5 - Math.min(w,h)*0.5*0.4',
    },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('complex_gateway3', [
    {
      action: 'move',
      x: 'w*0.5 - Math.min(w,h)*0.5*0.4',
      y: 'h*0.5 - Math.min(w,h)*0.027',
    },
    {
      action: 'line',
      x: 'w*0.5 - Math.min(w,h)*0.5*0.4',
      y: 'h*0.5 + Math.min(w,h)*0.027',
    },
    {
      action: 'line',
      x: 'w*0.5 + Math.min(w,h)*0.5*0.4',
      y: 'h*0.5 + Math.min(w,h)*0.027',
    },
    {
      action: 'line',
      x: 'w*0.5 + Math.min(w,h)*0.5*0.4',
      y: 'h*0.5 - Math.min(w,h)*0.027',
    },
    {
      action: 'line',
      x: 'w*0.5 - Math.min(w,h)*0.5*0.4',
      y: 'h*0.5 - Math.min(w,h)*0.027',
    },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('event_based_gateway', [
    { action: 'move', x: 'w*0.5 - w*0.5/55*32', y: 'h*0.5' },
    {
      action: 'curve',
      x1: 'w*0.5 - w*0.5/55*32',
      y1: 'h*0.5 - h/55*32*2/3',
      x2: 'w*0.5 + w*0.5/55*32',
      y2: 'h*0.5 - h/55*32*2/3',
      x: 'w*0.5 + w*0.5/55*32',
      y: 'h*0.5',
    },
    {
      action: 'curve',
      x1: 'w*0.5 + w*0.5/55*32',
      y1: 'h*0.5 + h/55*32*2/3',
      x2: 'w*0.5 - w*0.5/55*32',
      y2: 'h*0.5 + h/55*32*2/3',
      x: 'w*0.5 - w*0.5/55*32',
      y: 'h*0.5',
    },
    { action: 'close' },
    { action: 'move', x: 'w*0.5 - w*0.4/55*32', y: 'h*0.5' },
    {
      action: 'curve',
      x1: 'w*0.5 - w*0.4/55*32',
      y1: 'h*0.5 - h/55*32*2/3*0.8',
      x2: 'w*0.5+w*0.4/55*32',
      y2: 'h*0.5 - h/55*32*2/3*0.8',
      x: 'w*0.5 + w*0.4/55*32',
      y: 'h*0.5',
    },
    {
      action: 'curve',
      x1: 'w*0.5 + w*0.4/55*32',
      y1: 'h*0.5 + h/55*32*2/3*0.8',
      x2: 'w*0.5 - w*0.4/55*32',
      y2: 'h*0.5 + h/55*32*2/3*0.8',
      x: 'w*0.5 - w*0.4/55*32',
      y: 'h*0.5',
    },
    { action: 'close' },
    { action: 'move', x: 'w*0.5', y: 'h*0.5 - h/55*32*0.28' },
    { action: 'line', x: 'w*0.5+ w/55*32*0.28', y: 'h*0.5- h/55*32*0.08' },
    { action: 'line', x: 'w*0.5+ w/55*32*0.17', y: 'h*0.5+h/55*32*0.25' },
    { action: 'line', x: 'w*0.5- w/55*32*0.17', y: 'h*0.5+ h/55*32*0.25' },
    { action: 'line', x: 'w*0.5- w/55*32*0.28', y: 'h*0.5-h/55*32*0.08' },
    { action: 'line', x: 'w*0.5', y: 'h*0.5-h/55*32*0.28' },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('event_based_start_gateway', [
    { action: 'move', x: 'w*0.5 - w*0.5/55*32', y: 'h*0.5' },
    {
      action: 'curve',
      x1: 'w*0.5 - w*0.5/55*32',
      y1: 'h*0.5 - h/55*32*2/3',
      x2: 'w*0.5 + w*0.5/55*32',
      y2: 'h*0.5 - h/55*32*2/3',
      x: 'w*0.5 + w*0.5/55*32',
      y: 'h*0.5',
    },
    {
      action: 'curve',
      x1: 'w*0.5 + w*0.5/55*32',
      y1: 'h*0.5 + h/55*32*2/3',
      x2: 'w*0.5 - w*0.5/55*32',
      y2: 'h*0.5 + h/55*32*2/3',
      x: 'w*0.5 - w*0.5/55*32',
      y: 'h*0.5',
    },
    { action: 'close' },
    { action: 'move', x: 'w*0.5', y: 'h*0.5 - h/55*32*0.28' },
    { action: 'line', x: 'w*0.5+ w/55*32*0.28', y: 'h*0.5- h/55*32*0.08' },
    { action: 'line', x: 'w*0.5+ w/55*32*0.17', y: 'h*0.5+h/55*32*0.25' },
    { action: 'line', x: 'w*0.5- w/55*32*0.17', y: 'h*0.5+ h/55*32*0.25' },
    { action: 'line', x: 'w*0.5- w/55*32*0.28', y: 'h*0.5-h/55*32*0.08' },
    { action: 'line', x: 'w*0.5', y: 'h*0.5-h/55*32*0.28' },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('parallel_gateway', [
    { action: 'move', x: 'w*0.5 - Math.min(w,h)*0.04', y: 'h*0.5 - h*0.5*0.5' },
    { action: 'line', x: 'w*0.5 - Math.min(w,h)*0.04', y: 'h*0.5 + h*0.5*0.5' },
    { action: 'line', x: 'w*0.5 + Math.min(w,h)*0.04', y: 'h*0.5 + h*0.5*0.5' },
    { action: 'line', x: 'w*0.5 + Math.min(w,h)*0.04', y: 'h*0.5 - h*0.5*0.5' },
    { action: 'line', x: 'w*0.5 - Math.min(w,h)*0.04', y: 'h*0.5 - h*0.5*0.5' },
    { action: 'close' },
    { action: 'move', x: 'w*0.5 - w*0.5*0.5', y: 'h*0.5 - Math.min(w,h)*0.04' },
    { action: 'line', x: 'w*0.5 - w*0.5*0.5', y: 'h*0.5 + Math.min(w,h)*0.04' },
    { action: 'line', x: 'w*0.5 + w*0.5*0.5', y: 'h*0.5 + Math.min(w,h)*0.04' },
    { action: 'line', x: 'w*0.5 + w*0.5*0.5', y: 'h*0.5 - Math.min(w,h)*0.04' },
    { action: 'line', x: 'w*0.5 - w*0.5*0.5', y: 'h*0.5 - Math.min(w,h)*0.04' },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('parallel_eventbased_gateway', [
    {
      action: 'move',
      x: 'w*0.5 - Math.min(w,h)*0.027',
      y: 'h*0.5 - Math.min(w,h)*0.5*0.4',
    },
    {
      action: 'line',
      x: 'w*0.5 - Math.min(w,h)*0.027',
      y: 'h*0.5 - Math.min(w,h)*0.02',
    },
    {
      action: 'line',
      x: 'w*0.5 - Math.min(w,h)*0.5*0.4',
      y: 'h*0.5 - Math.min(w,h)*0.027',
    },
    {
      action: 'line',
      x: 'w*0.5 - Math.min(w,h)*0.5*0.4',
      y: 'h*0.5 + Math.min(w,h)*0.027',
    },
    {
      action: 'line',
      x: 'w*0.5 - Math.min(w,h)*0.027',
      y: 'h*0.5 + Math.min(w,h)*0.027',
    },
    {
      action: 'line',
      x: 'w*0.5 - Math.min(w,h)*0.027',
      y: 'h*0.5 + Math.min(w,h)*0.5*0.4',
    },
    {
      action: 'line',
      x: 'w*0.5 + Math.min(w,h)*0.027',
      y: 'h*0.5 + Math.min(w,h)*0.5*0.4',
    },
    {
      action: 'line',
      x: 'w*0.5 + Math.min(w,h)*0.027',
      y: 'h*0.5 + Math.min(w,h)*0.027',
    },
    {
      action: 'line',
      x: 'w*0.5 + Math.min(w,h)*0.5*0.4',
      y: 'h*0.5 + Math.min(w,h)*0.027',
    },
    {
      action: 'line',
      x: 'w*0.5 + Math.min(w,h)*0.5*0.4',
      y: 'h*0.5 - Math.min(w,h)*0.027',
    },
    {
      action: 'line',
      x: 'w*0.5 + Math.min(w,h)*0.027',
      y: 'h*0.5 - Math.min(w,h)*0.027',
    },
    {
      action: 'line',
      x: 'w*0.5 + Math.min(w,h)*0.027',
      y: 'h*0.5 - Math.min(w,h)*0.5*0.4',
    },
    {
      action: 'line',
      x: 'w*0.5 - Math.min(w,h)*0.027',
      y: 'h*0.5 - Math.min(w,h)*0.5*0.4',
    },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('data_in_object', [
    { action: 'move', x: 'w/3/4', y: 'h/4/3+3' },
    { action: 'line', x: 'w/3/4*3.5', y: 'h/4/3+3' },
    { action: 'line', x: 'w/3/4*3.5', y: 'h/4/3-h/4/5+3' },
    { action: 'line', x: 'w/3/4*5', y: 'h/4/2+3' },
    { action: 'line', x: 'w/3/4*3.5', y: 'h/4/2+h/4/2-h/4/3+h/4/5+3' },
    { action: 'line', x: 'w/3/4*3.5', y: 'h/4/2+h/4/2-h/4/3+3' },
    { action: 'line', x: 'w/3/4', y: 'h/4/2+h/4/2-h/4/3+3' },
    { action: 'line', x: 'w/3/4', y: 'h/4/3+3' },
    { action: 'close' },
  ])
  Schema.addGlobalCommand('choreography_task', [
    { action: 'move', x: '0', y: '6' },
    { action: 'quadraticCurve', x1: '0', y1: '0', x: '6', y: '0' },
    { action: 'line', x: 'w-6', y: '0' },
    { action: 'quadraticCurve', x1: 'w', y1: '0', x: 'w', y: '6' },
    { action: 'line', x: 'w', y: 'h-6' },
    { action: 'quadraticCurve', x1: 'w', y1: 'h', x: 'w-6', y: 'h' },
    { action: 'line', x: '6', y: 'h' },
    { action: 'quadraticCurve', x1: '0', y1: 'h', x: '0', y: 'h-6' },
    { action: 'line', x: '0', y: '6' },
    { action: 'close' },
  ])
  Schema.addShape({
    name: 'startEvent',
    title: '开始事件',
    category: 'bpmn',
    groupName: 'startEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [{ lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } }],
  })
  Schema.addShape({
    name: 'intermediateEvent',
    title: '中间事件',
    category: 'bpmn',
    groupName: 'intermediateEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
    ],
  })
  Schema.addShape({
    name: 'boundaryEvent',
    title: '边界事件',
    category: 'bpmn',
    groupName: 'boundaryEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
    ],
  })
  Schema.addShape({
    name: 'endEvent',
    title: '结束事件',
    category: 'bpmn',
    groupName: 'endEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      {
        lineStyle: { lineWidth: 'lineWidth + 2', lineStyle: 'solid' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'task',
    title: '任务',
    category: 'bpmn',
    groupName: 'task',
    dataAttributes: [
      {
        name: '循环特征',
        type: 'list',
        value: '',
        category: 'default',
        listItems: ['', '标准', '多例'],
      },
      { name: '是否为序列', type: 'boolean', value: 'true', category: 'default' },
      {
        name: '是否为补偿',
        type: 'boolean',
        value: 'false',
        category: 'default',
      },
      { name: '资源 ', type: 'string', value: '', category: 'default' },
      { name: '缺省', type: 'string', value: '', category: 'default' },
      { name: 'IO声明', type: 'string', value: '', category: 'default' },
      { name: '数据输入集合', type: 'string', value: '', category: 'default' },
      { name: '数据输出集合', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 100, h: 70 },
    path: [{ actions: { ref: 'roundRectangle' } }],
  })
  Schema.addShape({
    name: 'callActivity',
    title: '活动',
    category: 'bpmn',
    groupName: 'callActivity',
    dataAttributes: [
      { name: '回调对象', type: 'string', value: '', category: 'default' },
      { name: 'IO声明', type: 'string', value: '', category: 'default' },
      { name: '数据输入集合', type: 'string', value: '', category: 'default' },
      { name: '数据输出集合', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 100, h: 70 },
    path: [
      {
        lineStyle: { lineWidth: 'lineWidth + 2' },
        actions: { ref: 'roundRectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'subProcess',
    title: '子流程',
    text: '',
    category: 'bpmn',
    groupName: 'subProcess',
    attribute: {
      container: true,
      collapsable: true,
      collapsed: false,
      rotatable: false,
    },
    dataAttributes: [
      {
        name: '循环特征',
        type: 'list',
        value: '',
        category: 'default',
        listItems: ['', '标准', '多例'],
      },
      { name: '是否为序列', type: 'boolean', value: 'true', category: 'default' },
      {
        name: '是否为补偿',
        type: 'boolean',
        value: 'false',
        category: 'default',
      },
      { name: '资源 ', type: 'string', value: '', category: 'default' },
      { name: '开始令牌', type: 'number', value: '1', category: 'default' },
      { name: '结束令牌', type: 'number', value: '1', category: 'default' },
      { name: '缺省', type: 'string', value: '', category: 'default' },
      { name: 'IO声明', type: 'string', value: '', category: 'default' },
      { name: '数据输入集合', type: 'string', value: '', category: 'default' },
      { name: '数据输出集合', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 400, h: 280 },
    path: [{ actions: { ref: 'roundRectangle' } }],
  })
  Schema.addShape({
    name: 'bpmnGateway',
    title: '网关',
    category: 'bpmn',
    groupName: 'bpmnGateway',
    dataAttributes: [
      {
        name: '网关方向',
        type: 'list',
        value: '',
        category: 'default',
        listItems: [
          '未声明',
          '聚集(多输入流，单输出流)',
          '分支(多输出流，单输入流)',
          '混合',
        ],
      },
      { name: '缺省', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 50, h: 50 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [{ actions: { ref: 'gateway0' } }],
  })
  Schema.addShape({
    name: 'dataObject',
    title: '数据对象',
    category: 'bpmn',
    groupName: 'dataObject',
    dataAttributes: [
      {
        name: '是否为集合',
        type: 'boolean',
        value: 'false',
        category: 'default',
      },
      { name: '主题引用项', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 70, h: 90 },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: 'w', y: 'h*0.25' },
          { action: 'line', x: 'w*2/3', y: '0' },
          { action: 'line', x: '0', y: '0' },
          { action: 'close' },
        ],
      },
      {
        actions: [
          { action: 'move', x: 'w*2/3', y: '0' },
          { action: 'line', x: 'w*2/3', y: 'h*0.25' },
          { action: 'line', x: 'w', y: 'h*0.25' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'textAnnotation',
    title: '注释',
    category: 'bpmn',
    dataAttributes: [
      { name: '文本', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 100, h: 70 },
    anchors: [
      { x: '0', y: 'h*0.5' },
      { x: '0', y: 'h*0.5' },
      { x: '0', y: 'h*0.5' },
      { x: '0', y: 'h*0.5' },
    ],
    path: [
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'Math.min(w/6, 20)', y: '0' },
          { action: 'line', x: '0', y: '0' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: 'Math.min(w/6, 20)', y: 'h' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'group',
    title: '组',
    category: 'bpmn',
    attribute: { container: true },
    props: { w: 200, h: 140 },
    lineStyle: { lineWidth: 2, lineStyle: 'dashed' },
    path: [{ actions: { ref: 'roundRectangle' } }],
  })
  Schema.addShape({
    name: 'dataStore',
    title: '数据存储',
    category: 'bpmn',
    props: { w: 70, h: 70 },
    textBlock: [{ position: { x: '0', y: 'h/3', w: 'w', h: 'h*2/3' } }],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h*0.14' },
          {
            action: 'curve',
            x1: '0',
            y1: '-h*0.04',
            x2: 'w',
            y2: '-h*0.04',
            x: 'w',
            y: 'h*0.14',
          },
          { action: 'line', x: 'w', y: 'h*0.86' },
          {
            action: 'curve',
            x1: 'w',
            y1: 'h*1.04',
            x2: '0',
            y2: 'h*1.04',
            x: '0',
            y: 'h*0.86',
          },
          { action: 'line', x: '0', y: 'h*0.14' },
          { action: 'close' },
        ],
      },
      {
        actions: [
          { action: 'move', x: 'w', y: 'h*0.14' },
          {
            action: 'curve',
            x1: 'w',
            y1: 'h*0.3',
            x2: '0',
            y2: 'h*0.3',
            x: '0',
            y: 'h*0.14',
          },
          { action: 'line', x: '0', y: 'h*0.20' },
          {
            action: 'curve',
            x1: '0',
            y1: 'h*0.36',
            x2: 'w',
            y2: 'h*0.36',
            x: 'w',
            y: 'h*0.20',
          },
          { action: 'line', x: 'w', y: 'h*0.26' },
          {
            action: 'curve',
            x1: 'w',
            y1: 'h*0.42',
            x2: '0',
            y2: 'h*0.42',
            x: '0',
            y: 'h*0.26',
          },
          {
            action: 'curve',
            x1: '0',
            y1: 'h*0.42',
            x2: 'w',
            y2: 'h*0.42',
            x: 'w',
            y: 'h*0.26',
          },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: '0', y: 'h*0.1' },
          {
            action: 'quadraticCurve',
            x1: 'w*0.5',
            y1: '-h*0.1',
            x: 'w',
            y: 'h*0.1',
          },
          { action: 'line', x: 'w', y: 'h*0.9' },
          {
            action: 'quadraticCurve',
            x1: 'w*0.5',
            y1: 'h*1.1',
            x: '0',
            y: 'h*0.9',
          },
          { action: 'line', x: '0', y: 'h*0.1' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'conversation',
    title: '对话',
    category: 'bpmn',
    groupName: 'conversation',
    props: { w: 45, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      {
        actions: [
          { action: 'move', x: 'Math.min(w,h)*0.21', y: '0' },
          { action: 'line', x: 'w-Math.min(w,h)*0.21', y: '0' },
          { action: 'line', x: 'w', y: 'h*0.5' },
          { action: 'line', x: 'w-Math.min(w,h)*0.21', y: 'h' },
          { action: 'line', x: 'Math.min(w,h)*0.21', y: 'h' },
          { action: 'line', x: '0', y: 'h*0.5' },
          { action: 'line', x: 'Math.min(w,h)*0.21', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  function drawChoreographyIcon(a, d, c) {
    var f = [
      {
        actions: [
          { action: 'move', x: 0, y: 4 },
          { action: 'quadraticCurve', x1: 0, y1: 0, x: 4, y: 0 },
          { action: 'line', x: a - 4, y: 0 },
          { action: 'quadraticCurve', x1: a, y1: 0, x: a, y: 4 },
          { action: 'line', x: a, y: d - 4 },
          { action: 'quadraticCurve', x1: a, y1: d, x: a - 4, y: d },
          { action: 'line', x: 4, y: d },
          { action: 'quadraticCurve', x1: 0, y1: d, x: 0, y: d - 4 },
          { action: 'line', x: 0, y: 4 },
          { action: 'close' },
        ],
      },
      {
        actions: [
          { action: 'move', x: 0, y: 4 },
          { action: 'quadraticCurve', x1: 0, y1: 0, x: 4, y: 0 },
          { action: 'line', x: a - 4, y: 0 },
          { action: 'quadraticCurve', x1: a, y1: 0, x: a, y: 4 },
          { action: 'line', x: a, y: 5 },
          { action: 'line', x: 0, y: 5 },
          { action: 'line', x: 0, y: 4 },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { color: '194,194,194' },
        actions: [
          { action: 'move', x: 0, y: d - 5 },
          { action: 'line', x: a, y: d - 5 },
          { action: 'line', x: a, y: d - 4 },
          { action: 'quadraticCurve', x1: a, y1: d, x: a - 4, y: d },
          { action: 'line', x: 4, y: d },
          { action: 'quadraticCurve', x1: 0, y1: d, x: 0, y: d - 4 },
          { action: 'close' },
        ],
      },
    ]
    if (c) {
      for (var b = 0; b < f.length; b++) {
        var e = f[b]
        e.lineStyle = { lineWidth: 3 }
      }
    }
    return f
  }
  Schema.addShape({
    name: 'choreographyTask',
    title: '编排任务',
    category: 'bpmn',
    groupName: 'choreographyTask',
    dataAttributes: [
      {
        name: '循环类型',
        type: 'list',
        value: '',
        category: 'default',
        listItems: ['', '标准', '实例化多例序列', '实例化多例并行'],
      },
      { name: '实例化参与者', type: 'string', value: '', category: 'default' },
    ],
    attribute: { markerOffset: 30 },
    props: { w: 120, h: 120 },
    textBlock: [
      { position: { x: 5, y: '30', w: 'w-10', h: 'h-60' }, text: '编排任务' },
      { position: { x: 5, y: 0, w: 'w-10', h: 25 }, text: '参与者 A' },
      { position: { x: 5, y: 'h-25', w: 'w-10', h: 25 }, text: '参与者 B' },
    ],
    path: [
      { lineStyle: { lineWidth: 0 }, actions: { ref: 'choreography_task' } },
      {
        fillStyle: { type: 'solid', color: 'r-50,g-50,b-50' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: 0, y: 'h-25' },
          { action: 'line', x: 'w', y: 'h-25' },
          { action: 'line', x: 'w', y: 'h-6' },
          { action: 'quadraticCurve', x1: 'w', y1: 'h', x: 'w-6', y: 'h' },
          { action: 'line', x: '6', y: 'h' },
          { action: 'quadraticCurve', x1: '0', y1: 'h', x: '0', y: 'h-6' },
          { action: 'close' },
        ],
      },
      {
        fileStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 0, y: 25 },
          { action: 'line', x: 'w', y: 25 },
        ],
      },
      {
        fileStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 0, y: 'h-25' },
          { action: 'line', x: 'w', y: 'h-25' },
        ],
      },
      { fillStyle: { type: 'none' }, actions: { ref: 'choreography_task' } },
    ],
    drawIcon: function (a, b) {
      return drawChoreographyIcon(a, b, false)
    },
  })
  Schema.addShape({
    name: 'message',
    title: '消息',
    category: 'bpmn',
    props: { w: 60, h: 40 },
    path: [
      { actions: { ref: 'rectangle' } },
      {
        lineStyle: { lineStyle: 'solid' },
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w*0.5', y: 'h*0.5' },
          { action: 'move', x: 'w', y: '0' },
          { action: 'line', x: 'w*0.5', y: 'h*0.5' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'messageStartEvent',
    title: '消息开始事件(可中断)',
    category: 'bpmn',
    groupName: 'startEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'message0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'timerStartEvent',
    title: '定时开始事件(可中断)',
    category: 'bpmn',
    groupName: 'startEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'timer0' } },
      {
        lineStyle: { lineWidth: 1, lineStyle: 'solid' },
        actions: { ref: 'timer0_needle' },
      },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'timer0_num' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'conditionalStartEvent',
    title: '条件开始事件(可中断)',
    category: 'bpmn',
    groupName: 'startEvent',
    dataAttributes: [
      { name: '条件', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'conditional0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'signalStartEvent',
    title: '信号开始事件(可中断)',
    category: 'bpmn',
    groupName: 'startEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'signal0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'escalationStartEvent',
    title: '上升开始事件(可中断)',
    category: 'bpmn',
    groupName: 'startEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'escalation0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'compensationStartEvent',
    title: '补偿开始事件(可中断)',
    category: 'bpmn',
    groupName: 'startEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'compensation0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'errorStartEvent',
    title: '错误开始事件(可中断)',
    category: 'bpmn',
    groupName: 'startEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'error0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'multipleStartEvent',
    title: '多例开始事件(可中断)',
    category: 'bpmn',
    groupName: 'startEvent',
    dataAttributes: [
      { name: '定义事件', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'multiple0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'parallelStartEvent',
    title: '并行开始事件(可中断)',
    category: 'bpmn',
    groupName: 'startEvent',
    dataAttributes: [
      { name: '定义事件', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'parallel0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'messageNonInturruptingEvent',
    title: '消息开始事件(非中断)',
    category: 'bpmn',
    groupName: 'startEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      {
        lineStyle: { lineWidth: 2, lineStyle: 'dashed' },
        actions: { ref: 'round' },
      },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'message0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'timerNonInturruptingEvent',
    title: '定时开始事件(非中断)',
    category: 'bpmn',
    groupName: 'startEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      {
        lineStyle: { lineWidth: 2, lineStyle: 'dashed' },
        actions: { ref: 'round' },
      },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'timer0' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'timer0_needle' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'timer0_num' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'escalationNonInturruptingEvent',
    title: '上升开始事件(非中断)',
    category: 'bpmn',
    groupName: 'startEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      {
        lineStyle: { lineWidth: 2, lineStyle: 'dashed' },
        actions: { ref: 'round' },
      },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'escalation0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'conditionalNonInturruptingEvent',
    title: '条件开始事件(非中断)',
    category: 'bpmn',
    groupName: 'startEvent',
    dataAttributes: [
      { name: '条件', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      {
        lineStyle: { lineWidth: 2, lineStyle: 'dashed' },
        actions: { ref: 'round' },
      },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'conditional0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'signalNonInturruptingEvent',
    title: '信号开始事件(非中断)',
    category: 'bpmn',
    groupName: 'startEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      {
        lineStyle: { lineWidth: 2, lineStyle: 'dashed' },
        actions: { ref: 'round' },
      },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'signal0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'multipleNonInturruptingEvent',
    title: '多例开始事件(非中断)',
    category: 'bpmn',
    groupName: 'startEvent',
    dataAttributes: [
      { name: '定义事件', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      {
        lineStyle: { lineWidth: 2, lineStyle: 'dashed' },
        actions: { ref: 'round' },
      },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'multiple0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'parallelNonInturruptingEvent',
    title: '并行开始事件(非中断)',
    category: 'bpmn',
    groupName: 'startEvent',
    dataAttributes: [
      { name: '定义事件', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      {
        lineStyle: { lineWidth: 2, lineStyle: 'dashed' },
        actions: { ref: 'round' },
      },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'parallel0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'messageIntermediateCatchEvent',
    title: '消息中间捕获事件',
    category: 'bpmn',
    groupName: 'intermediateEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'message0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'timerIntermediateCatchEvent',
    title: '定时捕获事件',
    category: 'bpmn',
    groupName: 'intermediateEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'timer0' } },
      {
        lineStyle: { lineWidth: 1, lineStyle: 'solid' },
        actions: { ref: 'timer0_needle' },
      },
      {
        lineStyle: { lineWidth: 2, lineStyle: 'solid' },
        actions: { ref: 'timer0_num' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'escalationIntermediateCatchEvent',
    title: '上升中间捕获事件',
    category: 'bpmn',
    groupName: 'intermediateEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'escalation0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'conditionalIntermediateCatchEvent',
    title: '条件中间捕获事件',
    category: 'bpmn',
    groupName: 'intermediateEvent',
    dataAttributes: [
      { name: '条件', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'conditional0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'linkIntermediateCatchEvent',
    title: '连接中间捕获事件',
    category: 'bpmn',
    groupName: 'intermediateEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'link3' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'signalIntermediateCatchEvent',
    title: '信号中间捕获事件',
    category: 'bpmn',
    groupName: 'intermediateEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'signal0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'multipleIntermediateCatchEvent',
    title: '多例中间捕获事件',
    category: 'bpmn',
    groupName: 'intermediateEvent',
    dataAttributes: [
      { name: '定义事件', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'multiple0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'parallelIntermediateCatchEvent',
    title: '并行中间捕获事件',
    category: 'bpmn',
    groupName: 'intermediateEvent',
    dataAttributes: [
      { name: '定义事件', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'parallel0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'compensationIntermediateCatchEvent',
    title: '补偿中间捕获事件',
    category: 'bpmn',
    groupName: 'intermediateEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'compensation0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'errorIntermediateCatchEvent',
    title: '错误中间捕获事件',
    category: 'bpmn',
    groupName: 'intermediateEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'error0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'cancelIntermediateCatchEvent',
    title: '取消中间捕获事件',
    category: 'bpmn',
    groupName: 'intermediateEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'cancel3' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'messageIntermediateThrowingEvent',
    title: '消息中间抛出事件',
    category: 'bpmn',
    groupName: 'intermediateEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      {
        lineStyle: { lineWidth: 1, lineColor: '255,255,255', lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'message4' },
      },
      {
        lineStyle: { lineWidth: 1, lineColor: '255,255,255', lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'message4_0' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'escalationIntermediateThrowingEvent',
    title: '上升中间抛出事件',
    category: 'bpmn',
    groupName: 'intermediateEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'escalation0' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'linkIntermediateThrowingEvent',
    title: '连接中间抛出事件',
    category: 'bpmn',
    groupName: 'intermediateEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      {
        lineStyle: { lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'link3' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'compensationIntermediateThrowingEvent',
    title: '补偿中间抛出事件',
    category: 'bpmn',
    groupName: 'intermediateEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'compensation0' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'signalIntermediateThrowingEvent',
    title: '信号中间抛出事件',
    category: 'bpmn',
    groupName: 'intermediateEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'signal0' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'multipleIntermediateThrowingEvent',
    title: '多例中间抛出事件',
    category: 'bpmn',
    groupName: 'intermediateEvent',
    dataAttributes: [
      { name: '定义事件', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'multiple0' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'messageBoundaryInturrputingEvent',
    title: '消息边界事件(可中断)',
    category: 'bpmn',
    groupName: 'boundaryEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'message0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'timerBoundaryInturrputingEvent',
    title: '定时边界事件(可中断)',
    category: 'bpmn',
    groupName: 'boundaryEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'timer0' } },
      {
        lineStyle: { lineWidth: 1, lineStyle: 'solid' },
        actions: { ref: 'timer0_needle' },
      },
      {
        lineStyle: { lineWidth: 2, lineStyle: 'solid' },
        actions: { ref: 'timer0_num' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'escalationBoundaryInturrputingEvent',
    title: '上升边界事件(可中断)',
    category: 'bpmn',
    groupName: 'boundaryEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'escalation0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'conditionalBoundaryInturrputingEvent',
    title: '条件边界事件(可中断)',
    dataAttributes: [
      { name: '条件', type: 'string', value: '', category: 'default' },
    ],
    category: 'bpmn',
    groupName: 'boundaryEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'conditional0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'signalBoundaryInturrputingEvent',
    title: '信号边界事件(可中断)',
    category: 'bpmn',
    groupName: 'boundaryEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'signal0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'multipleBoundaryInturrputingEvent',
    title: '多例边界事件(可中断)',
    category: 'bpmn',
    groupName: 'boundaryEvent',
    dataAttributes: [
      { name: '定义事件', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'multiple0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'parallelBoundaryInturrputingEvent',
    title: '并行边界事件(可中断)',
    category: 'bpmn',
    groupName: 'boundaryEvent',
    dataAttributes: [
      { name: '定义事件', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'parallel0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'compensationBoundaryInturrputingEvent',
    title: '补偿边界事件(可中断)',
    category: 'bpmn',
    groupName: 'boundaryEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'compensation0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'errorBoundaryInturrputingEvent',
    title: '错误边界事件(可中断)',
    category: 'bpmn',
    groupName: 'boundaryEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'error0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'cancelBoundaryInturrputingEvent',
    title: '取消边界事件(可中断)',
    category: 'bpmn',
    groupName: 'boundaryEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'cancel3' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'boundaryNonInturrputingEvent',
    title: '绑定边界事件(非中断)',
    category: 'bpmn',
    groupName: 'boundaryEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'dashed' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'dashed' }, actions: { ref: 'inneround' } },
    ],
  })
  Schema.addShape({
    name: 'messageBoundaryNonInturruptingEvent',
    title: '消息边界事件(非中断)',
    category: 'bpmn',
    groupName: 'boundaryEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'dashed' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'dashed' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'message0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'timerBoundaryNonInturruptingEvent',
    title: '定时边界事件(非中断)',
    category: 'bpmn',
    groupName: 'boundaryEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'dashed' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'dashed' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'timer0' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'timer0_needle' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'timer0_num' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'escalationBoundaryNonInturruptingEvent',
    title: '上升边界事件(非中断)',
    category: 'bpmn',
    groupName: 'boundaryEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'dashed' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'dashed' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'escalation0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'conditionalBoundaryNonInturruptingEvent',
    title: '条件边界事件(非中断)',
    category: 'bpmn',
    groupName: 'boundaryEvent',
    dataAttributes: [
      { name: '条件', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'dashed' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'dashed' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'conditional0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'signalBoundaryNonInturruptingEvent',
    title: '信号边界事件(非中断)',
    category: 'bpmn',
    groupName: 'boundaryEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'dashed' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'dashed' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'signal0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'multipleBoundaryNonInturruptingEvent',
    title: '多例边界事件(非中断)',
    category: 'bpmn',
    groupName: 'boundaryEvent',
    dataAttributes: [
      { name: '多例并行', type: 'string', value: '', category: 'default' },
      { name: '定义事件', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'dashed' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'dashed' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'multiple0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'parallelBoundaryNonInturruptingEvent',
    title: '并行边界事件(非中断)',
    category: 'bpmn',
    groupName: 'boundaryEvent',
    dataAttributes: [
      { name: '多例并行', type: 'string', value: '', category: 'default' },
      { name: '定义事件', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { lineStyle: { lineStyle: 'dashed' }, actions: { ref: 'round' } },
      { lineStyle: { lineStyle: 'dashed' }, actions: { ref: 'inneround' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'parallel0' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'messageEndEvent',
    title: '消息结束事件',
    category: 'bpmn',
    groupName: 'endEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      {
        lineStyle: { lineWidth: 'lineWidth + 2', lineStyle: 'solid' },
        actions: { ref: 'round' },
      },
      {
        lineStyle: { lineWidth: 1, lineColor: '255,255,255', lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'message4' },
      },
      {
        lineStyle: { lineWidth: 1, lineColor: '255,255,255', lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'message4_0' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'escalatEndEvent',
    title: '上升结束事件',
    category: 'bpmn',
    groupName: 'endEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      {
        lineStyle: { lineWidth: 'lineWidth + 2', lineStyle: 'solid' },
        actions: { ref: 'round' },
      },
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'escalation0' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'cancelEndEvent',
    title: '取消结束事件',
    category: 'bpmn',
    groupName: 'endEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      {
        lineStyle: { lineWidth: 'lineWidth + 2', lineStyle: 'solid' },
        actions: { ref: 'round' },
      },
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'cancel3' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'errorEndEvent',
    title: '错误结束事件',
    category: 'bpmn',
    groupName: 'endEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      {
        lineStyle: { lineWidth: 'lineWidth + 2', lineStyle: 'solid' },
        actions: { ref: 'round' },
      },
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'error0' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'compensationEndEvent',
    title: '补偿结束事件',
    category: 'bpmn',
    groupName: 'endEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      {
        lineStyle: { lineWidth: 'lineWidth + 2', lineStyle: 'solid' },
        actions: { ref: 'round' },
      },
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'compensation0' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'signalEndEvent',
    title: '信号结束事件',
    category: 'bpmn',
    groupName: 'endEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      {
        lineStyle: { lineWidth: 'lineWidth + 2', lineStyle: 'solid' },
        actions: { ref: 'round' },
      },
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'signal0' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'multipleEndEvent',
    title: '多例结束事件',
    category: 'bpmn',
    groupName: 'endEvent',
    dataAttributes: [
      { name: '定义事件', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      {
        lineStyle: { lineWidth: 'lineWidth + 2', lineStyle: 'solid' },
        actions: { ref: 'round' },
      },
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'multiple0' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'terminate',
    title: '终止事件',
    category: 'bpmn',
    groupName: 'endEvent',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      {
        lineStyle: { lineWidth: 'lineWidth + 2', lineStyle: 'solid' },
        actions: { ref: 'round' },
      },
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'g_round' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'manualTask',
    title: '人工任务',
    text: '',
    category: 'bpmn',
    groupName: 'task',
    dataAttributes: [
      {
        name: '循环特征',
        type: 'list',
        value: '',
        category: 'default',
        listItems: ['', '标准', '多例'],
      },
      { name: '是否为序列', type: 'boolean', value: 'true', category: 'default' },
      {
        name: '是否为补偿',
        type: 'boolean',
        value: 'false',
        category: 'default',
      },
    ],
    props: { w: 100, h: 70 },
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'roundRectangle' } },
      {
        lineStyle: { lineWidth: 1, lineColor: '50,50,50', lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '255,255,255' },
        actions: { ref: 'manual_task' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'roundRectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'receiveTask',
    title: '接收任务',
    text: '',
    category: 'bpmn',
    groupName: 'task',
    dataAttributes: [
      {
        name: '循环特征',
        type: 'list',
        value: '',
        category: 'default',
        listItems: ['', '标准', '多例'],
      },
      { name: '是否为序列', type: 'boolean', value: 'true', category: 'default' },
      {
        name: '是否为补偿',
        type: 'boolean',
        value: 'false',
        category: 'default',
      },
    ],
    props: { w: 100, h: 70 },
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'roundRectangle' } },
      {
        lineStyle: { lineWidth: 1, lineColor: '50,50,50', lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '255,255,255' },
        actions: { ref: 'receive_task' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'roundRectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'sendTask',
    title: '发送任务',
    text: '',
    category: 'bpmn',
    groupName: 'task',
    dataAttributes: [
      {
        name: '循环特征',
        type: 'list',
        value: '',
        category: 'default',
        listItems: ['', '标准', '多例'],
      },
      { name: '是否为序列', type: 'boolean', value: 'true', category: 'default' },
      {
        name: '是否为补偿',
        type: 'boolean',
        value: 'false',
        category: 'default',
      },
    ],
    props: { w: 100, h: 70 },
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'roundRectangle' } },
      {
        lineStyle: { lineWidth: 1, lineColor: '255,255,255', lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '0,0,0' },
        actions: { ref: 'receive_task_dark' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'roundRectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'serviceTask',
    title: '服务任务',
    text: '',
    category: 'bpmn',
    groupName: 'task',
    dataAttributes: [
      {
        name: '循环特征',
        type: 'list',
        value: '',
        category: 'default',
        listItems: ['', '标准', '多例'],
      },
      { name: '是否为序列', type: 'boolean', value: 'true', category: 'default' },
      {
        name: '是否为补偿',
        type: 'boolean',
        value: 'false',
        category: 'default',
      },
      { name: '执行', type: 'string', value: '', category: 'default' },
      { name: '操作', type: 'string', value: '', category: 'default' },
      { name: 'IO声明', type: 'string', value: '', category: 'default' },
      { name: '数据输入集合', type: 'string', value: '', category: 'default' },
      { name: '数据输出集合', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 100, h: 70 },
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'roundRectangle' } },
      {
        lineStyle: { lineWidth: 1, lineColor: '50,50,50', lineStyle: 'solid' },
        fillStyle: { type: 'none' },
        actions: { ref: 'service_task' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'roundRectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'scriptTask',
    title: '脚本任务',
    text: '',
    category: 'bpmn',
    groupName: 'task',
    dataAttributes: [
      {
        name: '循环特征',
        type: 'list',
        value: '',
        category: 'default',
        listItems: ['', '标准', '多例'],
      },
      { name: '是否为序列', type: 'boolean', value: 'true', category: 'default' },
      {
        name: '是否为补偿',
        type: 'boolean',
        value: 'false',
        category: 'default',
      },
    ],
    props: { w: 100, h: 70 },
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'roundRectangle' } },
      {
        lineStyle: { lineWidth: 1, lineColor: '50,50,50', lineStyle: 'solid' },
        fillStyle: { type: 'none' },
        actions: { ref: 'script_task' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'roundRectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'businessRuleTask',
    title: '业务规则任务',
    text: '',
    category: 'bpmn',
    groupName: 'task',
    dataAttributes: [
      {
        name: '循环特征',
        type: 'list',
        value: '',
        category: 'default',
        listItems: ['', '标准', '多例'],
      },
      { name: '是否为序列', type: 'boolean', value: 'true', category: 'default' },
      {
        name: '是否为补偿',
        type: 'boolean',
        value: 'false',
        category: 'default',
      },
    ],
    props: { w: 100, h: 70 },
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'roundRectangle' } },
      {
        lineStyle: { lineWidth: 1, lineColor: '50,50,50', lineStyle: 'solid' },
        fillStyle: { type: 'none' },
        actions: { ref: 'business_rule' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'roundRectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'userTask',
    title: '用户任务',
    text: '',
    category: 'bpmn',
    groupName: 'task',
    dataAttributes: [
      {
        name: '循环特征',
        type: 'list',
        value: '',
        category: 'default',
        listItems: ['', '标准', '多例'],
      },
      { name: '是否为序列', type: 'boolean', value: 'true', category: 'default' },
      {
        name: '是否为补偿',
        type: 'boolean',
        value: 'false',
        category: 'default',
      },
      { name: '渲染', type: 'string', value: '', category: 'default' },
      { name: '执行', type: 'string', value: '', category: 'default' },
      { name: '资源 ', type: 'string', value: '', category: 'default' },
      { name: 'IO声明', type: 'string', value: '', category: 'default' },
      { name: '数据输入集合', type: 'string', value: '', category: 'default' },
      { name: '数据输出集合', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 100, h: 70 },
    path: [
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'roundRectangle' } },
      {
        lineStyle: { lineWidth: 1, lineColor: '50,50,50', lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '255,255,255' },
        actions: { ref: 'user_task' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'roundRectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'manualCallActivity',
    title: '人工活动',
    text: '',
    category: 'bpmn',
    groupName: 'callActivity',
    dataAttributes: [
      {
        name: '循环特征',
        type: 'list',
        value: '',
        category: 'default',
        listItems: ['', '标准', '多例'],
      },
      { name: '是否为序列', type: 'boolean', value: 'true', category: 'default' },
      {
        name: '是否为补偿',
        type: 'boolean',
        value: 'false',
        category: 'default',
      },
    ],
    props: { w: 100, h: 70 },
    path: [
      {
        lineStyle: { lineWidth: 'lineWidth + 2' },
        actions: { ref: 'roundRectangle' },
      },
      {
        lineStyle: { lineWidth: 1, lineColor: '50,50,50', lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '255,255,255' },
        actions: { ref: 'manual_task' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'roundRectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'scriptCallActivity',
    title: '脚本活动',
    text: '',
    category: 'bpmn',
    groupName: 'callActivity',
    dataAttributes: [
      {
        name: '循环特征',
        type: 'list',
        value: '',
        category: 'default',
        listItems: ['', '标准', '多例'],
      },
      { name: '是否为序列', type: 'boolean', value: 'true', category: 'default' },
      {
        name: '是否为补偿',
        type: 'boolean',
        value: 'false',
        category: 'default',
      },
    ],
    props: { w: 100, h: 70 },
    path: [
      {
        lineStyle: { lineWidth: 'lineWidth + 2' },
        actions: { ref: 'roundRectangle' },
      },
      {
        lineStyle: { lineWidth: 1, lineColor: '50,50,50', lineStyle: 'solid' },
        fillStyle: { type: 'none' },
        actions: { ref: 'script_task' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'roundRectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'businessRuleCallActivity',
    title: '业务规则活动',
    text: '',
    category: 'bpmn',
    groupName: 'callActivity',
    dataAttributes: [
      {
        name: '循环特征',
        type: 'list',
        value: '',
        category: 'default',
        listItems: ['', '标准', '多例'],
      },
      { name: '是否为序列', type: 'boolean', value: 'true', category: 'default' },
      {
        name: '是否为补偿',
        type: 'boolean',
        value: 'false',
        category: 'default',
      },
    ],
    props: { w: 100, h: 70 },
    path: [
      {
        lineStyle: { lineWidth: 'lineWidth + 2' },
        actions: { ref: 'roundRectangle' },
      },
      {
        lineStyle: { lineWidth: 1, lineColor: '50,50,50', lineStyle: 'solid' },
        fillStyle: { type: 'none' },
        actions: { ref: 'business_rule' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'roundRectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'userCallActivity',
    title: '用户活动',
    text: '',
    category: 'bpmn',
    groupName: 'callActivity',
    dataAttributes: [
      {
        name: '循环特征',
        type: 'list',
        value: '',
        category: 'default',
        listItems: ['', '标准', '多例'],
      },
      { name: '是否为序列', type: 'boolean', value: 'true', category: 'default' },
      {
        name: '是否为补偿',
        type: 'boolean',
        value: 'false',
        category: 'default',
      },
      { name: '渲染', type: 'string', value: '', category: 'default' },
      { name: '执行', type: 'string', value: '', category: 'default' },
      { name: '资源 ', type: 'string', value: '', category: 'default' },
      { name: 'IO声明', type: 'string', value: '', category: 'default' },
      { name: '数据输入集合', type: 'string', value: '', category: 'default' },
      { name: '数据输出集合', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 100, h: 70 },
    path: [
      {
        lineStyle: { lineWidth: 'lineWidth + 2' },
        actions: { ref: 'roundRectangle' },
      },
      {
        lineStyle: { lineWidth: 1, lineColor: '50,50,50', lineStyle: 'solid' },
        fillStyle: { type: 'none' },
        actions: { ref: 'user_task' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'roundRectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'callActivityCallProcess',
    title: '回调全局流程',
    text: '',
    category: 'bpmn',
    groupName: 'callActivity',
    dataAttributes: [
      {
        name: '循环特征',
        type: 'list',
        value: '',
        category: 'default',
        listItems: ['', '标准', '多例'],
      },
      { name: '是否为序列', type: 'boolean', value: 'true', category: 'default' },
      {
        name: '是否为补偿',
        type: 'boolean',
        value: 'false',
        category: 'default',
      },
      { name: '渲染', type: 'string', value: '', category: 'default' },
      { name: '执行', type: 'string', value: '', category: 'default' },
      { name: '资源 ', type: 'string', value: '', category: 'default' },
      { name: 'IO声明', type: 'string', value: '', category: 'default' },
      { name: '数据输入集合', type: 'string', value: '', category: 'default' },
      { name: '数据输出集合', type: 'string', value: '', category: 'default' },
    ],
    attribute: { container: true, markers: ['expand'] },
    props: { w: 100, h: 70 },
    path: [
      {
        lineStyle: { lineWidth: 'lineWidth + 2' },
        actions: { ref: 'roundRectangle' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'roundRectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'callActivityCallProcessExpanded',
    title: '回调全局流程(展开)',
    text: '',
    category: 'bpmn',
    groupName: 'callActivity',
    dataAttributes: [
      {
        name: '循环特征',
        type: 'list',
        value: '',
        category: 'default',
        listItems: ['', '标准', '多例'],
      },
      { name: '是否为序列', type: 'boolean', value: 'true', category: 'default' },
      {
        name: '是否为补偿',
        type: 'boolean',
        value: 'false',
        category: 'default',
      },
      { name: '渲染', type: 'string', value: '', category: 'default' },
      { name: '执行', type: 'string', value: '', category: 'default' },
      { name: '资源 ', type: 'string', value: '', category: 'default' },
      { name: 'IO声明', type: 'string', value: '', category: 'default' },
      { name: '数据输入集合', type: 'string', value: '', category: 'default' },
      { name: '数据输出集合', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 200, h: 140 },
    path: [
      {
        lineStyle: { lineWidth: 'lineWidth + 2' },
        actions: { ref: 'roundRectangle' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'roundRectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'adHocSubProcess',
    title: '即席子流程',
    text: '',
    category: 'bpmn',
    groupName: 'subProcess',
    dataAttributes: [
      { name: '开始令牌', type: 'number', value: '1', category: 'default' },
      { name: '结束令牌', type: 'number', value: '1', category: 'default' },
      { name: '缺省', type: 'string', value: '', category: 'default' },
      { name: 'IO声明', type: 'string', value: '', category: 'default' },
      { name: '数据输入集合', type: 'string', value: '', category: 'default' },
      { name: '数据输出集合', type: 'string', value: '', category: 'default' },
    ],
    attribute: {
      container: true,
      markers: ['ad_hoc'],
      collapsable: true,
      collapsed: false,
      rotatable: false,
    },
    props: { w: 400, h: 280 },
    path: [{ actions: { ref: 'roundRectangle' } }],
  })
  Schema.addShape({
    name: 'transactionSubProcess',
    title: '事物子流程',
    text: '',
    category: 'bpmn',
    groupName: 'subProcess',
    dataAttributes: [
      { name: '开始令牌', type: 'number', value: '1', category: 'default' },
      { name: '结束令牌', type: 'number', value: '1', category: 'default' },
      { name: '缺省', type: 'string', value: '', category: 'default' },
      { name: 'IO声明', type: 'string', value: '', category: 'default' },
      { name: '数据输入集合', type: 'string', value: '', category: 'default' },
      { name: '数据输出集合', type: 'string', value: '', category: 'default' },
    ],
    attribute: {
      container: true,
      collapsable: true,
      collapsed: false,
      rotatable: false,
    },
    props: { w: 400, h: 280 },
    path: [
      { fillStyle: { type: 'none' }, actions: { ref: 'roundRectangle' } },
      {
        lineStyle: { lineStyle: 'solid' },
        fillStyle: { type: 'none' },
        actions: { ref: 'inner_roundRectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ebSubProcess',
    title: '事件子流程',
    text: '',
    category: 'bpmn',
    groupName: 'subProcess',
    attribute: {
      container: true,
      collapsable: true,
      collapsed: false,
      rotatable: false,
    },
    props: { w: 400, h: 280 },
    path: [
      { lineStyle: { lineStyle: 'dashed' }, actions: { ref: 'roundRectangle' } },
    ],
  })
  Schema.addShape({
    name: 'exclusiveGateway',
    title: '互斥网关',
    category: 'bpmn',
    groupName: 'bpmnGateway',
    dataAttributes: [
      {
        name: '网关方向',
        type: 'list',
        value: '',
        category: 'default',
        listItems: [
          '未声明',
          '聚集(多输入流，单输出流)',
          '分支(多输出流，单输入流)',
          '混合',
        ],
      },
      { name: '缺省', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 50, h: 50 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { actions: { ref: 'gateway0' } },
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: [
          {
            action: 'move',
            x: 'w*0.5 + w*0.5*0.4 - w*0.02',
            y: 'h*0.5 - h*0.5*0.4 - h*0.02',
          },
          {
            action: 'line',
            x: 'w*0.5 - w*0.5*0.4 - w*0.02',
            y: 'h*0.5 + h*0.5*0.4 - h*0.02',
          },
          {
            action: 'line',
            x: 'w*0.5 - w*0.5*0.4 + w*0.02',
            y: 'h*0.5 + h*0.5*0.4 + h*0.02',
          },
          {
            action: 'line',
            x: 'w*0.5 + w*0.5*0.4 + w*0.02',
            y: 'h*0.5 - h*0.5*0.4 + h*0.02',
          },
          {
            action: 'line',
            x: 'w*0.5 + w*0.5*0.4 - w*0.02',
            y: 'h*0.5 - h*0.5*0.4 - h*0.02',
          },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: [
          { action: 'move', x: 'w*0.5', y: 'h*0.5' },
          {
            action: 'move',
            x: 'w*0.5 - w*0.5*0.4 + w*0.02',
            y: 'h*0.5 - h*0.5*0.4 - h*0.02',
          },
          {
            action: 'line',
            x: 'w*0.5 + w*0.5*0.4 + w*0.02',
            y: 'h*0.5 + h*0.5*0.4 - h*0.02',
          },
          {
            action: 'line',
            x: 'w*0.5 + w*0.5*0.4 - w*0.02',
            y: 'h*0.5 + h*0.5*0.4 + h*0.02',
          },
          {
            action: 'line',
            x: 'w*0.5 - w*0.5*0.4 - w*0.02',
            y: 'h*0.5 - h*0.5*0.4 + h*0.02',
          },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'gateway0' },
      },
    ],
  })
  Schema.addShape({
    name: 'inclusiveGateway',
    title: '相容网关',
    category: 'bpmn',
    groupName: 'bpmnGateway',
    dataAttributes: [
      {
        name: '网关方向',
        type: 'list',
        value: '',
        category: 'default',
        listItems: [
          '未声明',
          '聚集(多输入流，单输出流)',
          '分支(多输出流，单输入流)',
          '混合',
        ],
      },
      { name: '缺省', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 50, h: 50 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { actions: { ref: 'gateway0' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'g_round' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'gateway0' },
      },
    ],
  })
  Schema.addShape({
    name: 'complexGateway',
    title: '复杂网关',
    category: 'bpmn',
    groupName: 'bpmnGateway',
    dataAttributes: [
      {
        name: '网关方向',
        type: 'list',
        value: '',
        category: 'default',
        listItems: [
          '未声明',
          '聚集(多输入流，单输出流)',
          '分支(多输出流，单输入流)',
          '混合',
        ],
      },
      { name: '激活条件', type: 'string', value: '', category: 'default' },
      { name: '激活次数', type: 'number', value: '', category: 'default' },
      { name: '等待开始', type: 'boolean', value: 'true', category: 'default' },
      { name: '缺省', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 50, h: 50 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { actions: { ref: 'gateway0' } },
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'complex_gateway0' },
      },
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'complex_gateway1' },
      },
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'complex_gateway2' },
      },
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'complex_gateway3' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'gateway0' },
      },
    ],
  })
  Schema.addShape({
    name: 'eventBasedGateway',
    title: '事件网关',
    category: 'bpmn',
    groupName: 'bpmnGateway',
    dataAttributes: [
      {
        name: '网关方向',
        type: 'list',
        value: '',
        category: 'default',
        listItems: [
          '未声明',
          '聚集(多输入流，单输出流)',
          '分支(多输出流，单输入流)',
          '混合',
        ],
      },
      { name: '实例化', type: 'boolean', value: 'false', category: 'default' },
    ],
    props: { w: 50, h: 50 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { actions: { ref: 'gateway0' } },
      {
        lineStyle: { lineStyle: 'solid' },
        actions: { ref: 'event_based_gateway' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'gateway0' },
      },
    ],
  })
  Schema.addShape({
    name: 'eventBasedStartGateway',
    title: '实例化事件网关',
    category: 'bpmn',
    groupName: 'bpmnGateway',
    dataAttributes: [
      {
        name: '网关方向',
        type: 'list',
        value: '',
        category: 'default',
        listItems: [
          '未声明',
          '聚集(多输入流，单输出流)',
          '分支(多输出流，单输入流)',
          '混合',
        ],
      },
      { name: '实例化', type: 'boolean', value: 'false', category: 'default' },
    ],
    props: { w: 50, h: 50 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { actions: { ref: 'gateway0' } },
      {
        lineStyle: { lineStyle: 'solid' },
        actions: { ref: 'event_based_start_gateway' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'gateway0' },
      },
    ],
  })
  Schema.addShape({
    name: 'parallelGateway',
    title: '并行网关',
    category: 'bpmn',
    groupName: 'bpmnGateway',
    dataAttributes: [
      {
        name: '网关方向',
        type: 'list',
        value: '',
        category: 'default',
        listItems: [
          '未声明',
          '聚集(多输入流，单输出流)',
          '分支(多输出流，单输入流)',
          '混合',
        ],
      },
    ],
    props: { w: 50, h: 50 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { actions: { ref: 'gateway0' } },
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'parallel_gateway' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'gateway0' },
      },
    ],
  })
  Schema.addShape({
    name: 'parallelEBGateway',
    title: '实例化并行网关',
    category: 'bpmn',
    groupName: 'bpmnGateway',
    dataAttributes: [
      {
        name: '网关方向',
        type: 'list',
        value: '',
        category: 'default',
        listItems: [
          '未声明',
          '聚集(多输入流，单输出流)',
          '分支(多输出流，单输入流)',
          '混合',
        ],
      },
      { name: '实例化', type: 'boolean', value: 'false', category: 'default' },
    ],
    props: { w: 50, h: 50 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      { actions: { ref: 'gateway0' } },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'g_round' } },
      {
        lineStyle: { lineStyle: 'solid' },
        actions: { ref: 'parallel_eventbased_gateway' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'gateway0' },
      },
    ],
  })
  Schema.addShape({
    name: 'dataInObject',
    title: '输入数据对象',
    category: 'bpmn',
    groupName: 'dataObject',
    dataAttributes: [
      {
        name: '是否为集合',
        type: 'boolean',
        value: 'false',
        category: 'default',
      },
      { name: '主题引用项', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 90, h: 120 },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: 'w', y: 'h*0.25' },
          { action: 'line', x: 'w*2/3', y: '0' },
          { action: 'line', x: '0', y: '0' },
          { action: 'close' },
        ],
      },
      {
        actions: [
          { action: 'move', x: 'w*2/3', y: '0' },
          { action: 'line', x: 'w*2/3', y: 'h*0.25' },
          { action: 'line', x: 'w', y: 'h*0.25' },
        ],
      },
      { lineStyle: { lineStyle: 'solid' }, actions: { ref: 'data_in_object' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'dataOutObject',
    title: '输出数据对象',
    category: 'bpmn',
    groupName: 'dataObject',
    dataAttributes: [
      {
        name: '是否为集合',
        type: 'boolean',
        value: 'false',
        category: 'default',
      },
      { name: '主题引用项', type: 'string', value: '', category: 'default' },
    ],
    props: { w: 90, h: 120 },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: 'w', y: 'h*0.25' },
          { action: 'line', x: 'w*2/3', y: '0' },
          { action: 'line', x: '0', y: '0' },
          { action: 'close' },
        ],
      },
      {
        actions: [
          { action: 'move', x: 'w*2/3', y: '0' },
          { action: 'line', x: 'w*2/3', y: 'h*0.25' },
          { action: 'line', x: 'w', y: 'h*0.25' },
        ],
      },
      {
        lineStyle: { lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'data_in_object' },
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'subConversation',
    title: '子对话',
    category: 'bpmn',
    groupName: 'conversation',
    attribute: { container: true, markers: ['expand'] },
    props: { w: 45, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      {
        actions: [
          { action: 'move', x: 'Math.min(w,h)*0.21', y: '0' },
          { action: 'line', x: 'w-Math.min(w,h)*0.21', y: '0' },
          { action: 'line', x: 'w', y: 'h*0.5' },
          { action: 'line', x: 'w-Math.min(w,h)*0.21', y: 'h' },
          { action: 'line', x: 'Math.min(w,h)*0.21', y: 'h' },
          { action: 'line', x: '0', y: 'h*0.5' },
          { action: 'line', x: 'Math.min(w,h)*0.21', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'callConversation',
    title: '回调对话(全局)',
    category: 'bpmn',
    groupName: 'conversation',
    props: { w: 45, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      {
        lineStyle: { lineWidth: 'lineWidth + 2' },
        actions: [
          { action: 'move', x: 'Math.min(w,h)*0.21', y: '0' },
          { action: 'line', x: 'w-Math.min(w,h)*0.21', y: '0' },
          { action: 'line', x: 'w', y: 'h*0.5' },
          { action: 'line', x: 'w-Math.min(w,h)*0.21', y: 'h' },
          { action: 'line', x: 'Math.min(w,h)*0.21', y: 'h' },
          { action: 'line', x: '0', y: 'h*0.5' },
          { action: 'line', x: 'Math.min(w,h)*0.21', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'callCollabConversation',
    title: '回调对话(协作)',
    category: 'bpmn',
    groupName: 'conversation',
    attribute: { container: true, markers: ['expand'] },
    props: { w: 45, h: 40 },
    textBlock: [{ position: { x: 'w/2-60', y: 'h', w: '120', h: '30' } }],
    path: [
      {
        lineStyle: { lineWidth: 'lineWidth + 2' },
        actions: [
          { action: 'move', x: 'Math.min(w,h)*0.21', y: '0' },
          { action: 'line', x: 'w-Math.min(w,h)*0.21', y: '0' },
          { action: 'line', x: 'w', y: 'h*0.5' },
          { action: 'line', x: 'w-Math.min(w,h)*0.21', y: 'h' },
          { action: 'line', x: 'Math.min(w,h)*0.21', y: 'h' },
          { action: 'line', x: '0', y: 'h*0.5' },
          { action: 'line', x: 'Math.min(w,h)*0.21', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'subChoreography',
    title: '子编排任务',
    category: 'bpmn',
    groupName: 'choreographyTask',
    dataAttributes: [
      { name: '实例化参与者', type: 'string', value: '', category: 'default' },
    ],
    attribute: { markers: ['expand'], markerOffset: 30 },
    props: { w: 120, h: 120 },
    textBlock: [
      { position: { x: 5, y: '30', w: 'w-10', h: 'h-60' }, text: '子编排任务' },
      { position: { x: 5, y: 0, w: 'w-10', h: 25 }, text: '参与者 A' },
      { position: { x: 5, y: 'h-25', w: 'w-10', h: 25 }, text: '参与者 B' },
    ],
    path: [
      { lineStyle: { lineWidth: 0 }, actions: { ref: 'choreography_task' } },
      {
        fillStyle: { type: 'solid', color: 'r-50,g-50,b-50' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: 0, y: 'h-25' },
          { action: 'line', x: 'w', y: 'h-25' },
          { action: 'line', x: 'w', y: 'h-6' },
          { action: 'quadraticCurve', x1: 'w', y1: 'h', x: 'w-6', y: 'h' },
          { action: 'line', x: '6', y: 'h' },
          { action: 'quadraticCurve', x1: '0', y1: 'h', x: '0', y: 'h-6' },
          { action: 'close' },
        ],
      },
      {
        fileStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 0, y: 25 },
          { action: 'line', x: 'w', y: 25 },
        ],
      },
      {
        fileStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 0, y: 'h-25' },
          { action: 'line', x: 'w', y: 'h-25' },
        ],
      },
      { fillStyle: { type: 'none' }, actions: { ref: 'choreography_task' } },
    ],
    drawIcon: function (a, b) {
      return drawChoreographyIcon(a, b, false)
    },
  })
  Schema.addShape({
    name: 'callChoreographyGlobal',
    title: '回调编排任务(全局)',
    category: 'bpmn',
    groupName: 'choreographyTask',
    dataAttributes: [
      {
        name: '循环类型',
        type: 'list',
        value: '',
        category: 'default',
        listItems: ['', '标准', '实例化多例序列', '实例化多例并行'],
      },
      { name: '实例化参与者', type: 'string', value: '', category: 'default' },
    ],
    attribute: { markerOffset: 30 },
    props: { w: 120, h: 120 },
    textBlock: [
      { position: { x: 5, y: '30', w: 'w-10', h: 'h-60' }, text: '' },
      { position: { x: 5, y: 0, w: 'w-10', h: 25 }, text: '参与者 A' },
      { position: { x: 5, y: 'h-25', w: 'w-10', h: 25 }, text: '参与者 B' },
    ],
    path: [
      { lineStyle: { lineWidth: 0 }, actions: { ref: 'choreography_task' } },
      {
        fillStyle: { type: 'solid', color: 'r-50,g-50,b-50' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: 0, y: 'h-25' },
          { action: 'line', x: 'w', y: 'h-25' },
          { action: 'line', x: 'w', y: 'h-6' },
          { action: 'quadraticCurve', x1: 'w', y1: 'h', x: 'w-6', y: 'h' },
          { action: 'line', x: '6', y: 'h' },
          { action: 'quadraticCurve', x1: '0', y1: 'h', x: '0', y: 'h-6' },
          { action: 'close' },
        ],
      },
      {
        fileStyle: { type: 'none' },
        lineStyle: { lineWidth: 'lineWidth+2' },
        actions: [
          { action: 'move', x: 0, y: 25 },
          { action: 'line', x: 'w', y: 25 },
        ],
      },
      {
        fileStyle: { type: 'none' },
        lineStyle: { lineWidth: 'lineWidth+2' },
        actions: [
          { action: 'move', x: 0, y: 'h-25' },
          { action: 'line', x: 'w', y: 'h-25' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 'lineWidth+2' },
        actions: { ref: 'choreography_task' },
      },
    ],
    drawIcon: function (a, b) {
      return drawChoreographyIcon(a, b, true)
    },
  })
  Schema.addShape({
    name: 'callChoreography',
    title: '回调编排任务(编排)',
    text: '',
    category: 'bpmn',
    groupName: 'choreographyTask',
    dataAttributes: [
      { name: '实例化参与者', type: 'string', value: '', category: 'default' },
    ],
    attribute: { markers: ['expand'], markerOffset: 30 },
    props: { w: 120, h: 120 },
    textBlock: [
      { position: { x: 5, y: '30', w: 'w-10', h: 'h-60' }, text: '' },
      { position: { x: 5, y: 0, w: 'w-10', h: 25 }, text: '参与者 A' },
      { position: { x: 5, y: 'h-25', w: 'w-10', h: 25 }, text: '参与者 B' },
    ],
    path: [
      { lineStyle: { lineWidth: 0 }, actions: { ref: 'choreography_task' } },
      {
        fillStyle: { type: 'solid', color: 'r-50,g-50,b-50' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: 0, y: 'h-25' },
          { action: 'line', x: 'w', y: 'h-25' },
          { action: 'line', x: 'w', y: 'h-6' },
          { action: 'quadraticCurve', x1: 'w', y1: 'h', x: 'w-6', y: 'h' },
          { action: 'line', x: '6', y: 'h' },
          { action: 'quadraticCurve', x1: '0', y1: 'h', x: '0', y: 'h-6' },
          { action: 'close' },
        ],
      },
      {
        fileStyle: { type: 'none' },
        lineStyle: { lineWidth: 'lineWidth+2' },
        actions: [
          { action: 'move', x: 0, y: 25 },
          { action: 'line', x: 'w', y: 25 },
        ],
      },
      {
        fileStyle: { type: 'none' },
        lineStyle: { lineWidth: 'lineWidth+2' },
        actions: [
          { action: 'move', x: 0, y: 'h-25' },
          { action: 'line', x: 'w', y: 'h-25' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 'lineWidth+2' },
        actions: { ref: 'choreography_task' },
      },
    ],
    drawIcon: function (a, b) {
      return drawChoreographyIcon(a, b, true)
    },
  })
  Schema.addCategory({
    name: 'evc',
    text: 'EVC 企业价值链',
    dataAttributes: [
      { name: '序号', type: 'number', value: '', category: 'default' },
      { name: '名称', type: 'string', value: '', category: 'default' },
      { name: '所有者', type: 'string', value: '', category: 'default' },
      { name: '连接', type: 'link', value: '', category: 'default' },
      { name: '便笺', type: 'string', value: '', category: 'default' },
      { name: '成本', type: 'number', value: '', category: 'default' },
      { name: '时间', type: 'number', value: '', category: 'default' },
      { name: '部门', type: 'string', value: '', category: 'default' },
      { name: '输入', type: 'string', value: '', category: 'default' },
      { name: '输出', type: 'string', value: '', category: 'default' },
      { name: '风险', type: 'string', value: '', category: 'default' },
      { name: '备注', type: 'string', value: '', category: 'default' },
    ],
  })
  Schema.addShape({
    name: 'valueChain1',
    title: '价值链1',
    category: 'evc',
    props: { w: 150, h: 70 },
    textBlock: [
      {
        position: {
          x: 'Math.min(h/2,w/6)',
          y: '0',
          w: 'w-Math.min(h/2,w/6)*2',
          h: 'h',
        },
      },
    ],
    anchors: [
      { x: 'w*0.5', y: '0' },
      { x: 'w', y: 'h*0.5' },
      { x: 'w*0.5', y: 'h' },
      { x: 'Math.min(h/2,w/6)', y: 'h*0.5' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: 'Math.min(h/2,w/6)', y: 'h*0.5' },
          { action: 'line', x: '0', y: '0' },
          { action: 'line', x: 'w-Math.min(h/2,w/6)', y: '0' },
          { action: 'line', x: 'w', y: 'h*0.5' },
          { action: 'line', x: 'w-Math.min(h/2,w/6)', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: 'Math.min(h/2,w/6)', y: 'h*0.5' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'valueChain2',
    title: '价值链2',
    category: 'evc',
    props: { w: 150, h: 70 },
    textBlock: [
      {
        position: {
          x: 'Math.min(h/2,w/6)',
          y: '0',
          w: 'w-Math.min(h/2,w/6)*2',
          h: 'h',
        },
      },
    ],
    anchors: [
      { x: 'w*0.5', y: '0' },
      { x: 'w-Math.min(h/2,w/6)', y: 'h*0.5' },
      { x: 'w*0.5', y: 'h' },
      { x: '0', y: 'h*0.5' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h*0.5' },
          { action: 'line', x: 'Math.min(h/2,w/6)', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w-Math.min(h/2,w/6)', y: 'h*0.5' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: 'Math.min(h/2,w/6)', y: 'h' },
          { action: 'line', x: '0', y: 'h*0.5' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'valueChain3',
    title: '价值链3',
    category: 'evc',
    props: { w: 150, h: 70 },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w-Math.min(h/2,w/6)', y: '0' },
          { action: 'line', x: 'w', y: 'h*0.5' },
          { action: 'line', x: 'w-Math.min(h/2,w/6)', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'valueChain4',
    title: '价值链4',
    category: 'evc',
    props: { w: 150, h: 70 },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h*0.5' },
          { action: 'line', x: 'Math.min(h/2,w/6)', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: 'Math.min(h/2,w/6)', y: 'h' },
          { action: 'line', x: '0', y: 'h*0.5' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'valueChain5',
    title: '价值链5',
    category: 'evc',
    props: { w: 150, h: 70 },
    textBlock: [
      {
        position: {
          x: '0',
          y: 'Math.min(h/2,w/6)',
          w: 'w',
          h: 'h-Math.min(h/2,w/6)',
        },
      },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: 'w*0.5', y: '0' },
          { action: 'line', x: 'w', y: 'Math.min(h/2,w/6)' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: 'Math.min(h/2,w/6)' },
          { action: 'line', x: 'w*0.5', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'valueChain6',
    title: '价值链6',
    category: 'evc',
    props: { w: 150, h: 70 },
    textBlock: [
      { position: { x: '0', y: '0', w: 'w', h: 'h-Math.min(h/2,w/6)' } },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h-Math.min(h/2,w/6)' },
          { action: 'line', x: 'w*0.5', y: 'h' },
          { action: 'line', x: '0', y: 'h-Math.min(h/2,w/6)' },
          { action: 'line', x: '0', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addCategory({
    name: 'epc',
    text: 'EPC 事件过程链',
    dataAttributes: [
      { name: '序号', type: 'number', value: '', category: 'default' },
      { name: '名称', type: 'string', value: '', category: 'default' },
      { name: '所有者', type: 'string', value: '', category: 'default' },
      { name: '连接', type: 'link', value: '', category: 'default' },
      { name: '便笺', type: 'string', value: '', category: 'default' },
      { name: '成本', type: 'number', value: '', category: 'default' },
      { name: '时间', type: 'number', value: '', category: 'default' },
      { name: '部门', type: 'string', value: '', category: 'default' },
      { name: '输入', type: 'string', value: '', category: 'default' },
      { name: '输出', type: 'string', value: '', category: 'default' },
      { name: '风险', type: 'string', value: '', category: 'default' },
      { name: '备注', type: 'string', value: '', category: 'default' },
    ],
  })
  Schema.addShape({
    name: 'event',
    title: '事件',
    category: 'epc',
    props: { w: 100, h: 70 },
    lineStyle: { lineWidth: 2, lineColor: '165,8,179' },
    fillStyle: {
      type: 'gradient',
      gradientType: 'linear',
      beginColor: '232,115,242',
      endColor: '209,43,224',
      angle: Math.PI * 0.5,
    },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h*0.5' },
          { action: 'line', x: 'Math.min(h/2,w/6)', y: '0' },
          { action: 'line', x: 'w-Math.min(h/2,w/6)', y: '0' },
          { action: 'line', x: 'w', y: 'h*0.5' },
          { action: 'line', x: 'w-Math.min(h/2,w/6)', y: 'h' },
          { action: 'line', x: 'Math.min(h/2,w/6)', y: 'h' },
          { action: 'line', x: '0', y: 'h*0.5' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'method',
    title: '功能',
    category: 'epc',
    props: { w: 100, h: 70 },
    lineStyle: { lineWidth: 2, lineColor: '0,100,0' },
    fillStyle: {
      type: 'gradient',
      gradientType: 'linear',
      beginColor: '0,255,0',
      endColor: '0,180,0',
      angle: Math.PI * 0.5,
    },
    path: [
      {
        actions: [
          { action: 'move', x: 'w*0', y: '5' },
          { action: 'quadraticCurve', x1: '0', y1: '0', x: '5', y: '0' },
          { action: 'line', x: 'w-5', y: '0' },
          { action: 'quadraticCurve', x1: 'w', y1: '0', x: 'w', y: '5' },
          { action: 'line', x: 'w', y: 'h-5' },
          { action: 'quadraticCurve', x1: 'w', y1: 'h', x: 'w-5', y: 'h' },
          { action: 'line', x: '5', y: 'h' },
          { action: 'quadraticCurve', x1: '0', y1: 'h', x: '0', y: 'h-5' },
          { action: 'line', x: '0', y: '5' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'procedure',
    title: '流程路径',
    category: 'epc',
    props: { w: 100, h: 70 },
    lineStyle: { lineWidth: 2, lineColor: '68,170,170' },
    fillStyle: {
      type: 'gradient',
      gradientType: 'linear',
      beginColor: '239,253,253',
      endColor: '160,255,255',
      angle: Math.PI * 0.5,
    },
    textBlock: [{ position: { x: '0', y: '0', w: 'w*0.8', h: 'h*0.8' } }],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '4*0.8' },
          { action: 'quadraticCurve', x1: '0', y1: '0', x: '4*0.8', y: '0' },
          { action: 'line', x: '(w-4)*0.8', y: '0' },
          {
            action: 'quadraticCurve',
            x1: 'w*0.8',
            y1: '0',
            x: 'w*0.8',
            y: '4*0.8',
          },
          { action: 'line', x: 'w*0.8', y: '(h-4)*0.8' },
          {
            action: 'quadraticCurve',
            x1: 'w*0.8',
            y1: 'h*0.8',
            x: '(w-4)*0.8',
            y: 'h*0.8',
          },
          { action: 'line', x: '4*0.8', y: 'h*0.8' },
          {
            action: 'quadraticCurve',
            x1: '0',
            y1: 'h*0.8',
            x: '0',
            y: '(h-4)*0.8',
          },
          { action: 'line', x: '0', y: '4*0.8' },
          { action: 'move', x: 'w*0.8', y: '6' },
          { action: 'line', x: 'w', y: 'h*0.5' },
          { action: 'line', x: '(w-4)*0.8', y: 'h' },
          { action: 'line', x: 'w*3/8', y: 'h' },
          { action: 'line', x: 'w/4', y: 'h*0.8' },
          { action: 'line', x: '(w-4)*0.8', y: 'h*0.8' },
          {
            action: 'quadraticCurve',
            x1: 'w*0.8',
            y1: 'h*0.8',
            x: 'w*0.8',
            y: '(h-4)*0.8',
          },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'epcData',
    title: '数据',
    category: 'epc',
    props: { w: 100, h: 70 },
    lineStyle: { lineWidth: 2, lineColor: '11,108,195' },
    fillStyle: {
      type: 'gradient',
      gradientType: 'linear',
      beginColor: '157,215,237',
      endColor: '137,157,192',
      angle: Math.PI * 0.5,
    },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'form',
    title: '表单',
    category: 'epc',
    props: { w: 100, h: 70 },
    lineStyle: { lineWidth: 2, lineColor: '11,108,195' },
    fillStyle: {
      type: 'gradient',
      gradientType: 'linear',
      beginColor: '157,215,237',
      endColor: '137,157,192',
      angle: Math.PI * 0.5,
    },
    anchors: [
      { x: 'w*0.5', y: '0' },
      { x: 'w', y: 'h*0.5' },
      { x: 'w*0.5', y: 'h-Math.min(Math.min(w,h)/8,w/12)' },
      { x: '0', y: 'h*0.5' },
    ],
    textBlock: [{ position: { x: '0', y: '0', w: 'w', h: 'h*0.9' } }],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h-Math.min(Math.min(w,h)/8,w/12)' },
          { action: 'line', x: '0', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h-Math.min(Math.min(w,h)/8,w/12)' },
          {
            action: 'quadraticCurve',
            x1: 'w*0.75',
            y1: 'h-3*Math.min(Math.min(w,h)/8,w/12)',
            x: 'w*0.5',
            y: 'h-Math.min(Math.min(w,h)/8,w/12)',
          },
          {
            action: 'quadraticCurve',
            x1: 'w*0.25',
            y1: 'h+Math.min(Math.min(w,h)/8,w/12)',
            x: '0',
            y: 'h-Math.min(Math.min(w,h)/8,w/12)',
          },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'forms',
    title: '多个表单',
    category: 'epc',
    props: { w: 100, h: 70 },
    lineStyle: { lineWidth: 2, lineColor: '11,108,195' },
    fillStyle: {
      type: 'gradient',
      gradientType: 'linear',
      beginColor: '157,215,237',
      endColor: '137,157,192',
      angle: Math.PI * 0.5,
    },
    textBlock: [{ position: { x: '0', y: 'h*0.2', w: 'w*0.8', h: 'h*0.8' } }],
    anchors: [
      { x: 'w*0.5', y: 'h-h/8' },
      { x: '0', y: 'h*0.5' },
      { x: 'w*0.5', y: '0' },
      { x: 'w', y: 'h*0.5' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h*0.2' },
          { action: 'line', x: 'w*0.1', y: 'h*0.2' },
          { action: 'line', x: 'w*0.1', y: 'h*0.1' },
          { action: 'line', x: 'w*0.2', y: 'h*0.1' },
          { action: 'line', x: 'w*0.2', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h*0.7' },
          { action: 'line', x: 'w*0.9', y: 'h*0.7' },
          { action: 'line', x: 'w*0.9', y: 'h*0.8' },
          { action: 'line', x: 'w*0.8', y: 'h*0.8' },
          { action: 'line', x: 'w*0.8', y: 'h*0.9' },
          {
            action: 'quadraticCurve',
            x1: 'w*0.75*0.8',
            y1: 'h*0.8',
            x: 'w*0.8*0.5',
            y: 'h*0.9',
          },
          {
            action: 'quadraticCurve',
            x1: 'w*0.25*0.8',
            y1: 'h',
            x: '0',
            y: 'h*0.9',
          },
          { action: 'line', x: '0', y: 'h*0.2' },
          { action: 'move', x: '0', y: 'h*0.2' },
          { action: 'line', x: 'w*0.8', y: 'h*0.2' },
          { action: 'line', x: 'w*0.8', y: 'h*0.9' },
          {
            action: 'quadraticCurve',
            x1: 'w*0.75*0.8',
            y1: 'h*0.8',
            x: 'w*0.8*0.5',
            y: 'h*0.9',
          },
          {
            action: 'quadraticCurve',
            x1: 'w*0.25*0.8',
            y1: 'h',
            x: '0',
            y: 'h*0.9',
          },
          { action: 'line', x: '0', y: 'h*0.2' },
          { action: 'move', x: 'w*0.1', y: 'h*0.2' },
          { action: 'line', x: 'w*0.1', y: 'h*0.1' },
          { action: 'line', x: 'w*0.9', y: 'h*0.1' },
          { action: 'line', x: 'w*0.9', y: 'h*0.8' },
          { action: 'line', x: 'w*0.8', y: 'h*0.8' },
          { action: 'line', x: 'w*0.8', y: 'h*0.2' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'database',
    title: '数据库/系统',
    category: 'epc',
    props: { w: 100, h: 70 },
    lineStyle: { lineColor: '11,108,195' },
    fillStyle: {
      type: 'gradient',
      gradientType: 'linear',
      beginColor: '157,215,237',
      endColor: '137,157,192',
      angle: Math.PI * 0.5,
    },
    textBlock: [{ position: { x: '0', y: 'h*0.14', w: 'w', h: 'h-h*0.14' } }],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h*0.14' },
          {
            action: 'curve',
            x1: '0',
            y1: '-h*0.04',
            x2: 'w',
            y2: '-h*0.04',
            x: 'w',
            y: 'h*0.14',
          },
          { action: 'line', x: 'w', y: 'h*0.86' },
          {
            action: 'curve',
            x1: 'w',
            y1: 'h*1.04',
            x2: '0',
            y2: 'h*1.04',
            x: '0',
            y: 'h*0.86',
          },
          { action: 'line', x: '0', y: 'h*0.14' },
          { action: 'close' },
        ],
      },
      {
        actions: [
          { action: 'move', x: 'w', y: 'h*0.14' },
          {
            action: 'curve',
            x1: 'w',
            y1: 'h*0.3',
            x2: '0',
            y2: 'h*0.3',
            x: '0',
            y: 'h*0.14',
          },
          {
            action: 'curve',
            x1: '0',
            y1: '-h*0.04',
            x2: 'w',
            y2: '-h*0.04',
            x: 'w',
            y: 'h*0.14',
          },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: '0', y: 'h*0.1' },
          {
            action: 'quadraticCurve',
            x1: 'w*0.5',
            y1: '-h*0.1',
            x: 'w',
            y: 'h*0.1',
          },
          { action: 'line', x: 'w', y: 'h*0.9' },
          {
            action: 'quadraticCurve',
            x1: 'w*0.5',
            y1: 'h*1.1',
            x: '0',
            y: 'h*0.9',
          },
          { action: 'line', x: '0', y: 'h*0.1' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'and',
    title: '与',
    category: 'epc',
    props: { w: 40, h: 40 },
    fillStyle: { color: '238,238,238' },
    textBlock: [],
    path: [
      { actions: { ref: 'round' } },
      {
        actions: [
          { action: 'move', x: 'w/2-w*0.15', y: 'h/2+h*0.13' },
          { action: 'line', x: 'w*0.5', y: 'h/2-h*0.15' },
          { action: 'line', x: 'w/2+w*0.15', y: 'h/2+h*0.13' },
          { action: 'line', x: 'w*0.5', y: 'h/2-h*0.15' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'or',
    title: '或',
    category: 'epc',
    props: { w: 40, h: 40 },
    fillStyle: { color: '238,238,238' },
    textBlock: [],
    path: [
      { actions: { ref: 'round' } },
      {
        actions: [
          { action: 'move', x: 'w/2-w*0.15', y: 'h/2-h*0.13' },
          { action: 'line', x: 'w*0.5', y: 'h/2+h*0.15' },
          { action: 'line', x: 'w/2+w*0.15', y: 'h/2-h*0.13' },
          { action: 'line', x: 'w*0.5', y: 'h/2+h*0.15' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'xor',
    title: '异或',
    category: 'epc',
    props: { w: 40, h: 40 },
    fillStyle: { color: '238,238,238' },
    textBlock: [],
    path: [
      { actions: { ref: 'round' } },
      {
        actions: [
          { action: 'move', x: 'w/2-w*0.15', y: 'h/2-h*0.15' },
          { action: 'line', x: 'w/2+w*0.15', y: 'h/2+h*0.15' },
          { action: 'move', x: 'w/2+w*0.15', y: 'h/2-h*0.15' },
          { action: 'line', x: 'w/2-w*0.15', y: 'h/2+h*0.15' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addCategory({ name: 'lane', text: '泳池/泳道' })
  function getPool(a, d) {
    for (var b = Model.orderList.length - 1; b >= 0; b--) {
      var e = Model.orderList[b].id
      var c = Model.getShapeById(e)
      if (c.name == d) {
        if (Utils.rectCross(c.props, a.props)) {
          return c
        }
      }
    }
    return null
  }
  function getVerticalPoolWidth(c) {
    var a = 0
    for (var b = 0; b < c.children.length; b++) {
      var d = c.children[b]
      var e = Model.getShapeById(d)
      if (e.name != 'horizontalSeparator') {
        a += e.props.w
      }
    }
    return a
  }
  function getHorizontalPoolHeight(c) {
    var a = 0
    for (var b = 0; b < c.children.length; b++) {
      var d = c.children[b]
      var e = Model.getShapeById(d)
      if (e.name != 'horizontalSeparator') {
        a += e.props.w
      }
    }
    return a
  }
  function getChild(c, a) {
    for (var b = 0; b < c.children.length; b++) {
      var d = c.children[b]
      var e = Model.getShapeById(d)
      if (e.name == a) {
        return e
      }
    }
    return null
  }
  Schema.addShape({
    name: 'verticalPool',
    title: '泳池(垂直)',
    category: 'lane',
    attribute: { rotatable: false, linkable: false, container: true },
    children: [],
    props: { w: 250, h: 540 },
    fontStyle: { size: 16 },
    textBlock: [{ position: { x: 10, y: 0, w: 'w-20', h: 40 } }],
    anchors: [],
    resizeDir: ['l', 'b', 'r'],
    path: [
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineStyle: 'solid' },
        actions: { ref: 'rectangle' },
      },
      {
        lineStyle: { lineStyle: 'solid' },
        actions: [
          { action: 'move', x: 0, y: 0 },
          { action: 'line', x: 'w', y: 0 },
          { action: 'line', x: 'w', y: 40 },
          { action: 'line', x: 0, y: 40 },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (b, c) {
      b += 8
      var a = -4
      return [
        {
          fillStyle: { type: 'none' },
          actions: [
            { action: 'move', x: a, y: 0 },
            { action: 'line', x: b, y: 0 },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
        {
          actions: [
            { action: 'move', x: a, y: 0 },
            { action: 'line', x: b, y: 0 },
            { action: 'line', x: b, y: 4 },
            { action: 'line', x: a, y: 4 },
            { action: 'close' },
          ],
        },
        {
          actions: [
            { action: 'move', x: (a + b) / 2, y: 4 },
            { action: 'line', x: (a + b) / 2, y: c },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'verticalLane',
    title: '泳道(垂直)',
    category: 'lane',
    attribute: { container: true, rotatable: false, linkable: false },
    props: { w: 250, h: 500 },
    textBlock: [{ position: { x: 10, y: 0, w: 'w-20', h: 30 } }],
    anchors: [],
    resizeDir: ['l', 'b', 'r'],
    path: [
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineStyle: 'solid' },
        actions: { ref: 'rectangle' },
      },
      {
        lineStyle: { lineStyle: 'solid' },
        actions: [
          { action: 'move', x: 0, y: 0 },
          { action: 'line', x: 'w', y: 0 },
          { action: 'line', x: 'w', y: 30 },
          { action: 'line', x: 0, y: 30 },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: { type: 'none' },
          lineStyle: { lineStyle: 'solid' },
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a, y: 0 },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
        {
          lineStyle: { lineStyle: 'solid' },
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a, y: 0 },
            { action: 'line', x: a, y: 4 },
            { action: 'line', x: 0, y: 4 },
            { action: 'close' },
          ],
        },
      ]
    },
    onCreated: function (f, k) {
      var f = f || getPool(this, 'verticalPool')
      if (f == null) {
        f = Model.create('verticalPool', this.props.x, this.props.y - 40)
        f.children = [this.id]
        Model.add(f)
      } else {
        if (!f.children) {
          f.children = []
        }
        var h = [f]
        var g = f.props.x
        var c = 0
        var j = 0
        var a = null
        for (var e = 0; e < f.children.length; e++) {
          var d = f.children[e]
          var b = Model.getShapeById(d)
          if (b.name == 'verticalLane') {
            g += b.props.w
            if (a == null) {
              a = b
            }
            if (b.props.x > a.props.x) {
              a = b
            }
            c++
          } else {
            if (b.name == 'verticalSeparatorBar') {
              g += b.props.w
              j++
            }
          }
        }
        if (a) {
          this.fillStyle = a.fillStyle
          this.fontStyle = a.fontStyle
          this.props.w = a.props.w
          this.lineStyle = a.lineStyle
        }
        this.props.x = g
        this.props.y = f.props.y + 40
        this.props.h = f.props.h - 40
        if (c == 0) {
          if (j == 0) {
            this.props.w = f.props.w
          } else {
            this.props.w = f.props.w - 20
          }
        }
        Designer.painter.renderShape(this)
        f.props.w = this.props.x + this.props.w - f.props.x
        for (var e = 0; e < f.children.length; e++) {
          var d = f.children[e]
          var b = Model.getShapeById(d)
          if (b.name == 'horizontalSeparator') {
            b.props.w = f.props.w
            Designer.painter.renderShape(b)
            h.push(b)
          }
        }
        f.children.push(this.id)
        if (!k) {
          Model.updateMulti(h)
        }
      }
      Designer.painter.renderShape(f)
      this.parent = f.id
    },
  })
  Schema.addShape({
    name: 'verticalSeparatorBar',
    title: '水平分隔条',
    category: 'lane',
    attribute: { rotatable: false, linkable: false, visible: false },
    props: { w: 20, h: 500 },
    anchors: [],
    resizeDir: [],
    textBlock: [],
    path: [{ lineStyle: { lineStyle: 'solid' }, actions: { ref: 'rectangle' } }],
  })
  Schema.addShape({
    name: 'horizontalSeparator',
    title: '分隔符(水平)<br>需拖动到泳池泳道上',
    category: 'lane',
    attribute: { rotatable: false, linkable: false },
    props: { w: 300, h: 0 },
    fontStyle: { orientation: 'horizontal', textAlign: 'left' },
    textBlock: [{ position: { x: 0, y: 5, w: 20, h: 'h-10' }, text: '阶段' }],
    anchors: [],
    resizeDir: ['b'],
    path: [
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineStyle: 'solid' },
        actions: [
          { action: 'move', x: 0, y: 'h' },
          { action: 'line', x: 'w', y: 'h' },
        ],
      },
      {
        actions: [
          { action: 'move', x: 0, y: 0 },
          { action: 'line', x: 20, y: 0 },
          { action: 'line', x: 20, y: 'h' },
          { action: 'line', x: 0, y: 'h' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: { type: 'none' },
          lineStyle: { lineStyle: 'solid' },
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a, y: 0 },
          ],
        },
      ]
    },
    onCreated: function () {
      var g = getPool(this, 'verticalPool')
      if (g == null) {
        return false
      }
      var j = getChild(g, 'verticalSeparatorBar')
      if (j == null) {
        j = Model.create('verticalSeparatorBar', g.props.x - 20, g.props.y + 40)
        j.props.h = g.props.h - 40
        j.parent = g.id
        Model.add(j)
        Designer.painter.renderShape(j)
        g.props.x -= j.props.w
        g.props.w += j.props.w
        g.children.push(j.id)
        Designer.painter.renderShape(g)
      }
      var a = this.props.y + this.props.h
      var h = g.props.y + 40
      var f = null
      for (var e = 0; e < g.children.length; e++) {
        var d = g.children[e]
        var b = Model.getShapeById(d)
        if (b.name != 'horizontalSeparator') {
          continue
        }
        var c = b.props.y + b.props.h
        if (c <= a) {
          h += b.props.h
        } else {
          if (f == null || b.props.y < f.props.y) {
            f = b
          }
        }
      }
      this.props.x = g.props.x
      this.props.w = g.props.w
      this.props.h = a - h
      this.props.y = h
      g.children.push(this.id)
      this.parent = g.id
      if (a > g.props.y + g.props.h) {
        this.props.h = g.props.y + g.props.h - h
      }
      Designer.painter.renderShape(this)
      if (f != null) {
        f.props.y += this.props.h
        f.props.h -= this.props.h
        Designer.painter.renderShape(f)
        Model.updateMulti([g, f])
      } else {
        Model.update(g)
      }
      this.props.zindex = Model.maxZIndex + 1
    },
  })
  Schema.addShape({
    name: 'horizontalSeparatorBar',
    title: '垂直分隔条',
    category: 'lane',
    attribute: { rotatable: false, linkable: false, visible: false },
    props: { w: 600, h: 20 },
    anchors: [],
    resizeDir: [],
    textBlock: [],
    path: [{ lineStyle: { lineStyle: 'solid' }, actions: { ref: 'rectangle' } }],
  })
  Schema.addShape({
    name: 'verticalSeparator',
    title: '分隔符(垂直)<br>需拖动到泳池泳道上',
    category: 'lane',
    attribute: { rotatable: false, linkable: false },
    props: { w: 0, h: 300 },
    fontStyle: { textAlign: 'right' },
    textBlock: [{ position: { x: 5, y: 0, w: 'w-10', h: 20 }, text: '阶段' }],
    anchors: [],
    resizeDir: ['r'],
    path: [
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineStyle: 'solid' },
        actions: [
          { action: 'move', x: 'w', y: 0 },
          { action: 'line', x: 'w', y: 'h' },
        ],
      },
      {
        actions: [
          { action: 'move', x: 0, y: 0 },
          { action: 'line', x: 'w', y: 0 },
          { action: 'line', x: 'w', y: 20 },
          { action: 'line', x: 0, y: 20 },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: { type: 'none' },
          lineStyle: { lineStyle: 'solid' },
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: 0, y: b },
          ],
        },
      ]
    },
    onCreated: function () {
      var e = getPool(this, 'horizontalPool')
      if (e == null) {
        return false
      }
      var g = getChild(e, 'horizontalSeparatorBar')
      if (g == null) {
        g = Model.create('horizontalSeparatorBar', e.props.x + 40, e.props.y - 20)
        e.props.y -= g.props.h
        e.props.h += g.props.h
        e.children.push(g.id)
        Designer.painter.renderShape(e)
        g.props.w = e.props.w - 40
        g.parent = e.id
        Model.add(g)
        Designer.painter.renderShape(g)
      }
      var j = this.props.x + this.props.w
      var h = e.props.x + 40
      var d = null
      for (var c = 0; c < e.children.length; c++) {
        var b = e.children[c]
        var a = Model.getShapeById(b)
        if (a.name != 'verticalSeparator') {
          continue
        }
        var f = a.props.x + a.props.w
        if (f <= j) {
          h += a.props.w
        } else {
          if (d == null || a.props.x < d.props.x) {
            d = a
          }
        }
      }
      this.props.x = h
      this.props.w = j - h
      this.props.y = e.props.y
      this.props.h = e.props.h
      if (j > e.props.x + e.props.w) {
        this.props.w = e.props.x + e.props.w - h
      }
      Designer.painter.renderShape(this)
      e.children.push(this.id)
      this.parent = e.id
      if (d != null) {
        d.props.x += this.props.w
        d.props.w -= this.props.w
        Designer.painter.renderShape(d)
        Model.updateMulti([e, d])
      } else {
        Model.update(e)
      }
      this.props.zindex = Model.maxZIndex + 1
    },
  })
  Schema.addShape({
    name: 'horizontalPool',
    title: '泳池(水平)',
    category: 'lane',
    attribute: { rotatable: false, linkable: false, container: true },
    children: [],
    props: { w: 640, h: 200 },
    fontStyle: { size: 16, orientation: 'horizontal' },
    textBlock: [{ position: { x: 0, y: 10, w: 40, h: 'h-20' } }],
    anchors: [],
    resizeDir: ['t', 'r', 'b'],
    path: [
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineStyle: 'solid' },
        actions: { ref: 'rectangle' },
      },
      {
        lineStyle: { lineStyle: 'solid' },
        actions: [
          { action: 'move', x: 0, y: 0 },
          { action: 'line', x: 40, y: 0 },
          { action: 'line', x: 40, y: 'h' },
          { action: 'line', x: 0, y: 'h' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      b += 8
      var c = -4
      return [
        {
          fillStyle: { type: 'none' },
          actions: [
            { action: 'move', x: 0, y: c },
            { action: 'line', x: a, y: c },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
        {
          actions: [
            { action: 'move', x: 0, y: c },
            { action: 'line', x: 4, y: c },
            { action: 'line', x: 4, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
        {
          actions: [
            { action: 'move', x: 4, y: (c + b) / 2 },
            { action: 'line', x: a, y: (c + b) / 2 },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'horizontalLane',
    title: '泳道(水平)',
    category: 'lane',
    attribute: { container: true, rotatable: false, linkable: false },
    props: { w: 600, h: 200 },
    fontStyle: { orientation: 'horizontal' },
    textBlock: [{ position: { x: 0, y: 10, w: 30, h: 'h-20' } }],
    anchors: [],
    resizeDir: ['t', 'b', 'r'],
    path: [
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineStyle: 'solid' },
        actions: { ref: 'rectangle' },
      },
      {
        lineStyle: { lineStyle: 'solid' },
        actions: [
          { action: 'move', x: 0, y: 0 },
          { action: 'line', x: 30, y: 0 },
          { action: 'line', x: 30, y: 'h' },
          { action: 'line', x: 0, y: 'h' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      b += 3
      return [
        {
          fillStyle: { type: 'none' },
          lineStyle: { lineStyle: 'solid' },
          actions: [
            { action: 'move', x: 0, y: -1 },
            { action: 'line', x: a, y: -1 },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
        {
          lineStyle: { lineStyle: 'solid' },
          actions: [
            { action: 'move', x: 0, y: -1 },
            { action: 'line', x: 4, y: -1 },
            { action: 'line', x: 4, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
    onCreated: function (f, k) {
      var f = f || getPool(this, 'horizontalPool')
      if (f == null) {
        f = Model.create('horizontalPool', this.props.x - 40, this.props.y)
        f.children = [this.id]
        Model.add(f)
      } else {
        if (!f.children) {
          f.children = []
        }
        var h = [f]
        var g = f.props.y
        var c = 0
        var j = 0
        var a = null
        for (var e = 0; e < f.children.length; e++) {
          var d = f.children[e]
          var b = Model.getShapeById(d)
          if (b.name == 'horizontalLane') {
            g += b.props.h
            if (a == null) {
              a = b
            }
            if (b.props.y > a.props.y) {
              a = b
            }
            c++
          } else {
            if (b.name == 'horizontalSeparatorBar') {
              g += b.props.h
              j++
            }
          }
        }
        if (a) {
          this.fillStyle = a.fillStyle
          this.fontStyle = a.fontStyle
          this.props.h = a.props.h
          this.lineStyle = a.lineStyle
        }
        this.props.y = g
        this.props.x = f.props.x + 40
        this.props.w = f.props.w - 40
        if (c == 0) {
          if (j == 0) {
            this.props.h = f.props.h
          } else {
            this.props.h = f.props.h - 20
          }
        }
        Designer.painter.renderShape(this)
        f.props.h = this.props.y + this.props.h - f.props.y
        for (var e = 0; e < f.children.length; e++) {
          var d = f.children[e]
          var b = Model.getShapeById(d)
          if (b.name == 'verticalSeparator') {
            b.props.h = f.props.h
            Designer.painter.renderShape(b)
            h.push(b)
          }
        }
        f.children.push(this.id)
        if (!k) {
          Model.updateMulti(h)
        }
      }
      Designer.painter.renderShape(f)
      this.parent = f.id
    },
  })
  Schema.addCategory({ name: 'grid', text: '表格' })
  Schema.addShape({
    name: 'grid',
    title: '表格',
    category: 'grid',
    attribute: { linkable: true, rotatable: false },
    anchors: [
      { x: '0', y: 'h/2' },
      { x: 'w/2', y: '0' },
      { x: 'w', y: 'h/2' },
      { x: 'w/2', y: 'h' },
    ],
    props: { w: 360, h: 200 },
    fontStyle: { size: 16 },
    lineStyle: { lineWidth: 1, lineColor: '102, 102, 102' },
    theme: {},
    textBlock: [
      { position: { x: 0, y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.8', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.8', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.8', w: 'w/3', h: 'h/5' } },
    ],
    path: [
      [
        { actions: [{ action: 'rect', x: 0, y: 0, w: 'w/3', h: 'h*0.2' }] },
        { actions: [{ action: 'rect', x: 'w/3', y: 0, w: 'w/3', h: 'h*0.2' }] },
        { actions: [{ action: 'rect', x: 'w/3*2', y: 0, w: 'w/3', h: 'h*0.2' }] },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.2', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.2', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.2', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.4', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.4', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.4', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.6', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.6', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.6', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.8', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.8', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.8', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
    ],
    drawIcon: function (a, b) {
      var c = -3
      b += 3
      return [
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: a / 3, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: (a / 3) * 2, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: b / 3, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: a / 3, y: b / 3, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'rect', x: (a / 3) * 2, y: b / 3, w: a / 3, h: b / 3 },
          ],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: (b / 3) * 2, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'rect', x: a / 3, y: (b / 3) * 2, w: a / 3, h: b / 3 },
          ],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [
            {
              action: 'rect',
              x: (a / 3) * 2,
              y: (b / 3) * 2,
              w: a / 3,
              h: b / 3,
            },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'grid1',
    title: '表格',
    category: 'grid',
    attribute: { linkable: true, rotatable: false },
    props: { w: 360, h: 200 },
    fontStyle: { size: 16 },
    lineStyle: { lineWidth: 1, lineColor: '102, 102, 102' },
    textBlock: [{ position: { x: 10, y: 0, w: 'w-20', h: 40 } }],
    anchors: [
      { x: '0', y: 'h/2' },
      { x: 'w/2', y: '0' },
      { x: 'w', y: 'h/2' },
      { x: 'w/2', y: 'h' },
    ],
    theme: {
      name: 'header',
      row: [
        { fillStyle: {} },
        { fillStyle: { type: 'solid', color: '255,255,255' } },
      ],
    },
    textBlock: [
      { position: { x: 0, y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.8', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.8', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.8', w: 'w/3', h: 'h/5' } },
    ],
    path: [
      [
        { actions: [{ action: 'rect', x: 0, y: 0, w: 'w/3', h: 'h*0.2' }] },
        { actions: [{ action: 'rect', x: 'w/3', y: 0, w: 'w/3', h: 'h*0.2' }] },
        { actions: [{ action: 'rect', x: 'w/3*2', y: 0, w: 'w/3', h: 'h*0.2' }] },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.2', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.2', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.2', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.4', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.4', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.4', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.6', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.6', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.6', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.8', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.8', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.8', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
    ],
    drawIcon: function (a, b) {
      var c = -3
      b += 3
      return [
        {
          fillStyle: { type: 'solid', color: '240, 240, 240' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          fillStyle: { type: 'solid', color: '240, 240, 240' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: a / 3, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          fillStyle: { type: 'solid', color: '240, 240, 240' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: (a / 3) * 2, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: b / 3, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: a / 3, y: b / 3, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'rect', x: (a / 3) * 2, y: b / 3, w: a / 3, h: b / 3 },
          ],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: (b / 3) * 2, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'rect', x: a / 3, y: (b / 3) * 2, w: a / 3, h: b / 3 },
          ],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [
            {
              action: 'rect',
              x: (a / 3) * 2,
              y: (b / 3) * 2,
              w: a / 3,
              h: b / 3,
            },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'grid2',
    title: '表格',
    category: 'grid',
    attribute: { linkable: true, rotatable: false },
    props: { w: 360, h: 200 },
    fontStyle: { size: 16 },
    lineStyle: { lineWidth: 1, lineColor: '102, 102, 102' },
    textBlock: [{ position: { x: 10, y: 0, w: 'w-20', h: 40 } }],
    anchors: [
      { x: '0', y: 'h/2' },
      { x: 'w/2', y: '0' },
      { x: 'w', y: 'h/2' },
      { x: 'w/2', y: 'h' },
    ],
    theme: {
      name: 'striping',
      row: [
        { fillStyle: {} },
        { fillStyle: { type: 'solid', color: '255,255,255' } },
      ],
    },
    textBlock: [
      { position: { x: 0, y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.8', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.8', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.8', w: 'w/3', h: 'h/5' } },
    ],
    path: [
      [
        { actions: [{ action: 'rect', x: 0, y: 0, w: 'w/3', h: 'h*0.2' }] },
        { actions: [{ action: 'rect', x: 'w/3', y: 0, w: 'w/3', h: 'h*0.2' }] },
        { actions: [{ action: 'rect', x: 'w/3*2', y: 0, w: 'w/3', h: 'h*0.2' }] },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.2', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.2', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.2', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.4', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.4', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.4', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.6', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.6', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.6', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.8', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.8', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.8', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
    ],
    drawIcon: function (a, b) {
      var c = -3
      b += 3
      return [
        {
          fillStyle: { type: 'solid', color: '240, 240, 240' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          fillStyle: { type: 'solid', color: '240, 240, 240' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: a / 3, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          fillStyle: { type: 'solid', color: '240, 240, 240' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: (a / 3) * 2, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: b / 3, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: a / 3, y: b / 3, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'rect', x: (a / 3) * 2, y: b / 3, w: a / 3, h: b / 3 },
          ],
        },
        {
          fillStyle: { type: 'solid', color: '240, 240, 240' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: (b / 3) * 2, w: a / 3, h: b / 3 }],
        },
        {
          fillStyle: { type: 'solid', color: '240, 240, 240' },
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'rect', x: a / 3, y: (b / 3) * 2, w: a / 3, h: b / 3 },
          ],
        },
        {
          fillStyle: { type: 'solid', color: '240, 240, 240' },
          lineStyle: { lineWidth: 1 },
          actions: [
            {
              action: 'rect',
              x: (a / 3) * 2,
              y: (b / 3) * 2,
              w: a / 3,
              h: b / 3,
            },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'grid3',
    title: '表格',
    category: 'grid',
    attribute: { linkable: true, rotatable: false },
    props: { w: 360, h: 200 },
    fontStyle: { size: 16 },
    lineStyle: { lineWidth: 1, lineColor: '102, 102, 102' },
    textBlock: [{ position: { x: 10, y: 0, w: 'w-20', h: 40 } }],
    anchors: [
      { x: '0', y: 'h/2' },
      { x: 'w/2', y: '0' },
      { x: 'w', y: 'h/2' },
      { x: 'w/2', y: 'h' },
    ],
    theme: {
      name: 'striping',
      column: [
        { fillStyle: {} },
        { fillStyle: { type: 'solid', color: '255,255,255' } },
      ],
    },
    textBlock: [
      { position: { x: 0, y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.8', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.8', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.8', w: 'w/3', h: 'h/5' } },
    ],
    path: [
      [
        { actions: [{ action: 'rect', x: 0, y: 0, w: 'w/3', h: 'h*0.2' }] },
        { actions: [{ action: 'rect', x: 'w/3', y: 0, w: 'w/3', h: 'h*0.2' }] },
        { actions: [{ action: 'rect', x: 'w/3*2', y: 0, w: 'w/3', h: 'h*0.2' }] },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.2', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.2', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.2', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.4', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.4', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.4', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.6', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.6', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.6', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.8', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.8', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.8', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
    ],
    drawIcon: function (a, b) {
      var c = -3
      b += 3
      return [
        {
          fillStyle: { type: 'solid', color: '240, 240, 240' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: a / 3, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          fillStyle: { type: 'solid', color: '240, 240, 240' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: (a / 3) * 2, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          fillStyle: { type: 'solid', color: '240, 240, 240' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: b / 3, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: a / 3, y: b / 3, w: a / 3, h: b / 3 }],
        },
        {
          fillStyle: { type: 'solid', color: '240, 240, 240' },
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'rect', x: (a / 3) * 2, y: b / 3, w: a / 3, h: b / 3 },
          ],
        },
        {
          fillStyle: { type: 'solid', color: '240, 240, 240' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: (b / 3) * 2, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'rect', x: a / 3, y: (b / 3) * 2, w: a / 3, h: b / 3 },
          ],
        },
        {
          fillStyle: { type: 'solid', color: '240, 240, 240' },
          lineStyle: { lineWidth: 1 },
          actions: [
            {
              action: 'rect',
              x: (a / 3) * 2,
              y: (b / 3) * 2,
              w: a / 3,
              h: b / 3,
            },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'grid4',
    title: '表格',
    category: 'grid',
    attribute: { linkable: true, rotatable: false },
    props: { w: 360, h: 200 },
    fontStyle: { size: 16 },
    lineStyle: { lineWidth: 1, lineColor: '201,208,227' },
    textBlock: [{ position: { x: 10, y: 0, w: 'w-20', h: 40 } }],
    anchors: [
      { x: '0', y: 'h/2' },
      { x: 'w/2', y: '0' },
      { x: 'w', y: 'h/2' },
      { x: 'w/2', y: 'h' },
    ],
    theme: {
      name: 'header',
      row: [
        { fillStyle: { type: 'solid', color: '245,247,251' } },
        { fillStyle: { type: 'solid', color: '255,255,255' } },
      ],
    },
    textBlock: [
      { position: { x: 0, y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.8', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.8', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.8', w: 'w/3', h: 'h/5' } },
    ],
    path: [
      [
        { actions: [{ action: 'rect', x: 0, y: 0, w: 'w/3', h: 'h*0.2' }] },
        { actions: [{ action: 'rect', x: 'w/3', y: 0, w: 'w/3', h: 'h*0.2' }] },
        { actions: [{ action: 'rect', x: 'w/3*2', y: 0, w: 'w/3', h: 'h*0.2' }] },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.2', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.2', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.2', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.4', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.4', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.4', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.6', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.6', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.6', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.8', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.8', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.8', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
    ],
    drawIcon: function (a, b) {
      var c = -3
      b += 3
      return [
        {
          fillStyle: { type: 'solid', color: '245,247,251' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          fillStyle: { type: 'solid', color: '245,247,251' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: a / 3, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          fillStyle: { type: 'solid', color: '245,247,251' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: (a / 3) * 2, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: b / 3, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: a / 3, y: b / 3, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'rect', x: (a / 3) * 2, y: b / 3, w: a / 3, h: b / 3 },
          ],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: (b / 3) * 2, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'rect', x: a / 3, y: (b / 3) * 2, w: a / 3, h: b / 3 },
          ],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [
            {
              action: 'rect',
              x: (a / 3) * 2,
              y: (b / 3) * 2,
              w: a / 3,
              h: b / 3,
            },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'grid5',
    title: '表格',
    category: 'grid',
    attribute: { linkable: true, rotatable: false },
    props: { w: 360, h: 200 },
    fontStyle: { size: 16 },
    lineStyle: { lineWidth: 1, lineColor: '197,204,224' },
    textBlock: [{ position: { x: 10, y: 0, w: 'w-20', h: 40 } }],
    anchors: [
      { x: '0', y: 'h/2' },
      { x: 'w/2', y: '0' },
      { x: 'w', y: 'h/2' },
      { x: 'w/2', y: 'h' },
    ],
    theme: {
      name: 'striping',
      row: [
        { fillStyle: { type: 'solid', color: '245,247,251' } },
        { fillStyle: { type: 'solid', color: '255,255,255' } },
      ],
    },
    textBlock: [
      { position: { x: 0, y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.8', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.8', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.8', w: 'w/3', h: 'h/5' } },
    ],
    path: [
      [
        { actions: [{ action: 'rect', x: 0, y: 0, w: 'w/3', h: 'h*0.2' }] },
        { actions: [{ action: 'rect', x: 'w/3', y: 0, w: 'w/3', h: 'h*0.2' }] },
        { actions: [{ action: 'rect', x: 'w/3*2', y: 0, w: 'w/3', h: 'h*0.2' }] },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.2', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.2', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.2', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.4', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.4', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.4', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.6', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.6', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.6', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.8', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.8', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.8', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
    ],
    drawIcon: function (a, b) {
      var c = -3
      b += 3
      return [
        {
          fillStyle: { type: 'solid', color: '245, 247, 251' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          fillStyle: { type: 'solid', color: '245, 247, 251' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: a / 3, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          fillStyle: { type: 'solid', color: '245, 247, 251' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: (a / 3) * 2, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: b / 3, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: a / 3, y: b / 3, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'rect', x: (a / 3) * 2, y: b / 3, w: a / 3, h: b / 3 },
          ],
        },
        {
          fillStyle: { type: 'solid', color: '245, 247, 251' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: (b / 3) * 2, w: a / 3, h: b / 3 }],
        },
        {
          fillStyle: { type: 'solid', color: '245, 247, 251' },
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'rect', x: a / 3, y: (b / 3) * 2, w: a / 3, h: b / 3 },
          ],
        },
        {
          fillStyle: { type: 'solid', color: '245, 247, 251' },
          lineStyle: { lineWidth: 1 },
          actions: [
            {
              action: 'rect',
              x: (a / 3) * 2,
              y: (b / 3) * 2,
              w: a / 3,
              h: b / 3,
            },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'grid6',
    title: '表格',
    category: 'grid',
    attribute: { linkable: true, rotatable: false },
    props: { w: 360, h: 200 },
    fontStyle: { size: 16 },
    lineStyle: { lineWidth: 1, lineColor: '197,204,224' },
    textBlock: [{ position: { x: 10, y: 0, w: 'w-20', h: 40 } }],
    anchors: [
      { x: '0', y: 'h/2' },
      { x: 'w/2', y: '0' },
      { x: 'w', y: 'h/2' },
      { x: 'w/2', y: 'h' },
    ],
    theme: {
      name: 'striping',
      column: [
        { fillStyle: { type: 'solid', color: '245,247,251' } },
        { fillStyle: { type: 'solid', color: '255,255,255' } },
      ],
    },
    textBlock: [
      { position: { x: 0, y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.8', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.8', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.8', w: 'w/3', h: 'h/5' } },
    ],
    path: [
      [
        { actions: [{ action: 'rect', x: 0, y: 0, w: 'w/3', h: 'h*0.2' }] },
        { actions: [{ action: 'rect', x: 'w/3', y: 0, w: 'w/3', h: 'h*0.2' }] },
        { actions: [{ action: 'rect', x: 'w/3*2', y: 0, w: 'w/3', h: 'h*0.2' }] },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.2', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.2', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.2', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.4', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.4', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.4', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.6', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.6', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.6', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.8', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.8', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.8', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
    ],
    drawIcon: function (a, b) {
      var c = -3
      b += 3
      return [
        {
          fillStyle: { type: 'solid', color: '245,247,251' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: a / 3, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          fillStyle: { type: 'solid', color: '245,247,251' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: (a / 3) * 2, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          fillStyle: { type: 'solid', color: '245,247,251' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: b / 3, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: a / 3, y: b / 3, w: a / 3, h: b / 3 }],
        },
        {
          fillStyle: { type: 'solid', color: '245,247,251' },
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'rect', x: (a / 3) * 2, y: b / 3, w: a / 3, h: b / 3 },
          ],
        },
        {
          fillStyle: { type: 'solid', color: '245,247,251' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: (b / 3) * 2, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'rect', x: a / 3, y: (b / 3) * 2, w: a / 3, h: b / 3 },
          ],
        },
        {
          fillStyle: { type: 'solid', color: '245,247,251' },
          lineStyle: { lineWidth: 1 },
          actions: [
            {
              action: 'rect',
              x: (a / 3) * 2,
              y: (b / 3) * 2,
              w: a / 3,
              h: b / 3,
            },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'grid7',
    title: '表格',
    category: 'grid',
    attribute: { linkable: true, rotatable: false },
    props: { w: 360, h: 200 },
    fontStyle: { size: 16 },
    lineStyle: { lineWidth: 1, lineColor: '225, 222, 222' },
    textBlock: [{ position: { x: 10, y: 0, w: 'w-20', h: 40 } }],
    anchors: [
      { x: '0', y: 'h/2' },
      { x: 'w/2', y: '0' },
      { x: 'w', y: 'h/2' },
      { x: 'w/2', y: 'h' },
    ],
    theme: {
      name: 'striping',
      row: [
        { fillStyle: { type: 'solid', color: '255, 246, 245' } },
        { fillStyle: { type: 'solid', color: '255,255,255' } },
      ],
    },
    textBlock: [
      { position: { x: 0, y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 0, w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.2', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.4', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.6', w: 'w/3', h: 'h/5' } },
      { position: { x: 0, y: 'h*0.8', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3', y: 'h*0.8', w: 'w/3', h: 'h/5' } },
      { position: { x: 'w/3*2', y: 'h*0.8', w: 'w/3', h: 'h/5' } },
    ],
    path: [
      [
        { actions: [{ action: 'rect', x: 0, y: 0, w: 'w/3', h: 'h*0.2' }] },
        { actions: [{ action: 'rect', x: 'w/3', y: 0, w: 'w/3', h: 'h*0.2' }] },
        { actions: [{ action: 'rect', x: 'w/3*2', y: 0, w: 'w/3', h: 'h*0.2' }] },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.2', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.2', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.2', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.4', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.4', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.4', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.6', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.6', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.6', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
      [
        { actions: [{ action: 'rect', x: 0, y: 'h*0.8', w: 'w/3', h: 'h*0.2' }] },
        {
          actions: [
            { action: 'rect', x: 'w/3', y: 'h*0.8', w: 'w/3', h: 'h*0.2' },
          ],
        },
        {
          actions: [
            { action: 'rect', x: 'w/3*2', y: 'h*0.8', w: 'w/3', h: 'h*0.2' },
          ],
        },
      ],
    ],
    drawIcon: function (a, b) {
      var c = -3
      b += 3
      return [
        {
          fillStyle: { type: 'solid', color: '255, 246, 245' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          fillStyle: { type: 'solid', color: '255, 246, 245' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: a / 3, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          fillStyle: { type: 'solid', color: '255, 246, 245' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: (a / 3) * 2, y: 0, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: b / 3, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: a / 3, y: b / 3, w: a / 3, h: b / 3 }],
        },
        {
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'rect', x: (a / 3) * 2, y: b / 3, w: a / 3, h: b / 3 },
          ],
        },
        {
          fillStyle: { type: 'solid', color: '255, 246, 245' },
          lineStyle: { lineWidth: 1 },
          actions: [{ action: 'rect', x: 0, y: (b / 3) * 2, w: a / 3, h: b / 3 }],
        },
        {
          fillStyle: { type: 'solid', color: '255, 246, 245' },
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'rect', x: a / 3, y: (b / 3) * 2, w: a / 3, h: b / 3 },
          ],
        },
        {
          fillStyle: { type: 'solid', color: '255, 246, 245' },
          lineStyle: { lineWidth: 1 },
          actions: [
            {
              action: 'rect',
              x: (a / 3) * 2,
              y: (b / 3) * 2,
              w: a / 3,
              h: b / 3,
            },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'er',
    text: '实体关系图 (E-R图)',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'entity',
    title: '实体',
    category: 'er',
    props: { w: 100, h: 70 },
    path: [{ actions: { ref: 'rectangle' } }],
  })
  Schema.addShape({
    name: 'derivedAttribute',
    title: '派生属性',
    category: 'er',
    props: { w: 100, h: 70 },
    path: [{ lineStyle: { lineStyle: 'dashed' }, actions: { ref: 'round' } }],
  })
  Schema.addShape({
    name: 'keyAttribute',
    title: '键值属性',
    category: 'er',
    props: { w: 100, h: 70 },
    fontStyle: { underline: true },
    path: [{ lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } }],
  })
  Schema.addShape({
    name: 'multivaluedAttribute',
    title: '多值属性',
    category: 'er',
    props: { w: 100, h: 70 },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h/2' },
          {
            action: 'curve',
            x1: '0',
            y1: '-h/6',
            x2: 'w',
            y2: ' -h/6',
            x: 'w',
            y: ' h/2',
          },
          {
            action: 'curve',
            x1: 'w',
            y1: 'h+h/6',
            x2: '0',
            y2: 'h+h/6',
            x: ' 0',
            y: 'h/2',
          },
          { action: 'move', x: 'Math.min(w*(1/25),h*(1/14))', y: 'h*0.5' },
          {
            action: 'curve',
            x1: 'Math.min(w*(1/25),h*(1/14))',
            y1: '-h/6+Math.min(w*(1/25),h*(1/14))',
            x2: 'w-Math.min(w*(1/25),h*(1/14)) ',
            y2: '-h/6+Math.min(w*(1/25),h*(1/14))',
            x: 'w-Math.min(w*(1/25),h*(1/14))',
            y: 'h*0.5',
          },
          {
            action: 'curve',
            x1: 'w-Math.min(w*(1/25),h*(1/14))',
            y1: 'h+h/6-Math.min(w*(1/25),h*(1/14))',
            x2: 'Math.min(w*(1/25),h*(1/14)) ',
            y2: 'h+h/6-Math.min(w*(1/25),h*(1/14))',
            x: 'Math.min(w*(1/25),h*(1/14))',
            y: 'h*0.5',
          },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          actions: [
            { action: 'move', x: 0, y: b / 2 },
            {
              action: 'curve',
              x1: 0,
              y1: -b / 6,
              x2: a,
              y2: -b / 6,
              x: a,
              y: b / 2,
            },
            {
              action: 'curve',
              x1: a,
              y1: b + b / 6,
              x2: 0,
              y2: b + b / 6,
              x: 0,
              y: b / 2,
            },
            { action: 'close' },
            { action: 'move', x: a * (1 / 8), y: b * 0.5 },
            {
              action: 'curve',
              x1: a * (1 / 8),
              y1: -b / 6 + b * (1 / 5),
              x2: a - a * (1 / 8),
              y2: -b / 6 + b * (1 / 5),
              x: a - a * (1 / 8),
              y: b * 0.5,
            },
            {
              action: 'curve',
              x1: a - a * (1 / 8),
              y1: b + b / 6 - b * (1 / 5),
              x2: a * (1 / 8),
              y2: b + b / 6 - b * (1 / 5),
              x: a * (1 / 8),
              y: b * 0.5,
            },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'weakEntity',
    title: '弱实体',
    category: 'er',
    props: { w: 100, h: 70 },
    path: [
      {
        lineStyle: { lineStyle: 'solid', lineColor: '120,120,120' },
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        actions: [
          {
            action: 'move',
            x: 'Math.min(w*(1/20),h*(1/15))',
            y: 'Math.min(w*(1/20),h*(1/15))',
          },
          {
            action: 'line',
            x: 'Math.max(w*(19/20),w-Math.min(w*(1/20),h*(1/15)))',
            y: 'Math.min(h*(1/15),w-w*(19/20))',
          },
          {
            action: 'line',
            x: 'Math.max(w*(19/20),w-Math.min(w*(1/20),h*(1/15)))',
            y: 'Math.max(h*(14/15),h-Math.min(h*(1/15),w*(1/20)))',
          },
          {
            action: 'line',
            x: 'Math.min(w*(1/20),h-h*(14/15))',
            y: 'Math.max(h*(14/15),h-Math.min(h*(1/15),w*(1/20)))',
          },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          lineStyle: { lineStyle: 'solid', lineColor: '120,120,120' },
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a, y: 0 },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
        {
          actions: [
            { action: 'move', x: a * (1 / 10), y: b * (1 / 8) },
            { action: 'line', x: a * (9 / 10), y: b * (1 / 8) },
            { action: 'line', x: a * (9 / 10), y: b * (7 / 8) },
            { action: 'line', x: a * (1 / 10), y: b * (7 / 8) },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'relationship',
    title: '关系',
    category: 'er',
    props: { w: 100, h: 70 },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h*0.5' },
          { action: 'line', x: 'w*0.5', y: '0' },
          { action: 'line', x: 'w', y: 'h*0.5' },
          { action: 'line', x: 'w*0.5', y: 'h' },
          { action: 'line', x: '0', y: 'h*0.5' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'weakRelationship',
    title: '弱关系',
    category: 'er',
    props: { w: 100, h: 80 },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h*0.5' },
          { action: 'line', x: 'w*0.5', y: '0' },
          { action: 'line', x: 'w', y: 'h*0.5' },
          { action: 'line', x: 'w*0.5', y: 'h' },
          { action: 'line', x: '0', y: 'h*0.5' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'w*(1/25)', y: 'h*0.5' },
          { action: 'line', x: 'w*0.5', y: 'h*(1/20)' },
          { action: 'line', x: 'w-w*(1/25)', y: 'h*0.5' },
          { action: 'line', x: 'w*0.5', y: 'h-h*(1/20)' },
          { action: 'line', x: 'w*(1/25)', y: 'h*0.5' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: '0', y: 'h*0.5' },
          { action: 'line', x: 'w*0.5', y: '0' },
          { action: 'line', x: 'w', y: 'h*0.5' },
          { action: 'line', x: 'w*0.5', y: 'h' },
          { action: 'line', x: '0', y: 'h*0.5' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          actions: [
            { action: 'move', x: 0, y: b * 0.5 },
            { action: 'line', x: a * 0.5, y: 0 },
            { action: 'line', x: a, y: b * 0.5 },
            { action: 'line', x: a * 0.5, y: b },
            { action: 'line', x: 0, y: b * 0.5 },
            { action: 'close' },
            { action: 'move', x: a * (1 / 6), y: b * 0.5 },
            { action: 'line', x: a * 0.5, y: b * (1 / 5) },
            { action: 'line', x: a - a * (1 / 6), y: b * 0.5 },
            { action: 'line', x: a * 0.5, y: b - b * (1 / 5) },
            { action: 'line', x: a * (1 / 6), y: b * 0.5 },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'generalization',
    title: '概化',
    category: 'er',
    props: { w: 70, h: 76 },
    anchors: [
      { x: 'w*0.5', y: '0' },
      { x: 'w*0.5', y: 'h' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h*0.25' },
          { action: 'line', x: 'w*0.5-0.1', y: 'h*0.25' },
          { action: 'line', x: 'w*0.5-0.1', y: '0' },
          { action: 'line', x: 'w*0.5+0.1', y: '0' },
          { action: 'line', x: 'w*0.5+0.1', y: 'h*0.25' },
          { action: 'line', x: 'w', y: 'h*0.25' },
          { action: 'line', x: 'w*0.5+0.1', y: 'h*0.75' },
          { action: 'line', x: 'w*0.5+0.1', y: 'h' },
          { action: 'line', x: 'w*0.5-0.1', y: 'h' },
          { action: 'line', x: 'w*0.5-0.1', y: 'h*0.75' },
          { action: 'line', x: '0', y: 'h*0.25' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          actions: [
            { action: 'move', x: a * 0.5, y: 0 },
            { action: 'line', x: a * 0.5, y: b * 0.25 },
            { action: 'line', x: a, y: b * 0.25 },
            { action: 'line', x: a * 0.5, y: b * 0.75 },
            { action: 'move', x: a * 0.5, y: b * 0.25 },
            { action: 'line', x: 0, y: b * 0.25 },
            { action: 'line', x: a * 0.5, y: b * 0.75 },
            { action: 'line', x: a * 0.5, y: b },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'allgGeneralization',
    title: '全部概化',
    category: 'er',
    props: { w: 70, h: 76 },
    anchors: [
      { x: 'w*0.4', y: '0' },
      { x: 'w*0.6', y: '0' },
      { x: 'w*0.5', y: 'h' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: 'w*0.6-0.1', y: 'h*0.25' },
          { action: 'line', x: 'w*0.6-0.1', y: '0' },
          { action: 'line', x: 'w*0.6+0.1', y: '0' },
          { action: 'line', x: 'w*0.6+0.1', y: 'h*0.25' },
          { action: 'line', x: 'w', y: 'h*0.25' },
          { action: 'line', x: 'w*0.5+0.1', y: 'h*0.75' },
          { action: 'line', x: 'w*0.5+0.1', y: 'h' },
          { action: 'line', x: 'w*0.5-0.1', y: 'h' },
          { action: 'line', x: 'w*0.5-0.1', y: 'h*0.75' },
          { action: 'line', x: '0', y: 'h*0.25' },
          { action: 'line', x: 'w*0.4-0.1', y: 'h*0.25' },
          { action: 'line', x: 'w*0.4-0.1', y: '0' },
          { action: 'line', x: 'w*0.4+0.1', y: '0' },
          { action: 'line', x: 'w*0.4+0.1', y: 'h*0.25' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          actions: [
            { action: 'move', x: a * 0.6, y: 0 },
            { action: 'line', x: a * 0.6, y: b * 0.25 },
            { action: 'line', x: a, y: b * 0.25 },
            { action: 'line', x: a * 0.5, y: b * 0.75 },
            { action: 'move', x: a * 0.6, y: b * 0.25 },
            { action: 'line', x: 0, y: b * 0.25 },
            { action: 'line', x: a * 0.5, y: b * 0.75 },
            { action: 'line', x: a * 0.5, y: b },
            { action: 'move', x: a * 0.4, y: 0 },
            { action: 'line', x: a * 0.4, y: b * 0.25 },
          ],
        },
      ]
    },
  })
  Schema.addCategory({ name: 'uml_common', text: 'UML 通用', dataAttributes: [] })
  Schema.addShape({
    name: 'package',
    title: '包',
    category: 'uml_common',
    props: { w: 210, h: 150 },
    fontStyle: { bold: true, textAlign: 'left' },
    textBlock: [
      { position: { x: '10', y: '0', w: 'w*0.7-10', h: '25' }, text: '包' },
      {
        position: { x: '10', y: '30', w: 'w-20', h: 'h-35' },
        text: '属性',
        fontStyle: { bold: false },
      },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '25' },
          { action: 'line', x: 'w-4', y: '25' },
          { action: 'quadraticCurve', x1: 'w', y1: '25', x: 'w', y: '29' },
          { action: 'line', x: 'w', y: 'h-4' },
          { action: 'quadraticCurve', x1: 'w', y1: 'h', x: 'w-4', y: 'h' },
          { action: 'line', x: '4', y: 'h' },
          { action: 'quadraticCurve', x1: '0', y1: 'h', x: '0', y: 'h-4' },
          { action: 'close' },
        ],
      },
      {
        actions: [
          { action: 'move', x: '0', y: '4' },
          { action: 'quadraticCurve', x1: '0', y1: '0', x: '4', y: '0' },
          { action: 'line', x: 'w*0.7-4', y: '0' },
          {
            action: 'quadraticCurve',
            x1: 'w*0.7',
            y1: '0',
            x: 'w*0.7+3',
            y: '3',
          },
          { action: 'line', x: 'w*0.76', y: '25' },
          { action: 'line', x: '0', y: '25' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w*0.7', y: '0' },
          { action: 'line', x: 'w*0.76', y: '25' },
          { action: 'line', x: 'w', y: '25' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          actions: [
            { action: 'move', x: 0, y: 2 },
            { action: 'quadraticCurve', x1: 0, y1: 0, x: 2, y: 0 },
            { action: 'line', x: a * 0.7 - 1.5, y: 0 },
            {
              action: 'quadraticCurve',
              x1: a * 0.7,
              y1: 0,
              x: a * 0.7 + 1,
              y: 1.5,
            },
            { action: 'line', x: a * 0.76, y: b * 0.22 },
            { action: 'line', x: a - 2, y: b * 0.22 },
            {
              action: 'quadraticCurve',
              x1: a,
              y1: b * 0.22,
              x: a,
              y: b * 0.22 + 2,
            },
            { action: 'line', x: a, y: b - 2 },
            { action: 'quadraticCurve', x1: a, y1: b, x: a - 2, y: b },
            { action: 'line', x: 2, y: b },
            { action: 'quadraticCurve', x1: 0, y1: b, x: 0, y: b - 2 },
            { action: 'close' },
          ],
        },
        {
          actions: [
            { action: 'move', x: 0, y: b * 0.22 },
            { action: 'line', x: a - 2, y: b * 0.22 },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'combinedFragment',
    title: '组合片段',
    category: 'uml_common',
    props: { w: 400, h: 280 },
    fontStyle: { textAlign: 'left', vAlign: 'top' },
    textBlock: [
      {
        position: { x: '10', y: '30', w: 'w-20', h: 'h-35' },
        text: '[Condition]',
      },
      {
        position: { x: '10', y: '0', w: 'w*0.3-10', h: '25' },
        text: 'Opt | Alt | Loop ',
        fontStyle: { vAlign: 'middle' },
      },
    ],
    path: [
      { actions: { ref: 'roundRectangle' } },
      {
        actions: [
          { action: 'move', x: '0', y: '25' },
          { action: 'line', x: 'w*0.3', y: '25' },
          { action: 'line', x: 'w*0.3+8', y: '17' },
          { action: 'line', x: 'w*0.3+8', y: '0' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          actions: [
            { action: 'move', x: 0, y: 2 },
            { action: 'quadraticCurve', x1: 0, y1: 0, x: 2, y: 0 },
            { action: 'line', x: a - 2, y: 0 },
            { action: 'quadraticCurve', x1: a, y1: 0, x: a, y: 2 },
            { action: 'line', x: a, y: b - 2 },
            { action: 'quadraticCurve', x1: a, y1: b, x: a - 2, y: b },
            { action: 'line', x: 2, y: b },
            { action: 'quadraticCurve', x1: 0, y1: b, x: 0, y: b - 2 },
            { action: 'line', x: 0, y: 2 },
            { action: 'close' },
          ],
        },
        {
          actions: [
            { action: 'move', x: 0, y: b * 0.22 },
            { action: 'line', x: a * 0.4, y: b * 0.22 },
            { action: 'line', x: a * 0.45, y: b * 0.16 },
            { action: 'line', x: a * 0.45, y: 0 },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'umlNote',
    title: '注释',
    category: 'uml_common',
    attribute: { linkable: false },
    props: { w: 100, h: 70 },
    anchors: [],
    textBlock: [{ position: { x: 10, y: 10, w: 'w-20', h: 'h-20' } }],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w-16', y: '0' },
          { action: 'line', x: 'w', y: '16' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: '0' },
          { action: 'close' },
        ],
      },
      {
        actions: [
          { action: 'move', x: 'w-16', y: '0' },
          { action: 'line', x: 'w-16', y: '16' },
          { action: 'line', x: 'w', y: '16' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w-16', y: '0' },
          { action: 'line', x: 'w', y: '16' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: '0' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a * 0.7, y: 0 },
            { action: 'line', x: a, y: b * 0.2 },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'line', x: 0, y: 0 },
            { action: 'close' },
          ],
        },
        {
          actions: [
            { action: 'move', x: a * 0.7, y: 0 },
            { action: 'line', x: a * 0.7, y: b * 0.2 },
            { action: 'line', x: a, y: b * 0.2 },
          ],
        },
        {
          fillStyle: { type: 'none' },
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a * 0.7, y: 0 },
            { action: 'line', x: a, y: b * 0.2 },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'line', x: 0, y: 0 },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'umlText',
    title: '文本',
    category: 'uml_common',
    attribute: { linkable: false },
    props: { w: 160, h: 40 },
    anchors: [],
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' }, text: '文本' }],
    path: [
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var a = 0
      var d = -6
      c = c + 12
      return [
        {
          lineStyle: { lineWidth: 2 },
          fillStyle: { type: 'solid', color: '50, 50, 50' },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: d + c * 0.2 },
            { action: 'line', x: b * 0.9, y: d + c * 0.12 },
            { action: 'line', x: b * 0.55, y: d + c * 0.12 },
            { action: 'line', x: b * 0.55, y: d + c * 0.85 },
            { action: 'line', x: b * 0.63, y: d + c },
            { action: 'line', x: b * 0.37, y: d + c },
            { action: 'line', x: b * 0.45, y: d + c * 0.85 },
            { action: 'line', x: b * 0.45, y: d + c * 0.12 },
            { action: 'line', x: b * 0.1, y: d + c * 0.12 },
            { action: 'line', x: 0, y: d + c * 0.2 },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'uml_usecase',
    text: 'UML 用例图',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'actor',
    title: '角色',
    category: 'uml_usecase',
    props: { w: 70, h: 100 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        actions: [
          { action: 'move', x: 'w*(4/12)', y: 'h*(1/8)' },
          {
            action: 'curve',
            x1: 'w*(4/12)',
            y1: '-h*(2/8)*(1/6)',
            x2: 'w*(8/12)',
            y2: '-h*(2/8)*(1/6)',
            x: 'w*(8/12)',
            y: 'h*(1/8)',
          },
          {
            action: 'curve',
            x1: 'w*(8/12)',
            y1: 'h*(2/8)*1/6+h*(2/8)',
            x2: 'w*(4/12)',
            y2: 'h*(2/8)*1/6+h*(2/8)',
            x: 'w*(4/12)',
            y: 'h*(1/8)',
          },
          { action: 'move', x: 'w*(6/12)', y: 'h*(2/8)' },
          { action: 'line', x: 'w*(6/12)', y: 'h*(6/8)' },
          { action: 'move', x: 'w*(6/12)', y: 'h*(6/8)' },
          { action: 'line', x: 'w*(1/12)', y: 'h' },
          { action: 'move', x: 'w*(6/12)', y: 'h*(6/8)' },
          { action: 'line', x: 'w*(11/12)', y: 'h' },
          { action: 'move', x: '0', y: 'h*(4/8)' },
          { action: 'line', x: 'w', y: 'h*(4/8)' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'useCase',
    title: '用例',
    category: 'uml_usecase',
    props: { w: 100, h: 70 },
    path: [{ actions: { ref: 'round' } }],
  })
  Schema.addShape({
    name: 'ovalContainer',
    title: '容器',
    category: 'uml_usecase',
    props: { w: 150, h: 220 },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h/2' },
          {
            action: 'curve',
            x1: '0',
            y1: '-h/6',
            x2: 'w',
            y2: '-h/6',
            x: 'w',
            y: 'h/2',
          },
          {
            action: 'curve',
            x1: 'w',
            y1: 'h+h/6',
            x2: '0',
            y2: 'h+h/6',
            x: '0',
            y: 'h/2',
          },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'rectangleContainer',
    title: '容器',
    category: 'uml_usecase',
    props: { w: 300, h: 240 },
    textBlock: [{ position: { x: '5', y: '2', w: 'w-10', h: 'h*(1/7)-2' } }],
    path: [{ actions: { ref: 'roundRectangle' } }],
  })
  Schema.addCategory({
    name: 'uml_sequence',
    text: 'UML 时序图',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'sequenceObject',
    title: '对象',
    category: 'uml_sequence',
    props: { w: 100, h: 70 },
    path: [{ actions: { ref: 'rectangle' } }],
  })
  Schema.addShape({
    name: 'sequenceEntity',
    title: '实体',
    category: 'uml_sequence',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h*(1/2)' },
          {
            action: 'curve',
            x1: '0',
            y1: '-h*(1/6)',
            x2: 'w',
            y2: '-h*(1/6)',
            x: 'w',
            y: 'h*(1/2)',
          },
          {
            action: 'curve',
            x1: 'w',
            y1: 'h*(7/6)',
            x2: '0',
            y2: 'h*(7/6)',
            x: '0',
            y: 'h*(1/2)',
          },
          { action: 'close' },
          { action: 'move', x: '0', y: 'h' },
          { action: 'line', x: 'w', y: 'h' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'sequenceControl',
    title: '控制',
    category: 'uml_sequence',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h*(1/2)' },
          {
            action: 'curve',
            x1: '0',
            y1: '-h*(1/6)',
            x2: 'w',
            y2: '-h*(1/6)',
            x: 'w',
            y: 'h*(1/2)',
          },
          {
            action: 'curve',
            x1: 'w',
            y1: 'h*(7/6)',
            x2: '0',
            y2: 'h*(7/6)',
            x: '0',
            y: 'h*(1/2)',
          },
          { action: 'close' },
          { action: 'move', x: 'w*(1/2)', y: '0' },
          { action: 'line', x: 'w*(1/2)+6', y: '5' },
          { action: 'move', x: 'w*(1/2)', y: '0' },
          { action: 'line', x: 'w*(1/2)+6', y: '-5' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          actions: [
            { action: 'move', x: 0, y: b * (1 / 2) },
            {
              action: 'curve',
              x1: 0,
              y1: -b * (1 / 6),
              x2: a,
              y2: -b * (1 / 6),
              x: a,
              y: b * (1 / 2),
            },
            {
              action: 'curve',
              x1: a,
              y1: b * (7 / 6),
              x2: 0,
              y2: b * (7 / 6),
              x: 0,
              y: b * (1 / 2),
            },
            { action: 'close' },
          ],
        },
        {
          actions: [
            { action: 'move', x: a * (1 / 2), y: 0 },
            { action: 'line', x: a * (4 / 6), y: b * (1 / 12) },
            { action: 'move', x: a * (1 / 2), y: 0 },
            { action: 'line', x: a * (4 / 6), y: -b * (1 / 12) },
          ],
        },
        {
          lineStyle: { lineWidth: 0 },
          fillStyle: { type: 'none' },
          actions: { ref: 'rectangle' },
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sequenceBoundary',
    title: '绑定',
    category: 'uml_sequence',
    props: { w: 50, h: 40 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        actions: [
          { action: 'move', x: 'w*(1/5)', y: 'h*(1/2)' },
          {
            action: 'curve',
            x1: 'w*(1/5)',
            y1: '-h*(1/6)',
            x2: 'w',
            y2: '-h*(1/6)',
            x: 'w',
            y: 'h*(1/2)',
          },
          {
            action: 'curve',
            x1: 'w',
            y1: 'h*(7/6)',
            x2: 'w*(1/5)',
            y2: 'h*(7/6)',
            x: 'w*(1/5)',
            y: 'h*(1/2)',
          },
          { action: 'close' },
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'move', x: '0', y: 'h*(1/2)' },
          { action: 'line', x: 'w*(1/5)', y: 'h*(1/2)' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'sequenceTimerSignal',
    title: '时间信号',
    category: 'uml_sequence',
    props: { w: 30, h: 30 },
    attribute: { linkable: false },
    textBlock: [],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: '0' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          actions: [
            { action: 'move', x: 0, y: 5 },
            { action: 'line', x: a, y: 5 },
            { action: 'line', x: 0, y: b - 5 },
            { action: 'line', x: a, y: b - 5 },
            { action: 'line', x: 0, y: 5 },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sequenceConstraint',
    title: '约束',
    category: 'uml_sequence',
    attribute: { linkable: false },
    props: { w: 110, h: 70 },
    fillStyle: { type: 'none' },
    anchors: [
      { x: 'w', y: 'h*0.5' },
      { x: '0', y: 'h*0.5' },
    ],
    path: [
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'Math.min(w*0.2,18)', y: '0' },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(w*0.1,9)',
            y1: '0',
            x: 'Math.min(w*0.1,9)',
            y: 'Math.min(h*0.1,9)',
          },
          {
            action: 'line',
            x: 'Math.min(w*0.1,9)',
            y: 'h*0.5-Math.min(h*0.1,9)',
          },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(w*0.1,9)',
            y1: 'h*0.5',
            x: '0',
            y: 'h*0.5',
          },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(w*0.1,9)',
            y1: 'h*0.5',
            x: 'Math.min(w*0.1,9)',
            y: 'h*0.5+Math.min(h*0.1,9)',
          },
          { action: 'line', x: 'Math.min(w*0.1,9)', y: 'h-Math.min(h*0.1,9)' },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(w*0.1,9)',
            y1: 'h',
            x: 'Math.min(w*0.2,18)',
            y: 'h',
          },
        ],
      },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'w-Math.min(w*0.2,18)', y: 'h' },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.1,9)',
            y1: 'h',
            x: 'w-Math.min(w*0.1,9)',
            y: 'h-Math.min(h*0.1,9)',
          },
          {
            action: 'line',
            x: 'w-Math.min(w*0.1,9)',
            y: 'h*0.5+Math.min(h*0.1,9)',
          },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.1,9)',
            y1: 'h*0.5',
            x: 'w',
            y: 'h*0.5',
          },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.1,9)',
            y1: 'h*0.5',
            x: 'w-Math.min(w*0.1,9)',
            y: 'h*0.5-Math.min(h*0.1,9)',
          },
          { action: 'line', x: 'w-Math.min(w*0.1,9)', y: 'Math.min(h*0.1,9)' },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.1,9)',
            y1: '0',
            x: 'w-Math.min(w*0.2,18)',
            y: '0',
          },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'sequenceActivation',
    title: '激活',
    category: 'uml_sequence',
    props: { w: 30, h: 100 },
    anchors: [
      { x: '0', y: 'h/2' },
      { x: 'w', y: 'h/2' },
    ],
    resizeDir: ['t', 'b'],
    textBlock: [],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '4' },
          { action: 'quadraticCurve', x1: '0', y1: '0', x: '4', y: '0' },
          { action: 'line', x: 'w-4', y: '0' },
          { action: 'quadraticCurve', x1: 'w', y1: '0', x: 'w', y: '4' },
          { action: 'line', x: 'w', y: 'h-4' },
          { action: 'quadraticCurve', x1: 'w', y1: 'h', x: 'w-4', y: 'h' },
          { action: 'line', x: '4', y: 'h' },
          { action: 'quadraticCurve', x1: '0', y1: 'h', x: '0', y: 'h-4' },
          { action: 'line', x: '0', y: '4' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (b, c) {
      b += 6
      var a = -3
      return [
        {
          actions: [
            { action: 'move', x: a, y: 4 },
            { action: 'quadraticCurve', x1: a, y1: 0, x: 0, y: 0 },
            { action: 'line', x: b - 4 - 3, y: 0 },
            { action: 'quadraticCurve', x1: b - 3, y1: 0, x: b - 3, y: 4 },
            { action: 'line', x: b - 3, y: c - 4 },
            { action: 'quadraticCurve', x1: b - 3, y1: c, x: b - 4 - 3, y: c },
            { action: 'line', x: 0, y: c },
            { action: 'quadraticCurve', x1: a, y1: c, x: a, y: c - 4 },
            { action: 'line', x: a, y: 4 },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sequenceLifeLine',
    title: '生命线',
    category: 'uml_sequence',
    props: { w: 70, h: 140 },
    attribute: { linkable: false },
    textBlock: [{ position: { x: '10', y: '0', w: 'w-20', h: '30' } }],
    anchors: [],
    path: [
      {
        lineStyle: { lineWidth: 2, lineStyle: 'dot' },
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'w*(1/2)', y: '30' },
          { action: 'line', x: 'w*(1/2)', y: 'h' },
        ],
      },
      {
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: '30' },
          { action: 'line', x: '0', y: '30' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      a += 4
      return [
        {
          lineStyle: { lineWidth: 2, lineStyle: 'dot' },
          actions: [
            { action: 'move', x: a / 2 - 1, y: b * 0.2 },
            { action: 'line', x: a / 2 - 1, y: b },
          ],
        },
        {
          actions: [
            { action: 'move', x: -6, y: 0 },
            { action: 'line', x: a + 3, y: 0 },
            { action: 'line', x: a + 3, y: b * 0.2 },
            { action: 'line', x: -6, y: b * 0.2 },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sequenceDeletion',
    title: '删除',
    category: 'uml_sequence',
    props: { w: 40, h: 40 },
    attribute: { linkable: false },
    textBlock: [],
    path: [
      {
        lineStyle: { lineWidth: 4 },
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'move', x: 'w', y: '0' },
          { action: 'line', x: '0', y: 'h' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          lineStyle: { lineWidth: 4 },
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a * 0.7, y: b * 0.7 },
            { action: 'move', x: a * 0.7, y: 0 },
            { action: 'line', x: 0, y: b * 0.7 },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'simpleClass',
    title: '简单类',
    category: 'uml_class',
    props: { w: 100, h: 70 },
    path: [{ actions: { ref: 'roundRectangle' } }],
  })
  Schema.addShape({
    name: 'interface',
    title: '接口和类',
    category: 'uml_class',
    props: { w: 230, h: 150 },
    fontStyle: { bold: true },
    textBlock: [
      { position: { x: '10', y: '0', w: 'w-20', h: '30' }, text: '接口和类' },
      {
        position: { x: '10', y: '30', w: 'w-20', h: 'h-30' },
        text: '+ operation1(params):returnType\n- operation2(params)\n- operation3()',
        fontStyle: { textAlign: 'left', bold: false },
      },
    ],
    path: [
      { actions: { ref: 'roundRectangle' } },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: '0', y: 30 },
          { action: 'line', x: 'w', y: 30 },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          actions: [
            { action: 'move', x: 0, y: 2 },
            { action: 'quadraticCurve', x1: 0, y1: 0, x: 2, y: 0 },
            { action: 'line', x: a - 2, y: 0 },
            { action: 'quadraticCurve', x1: a, y1: 0, x: a, y: 2 },
            { action: 'line', x: a, y: b - 2 },
            { action: 'quadraticCurve', x1: a, y1: b, x: a - 2, y: b },
            { action: 'line', x: 2, y: b },
            { action: 'quadraticCurve', x1: 0, y1: b, x: 0, y: b - 2 },
            { action: 'line', x: 0, y: 2 },
            { action: 'close' },
          ],
        },
        {
          actions: [
            { action: 'move', x: 0, y: b * 0.22 },
            { action: 'line', x: a, y: b * 0.22 },
          ],
        },
      ]
    },
  })
  Schema.addCategory({ name: 'uml_class', text: 'UML 类图', dataAttributes: [] })
  Schema.addShape({
    name: 'cls',
    title: '类',
    category: 'uml_class',
    props: { w: 230, h: 150, heights: [30, '(h-50)/2', '(h-50)/2'] },
    fontStyle: { bold: true },
    textBlock: [
      { position: { x: '10', y: '0', w: 'w-20', h: '30' }, text: '类' },
      {
        position: { x: '10', y: '30', w: 'w-20', h: '(h-30)/2' },
        text: '+ attribute1:type = defaultValue\n+ attribute2:type\n- attribute3:type',
        fontStyle: { textAlign: 'left', bold: false },
      },
      {
        position: { x: '10', y: '(h-30)/2 + 30', w: 'w-20', h: '(h-30)/2' },
        text: '+ operation1(params):returnType\n- operation2(params)\n- operation3()',
        fontStyle: { textAlign: 'left', bold: false },
      },
    ],
    path: [
      { actions: { ref: 'roundRectangle' } },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: '0', y: 30 },
          { action: 'line', x: 'w', y: 30 },
          { action: 'move', x: '0', y: 'h/2+15' },
          { action: 'line', x: 'w', y: 'h/2+15' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          actions: [
            { action: 'move', x: 0, y: 2 },
            { action: 'quadraticCurve', x1: 0, y1: 0, x: 2, y: 0 },
            { action: 'line', x: a - 2, y: 0 },
            { action: 'quadraticCurve', x1: a, y1: 0, x: a, y: 2 },
            { action: 'line', x: a, y: b - 2 },
            { action: 'quadraticCurve', x1: a, y1: b, x: a - 2, y: b },
            { action: 'line', x: 2, y: b },
            { action: 'quadraticCurve', x1: 0, y1: b, x: 0, y: b - 2 },
            { action: 'line', x: 0, y: 2 },
            { action: 'close' },
          ],
        },
        {
          actions: [
            { action: 'move', x: 0, y: b * 0.22 },
            { action: 'line', x: a, y: b * 0.22 },
            { action: 'move', x: 0, y: b * 0.55 },
            { action: 'line', x: a, y: b * 0.55 },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'activeClass',
    title: '活动类',
    category: 'uml_class',
    props: { w: 100, h: 70 },
    textBlock: [
      {
        position: {
          x: 'Math.min(w/6,20)',
          y: '0',
          w: 'w-Math.min(w/6,20)*2',
          h: 'h',
        },
      },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '4' },
          { action: 'quadraticCurve', x1: '0', y1: '0', x: '4', y: '0' },
          { action: 'line', x: 'w-4', y: '0' },
          { action: 'quadraticCurve', x1: 'w', y1: '0', x: 'w', y: '4' },
          { action: 'line', x: 'w', y: 'h-4' },
          { action: 'quadraticCurve', x1: 'w', y1: 'h', x: 'w-4', y: 'h' },
          { action: 'line', x: '4', y: 'h' },
          { action: 'quadraticCurve', x1: '0', y1: 'h', x: '0', y: 'h-4' },
          { action: 'line', x: '0', y: '4' },
          { action: 'close' },
          { action: 'move', x: 'Math.min(w/6,20)', y: '0' },
          { action: 'line', x: 'Math.min(w/6,20)', y: 'h' },
          { action: 'move', x: 'w- Math.min(w/6,20)', y: '0' },
          { action: 'line', x: 'w- Math.min(w/6,20)', y: 'h' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          actions: [
            { action: 'move', x: 0, y: 4 },
            { action: 'quadraticCurve', x1: 0, y1: 0, x: 4, y: 0 },
            { action: 'line', x: a - 4, y: 0 },
            { action: 'quadraticCurve', x1: a, y1: 0, x: a, y: 4 },
            { action: 'line', x: a, y: b - 4 },
            { action: 'quadraticCurve', x1: a, y1: b, x: a - 4, y: b },
            { action: 'line', x: 4, y: b },
            { action: 'quadraticCurve', x1: 0, y1: b, x: 0, y: b - 4 },
            { action: 'line', x: 0, y: 4 },
            { action: 'close' },
            { action: 'move', x: a / 7 + 3, y: 0 },
            { action: 'line', x: a / 7 + 3, y: b },
            { action: 'move', x: a - a / 7 - 3, y: 0 },
            { action: 'line', x: a - a / 7 - 3, y: b },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'multiplictyClass',
    title: '多例类',
    category: 'uml_class',
    props: { w: 100, h: 70 },
    textBlock: [
      {
        position: {
          x: 'Math.min(w/6,20)-4',
          y: '8',
          w: 'w-Math.min(w/6,20)*2',
          h: 'h-8',
        },
      },
    ],
    anchors: [
      { x: '0', y: '(w-16)*0.5' },
      { x: 'w*0.5', y: '0' },
      { x: 'w', y: 'h*0.5' },
      { x: 'w*0.5', y: 'h' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '8', y: '8' },
          { action: 'quadraticCurve', x1: '8', y1: '0', x: '16', y: '0' },
          { action: 'line', x: 'w-8', y: '0' },
          { action: 'quadraticCurve', x1: 'w', y1: '0', x: 'w', y: '8' },
          { action: 'line', x: 'w', y: 'h-16' },
          { action: 'quadraticCurve', x1: 'w', y1: 'h-8', x: 'w-8', y: 'h-8' },
          { action: 'line', x: 'w-8', y: 'h-8' },
        ],
      },
      {
        actions: [
          { action: 'move', x: '0', y: '16' },
          { action: 'quadraticCurve', x1: '0', y1: '8', x: '8', y: '8' },
          { action: 'line', x: 'w-16', y: '8' },
          { action: 'quadraticCurve', x1: 'w-8', y1: '8', x: 'w-8', y: '16' },
          { action: 'line', x: 'w-8', y: 'h-8' },
          { action: 'quadraticCurve', x1: 'w-8', y1: 'h', x: 'w-16', y: 'h' },
          { action: 'line', x: '8', y: 'h' },
          { action: 'quadraticCurve', x1: '0', y1: 'h', x: '0', y: 'h-8' },
          { action: 'line', x: '0', y: '16' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'roundRectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          actions: [
            { action: 'move', x: 4, y: 4 },
            { action: 'quadraticCurve', x1: 4, y1: 0, x: 8, y: 0 },
            { action: 'line', x: a - 4, y: 0 },
            { action: 'quadraticCurve', x1: a, y1: 0, x: a, y: 4 },
            { action: 'line', x: a, y: b - 8 },
            { action: 'quadraticCurve', x1: a, y1: b - 4, x: a - 2, y: b - 4 },
            { action: 'line', x: a - 4, y: b - 4 },
          ],
        },
        {
          actions: [
            { action: 'move', x: 0, y: 8 },
            { action: 'quadraticCurve', x1: 0, y1: 4, x: 4, y: 4 },
            { action: 'line', x: a - 8, y: 4 },
            { action: 'quadraticCurve', x1: a - 4, y1: 4, x: a - 4, y: 8 },
            { action: 'line', x: a - 4, y: b - 4 },
            { action: 'quadraticCurve', x1: a - 4, y1: b, x: a - 8, y: b },
            { action: 'line', x: 4, y: b },
            { action: 'quadraticCurve', x1: 0, y1: b, x: 0, y: b - 4 },
            { action: 'line', x: 0, y: 8 },
            { action: 'close' },
          ],
        },
        {
          lineStyle: { lineWidth: 0 },
          fillStyle: { type: 'none' },
          actions: { ref: 'roundRectangle' },
        },
      ]
    },
  })
  Schema.addShape({
    name: 'simpleInterface',
    title: '接口',
    category: 'uml_class',
    props: { w: 110, h: 140 },
    path: [{ actions: { ref: 'roundRectangle' } }],
  })
  Schema.addShape({
    name: 'constraint',
    title: '约束',
    category: 'uml_class',
    attribute: { linkable: false },
    props: { w: 110, h: 70 },
    anchors: [
      { x: 'w', y: 'h*0.5' },
      { x: '0', y: 'h*0.5' },
    ],
    path: [
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'Math.min(w*0.2,18)', y: '0' },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(w*0.1,9)',
            y1: '0',
            x: 'Math.min(w*0.1,9)',
            y: 'Math.min(h*0.1,9)',
          },
          {
            action: 'line',
            x: 'Math.min(w*0.1,9)',
            y: 'h*0.5-Math.min(h*0.1,9)',
          },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(w*0.1,9)',
            y1: 'h*0.5',
            x: '0',
            y: 'h*0.5',
          },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(w*0.1,9)',
            y1: 'h*0.5',
            x: 'Math.min(w*0.1,9)',
            y: 'h*0.5+Math.min(h*0.1,9)',
          },
          { action: 'line', x: 'Math.min(w*0.1,9)', y: 'h-Math.min(h*0.1,9)' },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(w*0.1,9)',
            y1: 'h',
            x: 'Math.min(w*0.2,18)',
            y: 'h',
          },
        ],
      },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'w-Math.min(w*0.2,18)', y: 'h' },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.1,9)',
            y1: 'h',
            x: 'w-Math.min(w*0.1,9)',
            y: 'h-Math.min(h*0.1,9)',
          },
          {
            action: 'line',
            x: 'w-Math.min(w*0.1,9)',
            y: 'h*0.5+Math.min(h*0.1,9)',
          },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.1,9)',
            y1: 'h*0.5',
            x: 'w',
            y: 'h*0.5',
          },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.1,9)',
            y1: 'h*0.5',
            x: 'w-Math.min(w*0.1,9)',
            y: 'h*0.5-Math.min(h*0.1,9)',
          },
          { action: 'line', x: 'w-Math.min(w*0.1,9)', y: 'Math.min(h*0.1,9)' },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.1,9)',
            y1: '0',
            x: 'w-Math.min(w*0.2,18)',
            y: '0',
          },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'port',
    title: '端口',
    category: 'uml_class',
    props: { w: 20, h: 20 },
    resizeDir: [],
    attribute: { linkable: false },
    textBlock: [],
    path: [{ actions: { ref: 'rectangle' } }],
  })
  Schema.addCategory({
    name: 'uml_stateactivity',
    text: 'UML 状态图/活动图',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'umlObject',
    title: '对象',
    category: 'uml_stateactivity',
    props: { w: 100, h: 70 },
    path: [{ actions: { ref: 'rectangle' } }],
  })
  Schema.addShape({
    name: 'umlState',
    title: '状态',
    category: 'uml_stateactivity',
    props: { w: 100, h: 70 },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '18' },
          { action: 'quadraticCurve', x1: '0', y1: '0', x: '18', y: '0' },
          { action: 'line', x: 'w-18', y: '0' },
          { action: 'quadraticCurve', x1: 'w', y1: '0', x: 'w', y: '18' },
          { action: 'line', x: 'w', y: 'h-18' },
          { action: 'quadraticCurve', x1: 'w', y1: 'h', x: 'w-18', y: 'h' },
          { action: 'line', x: '18', y: 'h' },
          { action: 'quadraticCurve', x1: '0', y1: 'h', x: '0', y: 'h-18' },
          { action: 'line', x: '0', y: '18' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          actions: [
            { action: 'move', x: 0, y: 6 },
            { action: 'quadraticCurve', x1: 0, y1: 0, x: 6, y: 0 },
            { action: 'line', x: a - 6, y: 0 },
            { action: 'quadraticCurve', x1: a, y1: 0, x: a, y: 6 },
            { action: 'line', x: a, y: b - 6 },
            { action: 'quadraticCurve', x1: a, y1: b, x: a - 6, y: b },
            { action: 'line', x: 6, y: b },
            { action: 'quadraticCurve', x1: 0, y1: b, x: 0, y: b - 6 },
            { action: 'line', x: 0, y: 6 },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'umlStart',
    title: '开始',
    category: 'uml_stateactivity',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'umlEnd',
    title: '结束',
    category: 'uml_stateactivity',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        lineStyle: { lineWidth: 'lineWidth + 2', lineStyle: 'solid' },
        actions: { ref: 'round' },
      },
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: [
          { action: 'move', x: 'w*0.5 - w*0.25', y: 'h*0.5' },
          {
            action: 'curve',
            x1: 'w*0.5 - w*0.25',
            y1: 'h*0.5 - h*2/3*0.5',
            x2: 'w*0.5 + w*0.25',
            y2: 'h*0.5 - h*2/3*0.5',
            x: 'w*0.5 + w*0.25',
            y: 'h*0.5',
          },
          {
            action: 'curve',
            x1: 'w*0.5 + w*0.25',
            y1: 'h*0.5 + h*2/3*0.5',
            x2: 'w*0.5 - w*0.25',
            y2: 'h*0.5 + h*2/3*0.5',
            x: 'w*0.5 - w*0.25',
            y: 'h*0.5',
          },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'flowFinal',
    title: '流终止',
    category: 'uml_stateactivity',
    props: { w: 40, h: 40 },
    textBlock: [],
    path: [
      { actions: { ref: 'round' } },
      {
        actions: [
          { action: 'move', x: 'w*(1/6)', y: 'h*(1/6)' },
          { action: 'line', x: 'w*(5/6)', y: 'h*(5/6)' },
          { action: 'move', x: 'w*(5/6)', y: 'h*(1/6)' },
          { action: 'line', x: 'w*(1/6)', y: 'h*(5/6)' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'simpleHistory',
    title: '历史',
    category: 'uml_stateactivity',
    props: { w: 40, h: 40 },
    textBlock: [],
    path: [
      { actions: { ref: 'round' } },
      {
        actions: [
          { action: 'move', x: 'w*(1/3)', y: 'h*(1/3)' },
          { action: 'line', x: 'w*(1/3)', y: 'h*(2/3)' },
          { action: 'move', x: 'w*(1/3)', y: 'h*(1/2)' },
          { action: 'line', x: 'w*(2/3)', y: 'h*(1/2)' },
          { action: 'move', x: 'w*(2/3)', y: 'h*(1/3)' },
          { action: 'line', x: 'w*(2/3)', y: 'h*(2/3)' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'detialHistory',
    title: '详细历史',
    category: 'uml_stateactivity',
    props: { w: 40, h: 40 },
    textBlock: [],
    path: [
      { actions: { ref: 'round' } },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'w*(1/5)+w*(1/80)', y: 'h*(1/3)-h*(1/10)' },
          { action: 'line', x: 'w*(1/5)+w*(1/80)', y: 'h*(2/3)+h*(1/10)' },
          { action: 'move', x: 'w*(1/5)+w*(1/80)', y: 'h*(1/2)' },
          { action: 'line', x: 'w*(1/5)+w*(1/80)+w*(1/5)*(8/9)', y: 'h*(1/2)' },
          {
            action: 'move',
            x: 'w*(1/5)+w*(1/80)+w*(1/5)*(8/9)',
            y: 'h*(1/3)-h*(1/10)',
          },
          {
            action: 'line',
            x: 'w*(1/5)+w*(1/80)+w*(1/5)*(8/9) ',
            y: 'h*(2/3)+h*(1/10)',
          },
        ],
      },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'w*(1/5)+w*(1/4)', y: 'h*(1/3)+h*(1/3)*(1/4)' },
          { action: 'line', x: 'w*(4/5)', y: 'h*(1/3)+h*(1/3)*(3/4)' },
          { action: 'move', x: 'w*(6/10)+w*(1/40)', y: 'h*(1/3)' },
          { action: 'line', x: 'w*(6/10)+w*(1/40)', y: 'h*(2/3)' },
          { action: 'move', x: 'w*(4/5)', y: 'h*(1/3)+h*(1/3)*(1/4)' },
          { action: 'line', x: 'w*(1/5)+w*(1/4)', y: 'h*(1/3)+h*(1/3)*(3/4)' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'sendSignal',
    title: '发送信号',
    category: 'uml_stateactivity',
    props: { w: 150, h: 70 },
    textBlock: [
      {
        position: {
          x: 'w*0.1',
          y: '2',
          w: '(w-Math.min(h/2,w/6))*0.8',
          h: 'h-2',
        },
      },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w-Math.min(h/2,w/6)', y: '0' },
          { action: 'line', x: 'w', y: 'h*0.5' },
          { action: 'line', x: 'w-Math.min(h/2,w/6)', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'receiveSignal',
    title: '接收信号',
    category: 'uml_stateactivity',
    props: { w: 150, h: 70 },
    textBlock: [
      {
        position: {
          x: 'w*0.1',
          y: '2',
          w: '(w-Math.min(h/2,w/6))*0.8',
          h: 'h-2',
        },
      },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w-Math.min(h/2,w/6)', y: 'h*0.5' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'branchMerge',
    title: '分支',
    category: 'uml_stateactivity',
    props: { w: 40, h: 40 },
    textBlock: [],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h*0.5' },
          { action: 'line', x: 'w*0.5', y: '0' },
          { action: 'line', x: 'w', y: 'h*0.5' },
          { action: 'line', x: 'w*0.5', y: 'h' },
          { action: 'line', x: '0', y: 'h*0.5' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'Synchronization',
    title: '同步',
    category: 'uml_stateactivity',
    props: { w: 120, h: 20 },
    textBlock: [],
    resizeDir: ['l', 'r'],
    anchors: [],
    path: [
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: '50,50,50' },
        actions: { ref: 'roundRectangle' },
      },
    ],
    drawIcon: function (a, b) {
      b += 2
      return [
        {
          lineStyle: { lineWidth: 0, lineStyle: 'solid' },
          fillStyle: { type: 'solid', color: '50,50,50' },
          actions: [
            { action: 'move', x: 0, y: 3 - 5 + 3 },
            { action: 'quadraticCurve', x1: 0, y1: -5 + 3, x: 3, y: -5 + 3 },
            { action: 'line', x: a - 3, y: -5 + 3 },
            { action: 'quadraticCurve', x1: a, y1: -5 + 3, x: a, y: 3 - 5 + 3 },
            { action: 'line', x: a, y: b - 3 },
            { action: 'quadraticCurve', x1: a, y1: b, x: a - 3, y: b },
            { action: 'line', x: 3, y: b },
            { action: 'quadraticCurve', x1: 0, y1: b, x: 0, y: b - 3 },
            { action: 'line', x: 0, y: 3 - 5 + 3 },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'stateRectangleContainer',
    title: '容器',
    category: 'uml_stateactivity',
    attribute: { container: true },
    children: [],
    props: { w: 300, h: 240 },
    textBlock: [{ position: { x: '5', y: '2', w: 'w-10', h: 'h*(1/7)-2' } }],
    path: [{ actions: { ref: 'roundRectangle' } }],
  })
  Schema.addShape({
    name: 'swimlane',
    title: '泳道(垂直)',
    category: 'uml_stateactivity',
    attribute: { rotatable: false, linkable: false, container: true },
    children: [],
    props: { w: 250, h: 540 },
    fontStyle: { size: 16 },
    textBlock: [{ position: { x: 10, y: 0, w: 'w-20', h: 40 } }],
    anchors: [],
    resizeDir: ['l', 'b', 'r'],
    path: [
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineStyle: 'solid' },
        actions: { ref: 'rectangle' },
      },
      {
        lineStyle: { lineStyle: 'solid' },
        actions: [
          { action: 'move', x: 0, y: 0 },
          { action: 'line', x: 'w', y: 0 },
          { action: 'line', x: 'w', y: 40 },
          { action: 'line', x: 0, y: 40 },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (b, c) {
      var a = -4
      return [
        {
          fillStyle: { type: 'none' },
          actions: [
            { action: 'move', x: a, y: 0 },
            { action: 'line', x: b, y: 0 },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
        {
          actions: [
            { action: 'move', x: a, y: 0 },
            { action: 'line', x: b, y: 0 },
            { action: 'line', x: b, y: 4 },
            { action: 'line', x: a, y: 4 },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'horizontalSwimlane',
    title: '泳道(水平)',
    category: 'uml_stateactivity',
    attribute: { rotatable: false, linkable: false, container: true },
    children: [],
    props: { w: 640, h: 200 },
    fontStyle: { size: 16, orientation: 'horizontal' },
    textBlock: [{ position: { x: 0, y: 10, w: 40, h: 'h-20' } }],
    anchors: [],
    resizeDir: ['t', 'r', 'b'],
    path: [
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineStyle: 'solid' },
        actions: { ref: 'rectangle' },
      },
      {
        lineStyle: { lineStyle: 'solid' },
        actions: [
          { action: 'move', x: 0, y: 0 },
          { action: 'line', x: 40, y: 0 },
          { action: 'line', x: 40, y: 'h' },
          { action: 'line', x: 0, y: 'h' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      var c = -4
      return [
        {
          fillStyle: { type: 'none' },
          actions: [
            { action: 'move', x: 0, y: c },
            { action: 'line', x: a, y: c },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
        {
          actions: [
            { action: 'move', x: 0, y: c },
            { action: 'line', x: 4, y: c },
            { action: 'line', x: 4, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'uml_deployment',
    text: 'UML 部署图',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'devComponentNonInstance',
    title: '组件',
    category: 'uml_deployment',
    props: { w: 100, h: 70 },
    fontStyle: { bold: true },
    textBlock: [
      {
        position: { x: 'w*(1/8)+5', y: '0', w: 'w-w*(1/8)-10', h: 'h' },
        text: '组件',
      },
    ],
    anchors: [
      { x: 'w*0.5', y: '0' },
      { x: 'w', y: 'h*0.5' },
      { x: 'w*0.5', y: 'h' },
      { x: '0', y: 'h*(3/10)' },
      { x: '0', y: 'h*(7/10)' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: 'w*(1/10)', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: 'w*(1/10)', y: 'h' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(8/10)' },
          { action: 'line', x: '0', y: 'h*(8/10)' },
          { action: 'line', x: '0', y: 'h*(6/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(6/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(4/10)' },
          { action: 'line', x: '0', y: 'h*(4/10)' },
          { action: 'line', x: '0', y: 'h*(2/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(2/10)' },
          { action: 'line', x: 'w*(1/10)', y: '0' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'w*(2/10)*0.5', y: 'h*(8/10)' },
          { action: 'line', x: 'w*(2/10)', y: 'h*(8/10)' },
          { action: 'line', x: 'w*(2/10)', y: 'h*(6/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(6/10)' },
          { action: 'move', x: 'w*(2/10)*0.5', y: 'h*(4/10)' },
          { action: 'line', x: 'w*(2/10)', y: 'h*(4/10)' },
          { action: 'line', x: 'w*(2/10)', y: 'h*(2/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(2/10)' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: 'w*(1/10)', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: 'w*(1/10)', y: 'h' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(8/10)' },
          { action: 'line', x: '0', y: 'h*(8/10)' },
          { action: 'line', x: '0', y: 'h*(6/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(6/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(4/10)' },
          { action: 'line', x: '0', y: 'h*(4/10)' },
          { action: 'line', x: '0', y: 'h*(2/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(2/10)' },
          { action: 'line', x: 'w*(1/10)', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'devComponent',
    title: '实例化组件',
    category: 'uml_deployment',
    props: { w: 100, h: 70 },
    textBlock: [
      {
        position: { x: 'w*(1/8)+5', y: '0', w: 'w-w*(1/8)-10', h: 'h' },
        text: '实例化组件',
      },
    ],
    fontStyle: { underline: true },
    anchors: [
      { x: 'w*0.5', y: '0' },
      { x: 'w', y: 'h*0.5' },
      { x: 'w*0.5', y: 'h' },
      { x: '0', y: 'h*(3/10)' },
      { x: '0', y: 'h*(7/10)' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: 'w*(1/10)', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: 'w*(1/10)', y: 'h' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(8/10)' },
          { action: 'line', x: '0', y: 'h*(8/10)' },
          { action: 'line', x: '0', y: 'h*(6/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(6/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(4/10)' },
          { action: 'line', x: '0', y: 'h*(4/10)' },
          { action: 'line', x: '0', y: 'h*(2/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(2/10)' },
          { action: 'line', x: 'w*(1/10)', y: '0' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'w*(2/10)*0.5', y: 'h*(8/10)' },
          { action: 'line', x: 'w*(2/10)', y: 'h*(8/10)' },
          { action: 'line', x: 'w*(2/10)', y: 'h*(6/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(6/10)' },
          { action: 'move', x: 'w*(2/10)*0.5', y: 'h*(4/10)' },
          { action: 'line', x: 'w*(2/10)', y: 'h*(4/10)' },
          { action: 'line', x: 'w*(2/10)', y: 'h*(2/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(2/10)' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: 'w*(1/10)', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: 'w*(1/10)', y: 'h' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(8/10)' },
          { action: 'line', x: '0', y: 'h*(8/10)' },
          { action: 'line', x: '0', y: 'h*(6/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(6/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(4/10)' },
          { action: 'line', x: '0', y: 'h*(4/10)' },
          { action: 'line', x: '0', y: 'h*(2/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(2/10)' },
          { action: 'line', x: 'w*(1/10)', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'devNodeNonInstance',
    title: '节点',
    category: 'uml_deployment',
    props: { w: 270, h: 270 },
    fontStyle: { bold: true },
    textBlock: [
      {
        position: { x: '10', y: 'h*(1/9)', w: 'w*(8/9)-20', h: 'h*(8/9)' },
        text: '节点',
      },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h*(1/9)' },
          { action: 'line', x: 'w*(8/9)', y: 'h*(1/9)' },
          { action: 'line', x: 'w*(8/9)', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: 'h*(1/9)' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineStyle: 'solid', lineWidth: 2 },
        fillStyle: { type: 'solid', color: 'r-25,g-25,b-25' },
        actions: [
          { action: 'move', x: '0', y: 'h*(1/9)' },
          { action: 'line', x: 'w*(1/9)', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h*(8/9)' },
          { action: 'line', x: 'w*(8/9)', y: 'h' },
          { action: 'line', x: 'w*(8/9)', y: 'h*(1/9)' },
          { action: 'line', x: '0', y: 'h*(1/9)' },
          { action: 'close' },
          { action: 'move', x: 'w*(8/9)', y: 'h*(1/9)' },
          { action: 'line', x: 'w', y: '0' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'devNodeInstance',
    title: '实例化节点',
    category: 'uml_deployment',
    props: { w: 270, h: 270 },
    textBlock: [
      {
        position: { x: '10', y: 'h*(1/9)', w: 'w*(8/9)-20', h: 'h*(8/9)' },
        text: '实例化节点',
      },
    ],
    fontStyle: { underline: true },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h*(1/9)' },
          { action: 'line', x: 'w*(8/9)', y: 'h*(1/9)' },
          { action: 'line', x: 'w*(8/9)', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: 'h*(1/9)' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineStyle: 'solid', lineWidth: 2 },
        fillStyle: { type: 'solid', color: 'r-25,g-25,b-25' },
        actions: [
          { action: 'move', x: '0', y: 'h*(1/9)' },
          { action: 'line', x: 'w*(1/9)', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h*(8/9)' },
          { action: 'line', x: 'w*(8/9)', y: 'h' },
          { action: 'line', x: 'w*(8/9)', y: 'h*(1/9)' },
          { action: 'line', x: '0', y: 'h*(1/9)' },
          { action: 'close' },
          { action: 'move', x: 'w*(8/9)', y: 'h*(1/9)' },
          { action: 'line', x: 'w', y: '0' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'uml_deploymentObject',
    title: '对象',
    category: 'uml_deployment',
    props: { w: 100, h: 70 },
    path: [{ actions: { ref: 'rectangle' } }],
  })
  Schema.addShape({
    name: 'uml_deploymentConstraint',
    title: '约束',
    category: 'uml_deployment',
    attribute: { linkable: false },
    props: { w: 110, h: 70 },
    fillStyle: { type: 'none' },
    anchors: [
      { x: 'w', y: 'h*0.5' },
      { x: '0', y: 'h*0.5' },
    ],
    path: [
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'Math.min(w*0.2,18)', y: '0' },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(w*0.1,9)',
            y1: '0',
            x: 'Math.min(w*0.1,9)',
            y: 'Math.min(h*0.1,9)',
          },
          {
            action: 'line',
            x: 'Math.min(w*0.1,9)',
            y: 'h*0.5-Math.min(h*0.1,9)',
          },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(w*0.1,9)',
            y1: 'h*0.5',
            x: '0',
            y: 'h*0.5',
          },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(w*0.1,9)',
            y1: 'h*0.5',
            x: 'Math.min(w*0.1,9)',
            y: 'h*0.5+Math.min(h*0.1,9)',
          },
          { action: 'line', x: 'Math.min(w*0.1,9)', y: 'h-Math.min(h*0.1,9)' },
          {
            action: 'quadraticCurve',
            x1: 'Math.min(w*0.1,9)',
            y1: 'h',
            x: 'Math.min(w*0.2,18)',
            y: 'h',
          },
        ],
      },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'w-Math.min(w*0.2,18)', y: 'h' },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.1,9)',
            y1: 'h',
            x: 'w-Math.min(w*0.1,9)',
            y: 'h-Math.min(h*0.1,9)',
          },
          {
            action: 'line',
            x: 'w-Math.min(w*0.1,9)',
            y: 'h*0.5+Math.min(h*0.1,9)',
          },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.1,9)',
            y1: 'h*0.5',
            x: 'w',
            y: 'h*0.5',
          },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.1,9)',
            y1: 'h*0.5',
            x: 'w-Math.min(w*0.1,9)',
            y: 'h*0.5-Math.min(h*0.1,9)',
          },
          { action: 'line', x: 'w-Math.min(w*0.1,9)', y: 'Math.min(h*0.1,9)' },
          {
            action: 'quadraticCurve',
            x1: 'w-Math.min(w*0.1,9)',
            y1: '0',
            x: 'w-Math.min(w*0.2,18)',
            y: '0',
          },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addCategory({
    name: 'uml_component',
    text: 'UML 组件图',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'component',
    title: '组件',
    category: 'uml_component',
    props: { w: 100, h: 70 },
    textBlock: [
      { position: { x: 'w*(1/8)+5', y: '0', w: 'w-w*(1/8)-10', h: 'h' } },
    ],
    anchors: [
      { x: 'w*0.5', y: '0' },
      { x: 'w', y: 'h*0.5' },
      { x: 'w*0.5', y: 'h' },
      { x: '0', y: 'h*(3/10)' },
      { x: '0', y: 'h*(7/10)' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: 'w*(1/10)', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: 'w*(1/10)', y: 'h' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(8/10)' },
          { action: 'line', x: '0', y: 'h*(8/10)' },
          { action: 'line', x: '0', y: 'h*(6/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(6/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(4/10)' },
          { action: 'line', x: '0', y: 'h*(4/10)' },
          { action: 'line', x: '0', y: 'h*(2/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(2/10)' },
          { action: 'line', x: 'w*(1/10)', y: '0' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'w*(2/10)*0.5', y: 'h*(8/10)' },
          { action: 'line', x: 'w*(2/10)', y: 'h*(8/10)' },
          { action: 'line', x: 'w*(2/10)', y: 'h*(6/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(6/10)' },
          { action: 'move', x: 'w*(2/10)*0.5', y: 'h*(4/10)' },
          { action: 'line', x: 'w*(2/10)', y: 'h*(4/10)' },
          { action: 'line', x: 'w*(2/10)', y: 'h*(2/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(2/10)' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: 'w*(1/10)', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: 'w*(1/10)', y: 'h' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(8/10)' },
          { action: 'line', x: '0', y: 'h*(8/10)' },
          { action: 'line', x: '0', y: 'h*(6/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(6/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(4/10)' },
          { action: 'line', x: '0', y: 'h*(4/10)' },
          { action: 'line', x: '0', y: 'h*(2/10)' },
          { action: 'line', x: 'w*(2/10)*0.5', y: 'h*(2/10)' },
          { action: 'line', x: 'w*(1/10)', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'componentNodeNonInstance',
    title: '节点',
    category: 'uml_component',
    props: { w: 270, h: 270 },
    textBlock: [
      { position: { x: '10', y: 'h*(1/9)', w: 'w*(8/9)-20', h: 'h*(8/9)' } },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h*(1/9)' },
          { action: 'line', x: 'w*(8/9)', y: 'h*(1/9)' },
          { action: 'line', x: 'w*(8/9)', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: 'h*(1/9)' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineStyle: 'solid', lineWidth: 2 },
        fillStyle: { type: 'solid', color: 'r-25,g-25,b-25' },
        actions: [
          { action: 'move', x: '0', y: 'h*(1/9)' },
          { action: 'line', x: 'w*(1/9)', y: '0' },
          { action: 'line', x: 'w', y: '0' },
          { action: 'line', x: 'w', y: 'h*(8/9)' },
          { action: 'line', x: 'w*(8/9)', y: 'h' },
          { action: 'line', x: 'w*(8/9)', y: 'h*(1/9)' },
          { action: 'line', x: '0', y: 'h*(1/9)' },
          { action: 'close' },
          { action: 'move', x: 'w*(8/9)', y: 'h*(1/9)' },
          { action: 'line', x: 'w', y: '0' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'componentStart',
    title: '接口',
    category: 'uml_component',
    props: { w: 40, h: 40 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [{ lineStyle: { lineStyle: 'solid' }, actions: { ref: 'round' } }],
  })
  Schema.addCategory({ name: 'ui', text: 'UI 界面元素', dataAttributes: [] })
  Schema.addShape({
    name: 'uiHeading',
    title: '标题',
    category: 'ui',
    attribute: { linkable: false },
    props: { w: 120, h: 30 },
    anchors: [],
    fillStyle: { type: 'none' },
    fontStyle: { size: 26 },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' }, text: '标题' }],
    path: [{ lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } }],
    drawIcon: function (b, c) {
      var a = -4
      b += 4
      var d = -2
      c += 2
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/ui/thumb/heading.png',
            imageW: 30,
            imageH: 9,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiLabel',
    title: '标签',
    category: 'ui',
    attribute: { linkable: false },
    props: { w: 80, h: 25 },
    anchors: [],
    fillStyle: { type: 'none' },
    fontStyle: { size: 14 },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' }, text: '标签：' }],
    path: [{ lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } }],
    drawIcon: function (b, c) {
      var a = -4
      b += 4
      var d = 1
      c += 4
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/ui/thumb/label.png',
            imageW: 26,
            imageH: 9,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiParagraph',
    title: '文字段落',
    category: 'ui',
    attribute: { linkable: false },
    props: { w: 240, h: 100 },
    anchors: [],
    fillStyle: { type: 'none' },
    fontStyle: { textAlign: 'left', vAlign: 'top', size: 14 },
    textBlock: [
      { position: { x: 0, y: 0, w: 'w', h: 'h' }, text: '段落内容...' },
    ],
    path: [{ lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } }],
    drawIcon: function (b, c) {
      var a = -4
      b += 4
      var d = -8
      c += 8
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/ui/thumb/paragraph.png',
            imageW: 26,
            imageH: 26,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiLink',
    title: '链接',
    category: 'ui',
    attribute: { linkable: false },
    props: { w: 80, h: 25 },
    anchors: [],
    fillStyle: { type: 'none' },
    fontStyle: { size: 14, underline: true, color: '65,131,196' },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' }, text: '链接' }],
    path: [{ lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } }],
    drawIcon: function (b, c) {
      var a = -4
      b += 4
      var d = -8
      c += 8
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/ui/thumb/link.png',
            imageW: 26,
            imageH: 12,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiNote',
    title: '注释',
    category: 'ui',
    attribute: { linkable: false },
    props: { w: 80, h: 100 },
    anchors: [],
    textBlock: [{ position: { x: 10, y: 10, w: 'w-20', h: 'h-20' } }],
    fillStyle: { color: '255, 255, 170' },
    lineStyle: { lineWidth: 0 },
    fontStyle: { size: 14 },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w-16', y: '0' },
          { action: 'line', x: 'w', y: '16' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: '0' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'solid', color: 'r-50,g-50,b-50' },
        actions: [
          { action: 'move', x: 'w-16', y: '0' },
          { action: 'line', x: 'w-16', y: '16' },
          { action: 'line', x: 'w', y: '16' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: '0', y: '0' },
          { action: 'line', x: 'w-16', y: '0' },
          { action: 'line', x: 'w', y: '16' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: '0', y: '0' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a * 0.6, y: 0 },
            { action: 'line', x: a, y: b * 0.24 },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'line', x: 0, y: 0 },
            { action: 'close' },
          ],
        },
        {
          lineStyle: { lineWidth: 0 },
          fillStyle: { type: 'solid', color: '205, 205, 120' },
          actions: [
            { action: 'move', x: a * 0.6, y: 0 },
            { action: 'line', x: a * 0.6, y: b * 0.24 },
            { action: 'line', x: a * 0.93, y: b * 0.24 },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiBox',
    title: '盒容器',
    category: 'ui',
    attribute: { linkable: false },
    props: { w: 240, h: 80 },
    lineStyle: { lineWidth: 2, lineColor: '138,138,138' },
    fillStyle: { type: 'solid', color: '235,235,235' },
    anchors: [],
    path: [{ actions: { ref: 'rectangle' } }],
    drawIcon: function (b, c) {
      var a = 0.5
      var d = -2.5
      c = Math.round(c + 4) - 0.5
      b = Math.round(b) - 0.5
      return [
        {
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiBrowser',
    title: '浏览器',
    category: 'ui',
    attribute: { linkable: false },
    props: { w: 800, h: 500 },
    lineStyle: { lineWidth: 2, lineColor: '218,218,218' },
    anchors: [],
    textBlock: [
      {
        position: { x: 60, y: 5, w: 'w-70', h: '20' },
        text: 'http://process.xxx.work',
        fontStyle: { textAlign: 'left' },
      },
    ],
    path: [
      { actions: { ref: 'roundRectangle' } },
      {
        fillStyle: { color: 'r-37,g-37,b-37' },
        actions: [
          { action: 'move', x: 0, y: 30 },
          { action: 'line', x: 0, y: 4 },
          { action: 'quadraticCurve', x1: 0, y1: 0, x: 4, y: 0 },
          { action: 'line', x: 'w-4', y: 0 },
          { action: 'quadraticCurve', x1: 'w', y1: 0, x: 'w', y: 4 },
          { action: 'line', x: 'w', y: 30 },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'solid', color: '255,255,255' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: 10, y: 15 },
          { action: 'curve', x1: 10, y1: 10, x2: 18, y2: 10, x: 18, y: 15 },
          { action: 'curve', x1: 18, y1: 20, x2: 10, y2: 20, x: 10, y: 15 },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'solid', color: '255,255,255' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: 23, y: 15 },
          { action: 'curve', x1: 23, y1: 10, x2: 31, y2: 10, x: 31, y: 15 },
          { action: 'curve', x1: 31, y1: 20, x2: 23, y2: 20, x: 23, y: 15 },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'solid', color: '255,255,255' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: 36, y: 15 },
          { action: 'curve', x1: 36, y1: 10, x2: 44, y2: 10, x: 44, y: 15 },
          { action: 'curve', x1: 44, y1: 20, x2: 36, y2: 20, x: 36, y: 15 },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'solid', color: '255,255,255' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: 55, y: 9 },
          { action: 'quadraticCurve', x1: 55, y1: 5, x: 59, y: 5 },
          { action: 'line', x: 'w-9', y: 5 },
          { action: 'quadraticCurve', x1: 'w-5', y1: 5, x: 'w-5', y: 9 },
          { action: 'line', x: 'w-5', y: 21 },
          { action: 'quadraticCurve', x1: 'w-5', y1: 25, x: 'w-9', y: 25 },
          { action: 'line', x: '59', y: 25 },
          { action: 'quadraticCurve', x1: 55, y1: 25, x: 55, y: 21 },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var a = -4
      b += 4
      var d = -10
      c += 8
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/ui/thumb/browser.png',
            imageW: 30,
            imageH: 24,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiDialog',
    title: '对话框',
    category: 'ui',
    attribute: { linkable: false },
    props: { w: 300, h: 160 },
    lineStyle: { lineWidth: 2, lineColor: '136,136,136' },
    fontStyle: { textAlign: 'left', size: 14 },
    anchors: [],
    textBlock: [
      {
        position: { x: 10, y: 5, w: 'w-40', h: 25 },
        text: '标题',
        fontStyle: { vAlign: 'middle' },
      },
      { position: { x: 10, y: 45, w: 'w-20', h: 'h-55' }, text: '内容...' },
    ],
    path: [
      { actions: { ref: 'rectangle' } },
      {
        fillStyle: { color: 'r-20,g-20,b-20' },
        actions: [
          { action: 'move', x: 0, y: 0 },
          { action: 'line', x: 'w', y: 0 },
          { action: 'line', x: 'w', y: 35 },
          { action: 'line', x: 0, y: 35 },
          { action: 'close' },
        ],
      },
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/ui/close.png',
          imageX: 'w-25',
          imageY: 8,
          imageW: 20,
          imageH: 20,
          display: 'static',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var a = -4
      b += 4
      var d = -10
      c += 8
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/ui/thumb/dialog.png',
            imageW: 30,
            imageH: 30,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiTab',
    title: 'Tab 标签页',
    category: 'ui',
    attribute: { linkable: true },
    props: { w: 360, h: 40 },
    lineStyle: { lineWidth: 2, lineColor: '136,136,136' },
    fontStyle: { size: 14 },
    anchors: [],
    textBlock: [
      { position: { x: 5, y: 5, w: 'w/3-10', h: 'h-10' }, text: 'Tab 1' },
      { position: { x: 'w/3+5', y: 5, w: 'w/3-10', h: 'h-10' }, text: 'Tab 2' },
      { position: { x: 'w/3*2+5', y: 5, w: 'w/3-10', h: 'h-10' }, text: 'Tab 3' },
    ],
    path: [
      {
        fillStyle: { color: 'r-20,g-20,b-20' },
        actions: [
          { action: 'move', x: 0, y: 'h' },
          { action: 'line', x: 0, y: 7 },
          { action: 'quadraticCurve', x1: 0, y1: 0, x: 7, y: 0 },
          { action: 'line', x: 'w/3-7', y: 0 },
          { action: 'quadraticCurve', x1: 'w/3', y1: 0, x: 'w/3', y: 7 },
          { action: 'line', x: 'w/3', y: 'h' },
          { action: 'close' },
        ],
      },
      {
        actions: [
          { action: 'move', x: 'w/3', y: 'h' },
          { action: 'line', x: 'w/3', y: 7 },
          { action: 'quadraticCurve', x1: 'w/3', y1: 0, x: 'w/3+7', y: 0 },
          { action: 'line', x: 'w/3*2-7', y: 0 },
          { action: 'quadraticCurve', x1: 'w/3*2', y1: 0, x: 'w/3*2', y: 7 },
          { action: 'line', x: 'w/3*2', y: 'h' },
        ],
      },
      {
        fillStyle: { color: 'r-20,g-20,b-20' },
        actions: [
          { action: 'move', x: 'w/3*2', y: 'h' },
          { action: 'line', x: 'w/3*2', y: 7 },
          { action: 'quadraticCurve', x1: 'w/3*2', y1: 0, x: 'w/3*2+7', y: 0 },
          { action: 'line', x: 'w-7', y: 0 },
          { action: 'quadraticCurve', x1: 'w', y1: 0, x: 'w', y: 7 },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var a = -4
      b += 4
      var d = -10
      c += 8
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/ui/thumb/tab.png',
            imageW: 30,
            imageH: 16,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiGrid',
    title: 'Grid 数据网格',
    category: 'ui',
    attribute: { linkable: false },
    props: { w: 360, h: 150 },
    lineStyle: { lineWidth: 2, lineColor: '138,138,138' },
    fontStyle: { size: 14 },
    anchors: [],
    textBlock: [
      { position: { x: 5, y: 0, w: 'w/3-10', h: 'h/5' }, text: '标题 1' },
      { position: { x: 'w/3+5', y: 0, w: 'w/3-10', h: 'h/5' }, text: '标题 2' },
      { position: { x: 'w/3*2+5', y: 0, w: 'w/3-10', h: 'h/5' }, text: '标题 3' },
      { position: { x: 5, y: 'h*0.2', w: 'w/3-10', h: 'h/5' } },
      { position: { x: 'w/3+5', y: 'h*0.2', w: 'w/3-10', h: 'h/5' } },
      { position: { x: 'w/3*2+5', y: 'h*0.2', w: 'w/3-10', h: 'h/5' } },
      { position: { x: 5, y: 'h*0.4', w: 'w/3-10', h: 'h/5' } },
      { position: { x: 'w/3+5', y: 'h*0.4', w: 'w/3-10', h: 'h/5' } },
      { position: { x: 'w/3*2+5', y: 'h*0.4', w: 'w/3-10', h: 'h/5' } },
      { position: { x: 5, y: 'h*0.6', w: 'w/3-10', h: 'h/5' } },
      { position: { x: 'w/3+5', y: 'h*0.6', w: 'w/3-10', h: 'h/5' } },
      { position: { x: 'w/3*2+5', y: 'h*0.6', w: 'w/3-10', h: 'h/5' } },
      { position: { x: 5, y: 'h*0.8', w: 'w/3-10', h: 'h/5' } },
      { position: { x: 'w/3+5', y: 'h*0.8', w: 'w/3-10', h: 'h/5' } },
      { position: { x: 'w/3*2+5', y: 'h*0.8', w: 'w/3-10', h: 'h/5' } },
    ],
    path: [
      { lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } },
      {
        fillStyle: { color: 'r-37,g-37,b-37' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: 0, y: 0 },
          { action: 'line', x: 'w', y: 0 },
          { action: 'line', x: 'w', y: 'h*0.2+0.5' },
          { action: 'line', x: 0, y: 'h*0.2+0.5' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 1 },
        actions: [
          { action: 'move', x: 0, y: 'Math.round(h*0.2)+0.5' },
          { action: 'line', x: 'w', y: 'Math.round(h*0.2)+0.5' },
          { action: 'move', x: 0, y: 'Math.round(h*0.4)+0.5' },
          { action: 'line', x: 'w', y: 'Math.round(h*0.4)+0.5' },
          { action: 'move', x: 0, y: 'Math.round(h*0.6)+0.5' },
          { action: 'line', x: 'w', y: 'Math.round(h*0.6)+0.5' },
          { action: 'move', x: 0, y: 'Math.round(h*0.8)+0.5' },
          { action: 'line', x: 'w', y: 'Math.round(h*0.8)+0.5' },
          { action: 'move', x: 'Math.round(w/3)+0.5', y: 0 },
          { action: 'line', x: 'Math.round(w/3)+0.5', y: 'h' },
          { action: 'move', x: 'Math.round(w/3*2)+0.5', y: 0 },
          { action: 'line', x: 'Math.round(w/3*2)+0.5', y: 'h' },
        ],
      },
      { fillStyle: { type: 'none' }, actions: { ref: 'rectangle' } },
    ],
    drawIcon: function (a, b) {
      var c = -3
      b += 3
      return [
        {
          fillStyle: { type: 'none' },
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'move', x: 0, y: c + 0.5 },
            { action: 'line', x: a - 0.5, y: c + 0.5 },
            { action: 'line', x: a - 0.5, y: b - 0.5 },
            { action: 'line', x: 0.5, y: b - 0.5 },
            { action: 'line', x: 0.5, y: c + 0.5 },
            { action: 'move', x: 0, y: c + Math.round(b / 3) + 0.5 },
            { action: 'line', x: a, y: c + Math.round(b / 3) + 0.5 },
            { action: 'move', x: 0, y: c + Math.round((b / 3) * 2) + 0.5 },
            { action: 'line', x: a, y: c + Math.round((b / 3) * 2) + 0.5 },
            { action: 'move', x: Math.round(a / 3) + 0.5, y: c },
            { action: 'line', x: Math.round(a / 3) + 0.5, y: b },
            { action: 'move', x: Math.round((a / 3) * 2) + 0.5, y: c },
            { action: 'line', x: Math.round((a / 3) * 2) + 0.5, y: b },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiTooltip',
    title: '提示',
    category: 'ui',
    attribute: { linkable: false },
    props: { w: 140, h: 60 },
    lineStyle: { lineWidth: 2, lineColor: '138,138,138' },
    anchors: [],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '8' },
          { action: 'quadraticCurve', x1: '0', y1: '0', x: '8', y: '0' },
          { action: 'line', x: 'w*0.4-14', y: '0' },
          { action: 'line', x: 'w*0.4-7', y: '-8' },
          { action: 'line', x: 'w*0.4', y: '0' },
          { action: 'line', x: 'w-8', y: '0' },
          { action: 'quadraticCurve', x1: 'w', y1: '0', x: 'w', y: '8' },
          { action: 'line', x: 'w', y: 'h-8' },
          { action: 'quadraticCurve', x1: 'w', y1: 'h', x: 'w-8', y: 'h' },
          { action: 'line', x: '8', y: 'h' },
          { action: 'quadraticCurve', x1: '0', y1: 'h', x: '0', y: 'h-8' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'move', x: 0.5, y: 0 },
            { action: 'line', x: a * 0.5 - 5, y: 0 },
            { action: 'line', x: a * 0.5 - 2.5, y: -4 },
            { action: 'line', x: a * 0.5, y: 0 },
            { action: 'line', x: Math.round(a) - 0.5, y: 0 },
            { action: 'line', x: Math.round(a) - 0.5, y: b },
            { action: 'line', x: 0.5, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiImage',
    title: '图片',
    category: 'ui',
    attribute: { linkable: false },
    props: { w: 256, h: 209 },
    anchors: [],
    lineStyle: { lineColor: '138,138,138' },
    textBlock: [],
    path: [
      { actions: { ref: 'rectangle' } },
      {
        fillStyle: { type: 'solid', color: '80,80,80' },
        lineStyle: { lineWidth: 1, lineColor: '80,80,80', lineStyle: 'solid' },
        actions: [
          { action: 'move', x: 'w/1.3 - 10', y: 'h/8 + 10' },
          {
            action: 'curve',
            x1: 'w/1.3+5',
            y1: 'h/8 + 10',
            x2: 'w/1.3+5',
            y2: 'h/8+32',
            x: 'w/1.3-10',
            y: 'h/8+32',
          },
          {
            action: 'curve',
            x1: 'w/1.3-25',
            y1: 'h/8+32',
            x2: 'w/1.3-25',
            y2: 'h/8+10',
            x: 'w/1.3-10',
            y: 'h/8 + 10',
          },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'solid', color: '80,80,80' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: 30, y: 'h-30' },
          { action: 'line', x: 'w/3', y: '40' },
          { action: 'line', x: 'w/2', y: 'h/2' },
          { action: 'line', x: 'w/1.6', y: 'h/2.5' },
          { action: 'line', x: 'w-30', y: 'h-30' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var a = -4
      b += 4
      var d = -10
      c += 8
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/ui/thumb/image.png',
            imageW: 30,
            imageH: 26,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiVideo',
    title: '视频',
    category: 'ui',
    attribute: { linkable: false },
    props: { w: 320, h: 240 },
    anchors: [],
    lineStyle: { lineColor: '138,138,138' },
    textBlock: [],
    path: [
      { actions: { ref: 'rectangle' } },
      {
        fillStyle: { type: 'solid', color: '80,80,80' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: 'w-10', y: 'h-20' },
          { action: 'line', x: 'w-10', y: 'h-5' },
          { action: 'line', x: 'w-15', y: 'h-9' },
          { action: 'line', x: 'w-23', y: 'h-9' },
          { action: 'line', x: 'w-23', y: 'h-16' },
          { action: 'line', x: 'w-15', y: 'h-16' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'solid', color: '80,80,80' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: 10, y: 'h-20' },
          { action: 'line', x: 22, y: 'h-12.5' },
          { action: 'line', x: 10, y: 'h-5' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 5, lineColor: '80,80,80' },
        actions: [
          { action: 'move', x: '30', y: 'h-12.5' },
          { action: 'line', x: 'w-35', y: 'h-12.5' },
        ],
      },
      {
        fillStyle: { type: 'solid', color: '255,255,255' },
        lineStyle: { lineWidth: 1, lineColor: '80,80,80', lineStyle: 'solid' },
        actions: [
          { action: 'move', x: 'w/2-12', y: 'h-12.5' },
          {
            action: 'curve',
            x1: 'w/2-12',
            y1: 'h-20.2',
            x2: 'w/2',
            y2: 'h-20.2',
            x: 'w/2',
            y: 'h-12.5',
          },
          {
            action: 'curve',
            x1: 'w/2',
            y1: 'h-4.8',
            x2: 'w/2-12',
            y2: 'h-4.8',
            x: 'w/2-12',
            y: 'h-12.5',
          },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 0, y: 'h-25' },
          { action: 'line', x: 'w', y: 'h-25' },
        ],
      },
      {
        fillStyle: { type: 'solid', color: '80,80,80' },
        lineStyle: { lineWidth: 4, lineColor: '80,80,80' },
        actions: [
          { action: 'move', x: 'w/2-18', y: '(h-25)/2-20' },
          { action: 'line', x: 'w/2+18', y: '(h-25)/2' },
          { action: 'line', x: 'w/2-18', y: '(h-25)/2+20' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var a = -4
      b += 4
      var d = -10
      c += 8
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/ui/thumb/video.png',
            imageW: 30,
            imageH: 26,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiVScroll',
    title: '垂直滚动条',
    category: 'ui',
    attribute: { linkable: false },
    props: { w: 20, h: 160 },
    lineStyle: { lineWidth: 1, lineColor: '184,184,184' },
    anchors: [],
    textBlock: [],
    resizeDir: ['t', 'b'],
    path: [
      { lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'solid', color: '229,229,229' },
        actions: [
          { action: 'move', x: 0, y: 0 },
          { action: 'line', x: 'w', y: 0 },
          { action: 'line', x: 'w', y: 'w' },
          { action: 'line', x: 0, y: 'w' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 1 },
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 0, y: 'w-0.5' },
          { action: 'line', x: 'w', y: 'w-0.5' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'solid', color: '170,170,170' },
        actions: [
          { action: 'move', x: 'w*0.5', y: 'w*0.35' },
          { action: 'line', x: 'w*0.8', y: 'w*0.65' },
          { action: 'line', x: 'w*0.2', y: 'w*0.65' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'solid', color: '229,229,229' },
        actions: [
          { action: 'move', x: 0, y: 'h-w' },
          { action: 'line', x: 'w', y: 'h-w' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: 0, y: 'h' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 1 },
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 0, y: 'h-w+0.5' },
          { action: 'line', x: 'w', y: 'h-w+0.5' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'solid', color: '170,170,170' },
        actions: [
          { action: 'move', x: 'w*0.5', y: 'h-w*0.35' },
          { action: 'line', x: 'w*0.8', y: 'h-w*0.65' },
          { action: 'line', x: 'w*0.2', y: 'h-w*0.65' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'solid', color: '229,229,229' },
        actions: [
          { action: 'move', x: 0, y: 'h*0.25' },
          { action: 'line', x: 'w', y: 'h*0.25' },
          { action: 'line', x: 'w', y: 'h*0.55' },
          { action: 'line', x: 0, y: 'h*0.55' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 1 },
        actions: [
          { action: 'move', x: 0.5, y: 0.5 },
          { action: 'line', x: 'w-0.5', y: 0.5 },
          { action: 'line', x: 'w-0.5', y: 'h-0.5' },
          { action: 'line', x: 0.5, y: 'h-0.5' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (b, c) {
      var a = -4
      b += 4
      var d = -10
      c += 8
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/ui/thumb/scrollbar_v.png',
            imageW: 10,
            imageH: 30,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiHScroll',
    title: '水平滚动条',
    category: 'ui',
    attribute: { linkable: false },
    props: { w: 160, h: 20 },
    lineStyle: { lineWidth: 1, lineColor: '184,184,184' },
    anchors: [],
    textBlock: [],
    resizeDir: ['l', 'r'],
    path: [
      { lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'solid', color: '229,229,229' },
        actions: [
          { action: 'move', x: 0, y: 0 },
          { action: 'line', x: 'h', y: 0 },
          { action: 'line', x: 'h', y: 'h' },
          { action: 'line', x: 0, y: 'h' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 1 },
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'h-0.5', y: 0 },
          { action: 'line', x: 'h-0.5', y: 'h' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'solid', color: '170,170,170' },
        actions: [
          { action: 'move', x: 'h*0.35', y: 'h*0.5' },
          { action: 'line', x: 'h*0.65', y: 'h*0.8' },
          { action: 'line', x: 'h*0.65', y: 'h*0.2' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'solid', color: '229,229,229' },
        actions: [
          { action: 'move', x: 'w-h', y: 0 },
          { action: 'line', x: 'w', y: 0 },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'line', x: 'w-h', y: 'h' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 1 },
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'w-h+0.5', y: 0 },
          { action: 'line', x: 'w-h+0.5', y: 'h' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'solid', color: '170,170,170' },
        actions: [
          { action: 'move', x: 'w-h*0.35', y: 'h*0.5' },
          { action: 'line', x: 'w-h*0.65', y: 'h*0.8' },
          { action: 'line', x: 'w-h*0.65', y: 'h*0.2' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'solid', color: '229,229,229' },
        actions: [
          { action: 'move', x: 'w*0.25', y: 0 },
          { action: 'line', x: 'w*0.25', y: 'h' },
          { action: 'line', x: 'w*0.55', y: 'h' },
          { action: 'line', x: 'w*0.55', y: 0 },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 1 },
        actions: [
          { action: 'move', x: 0.5, y: 0.5 },
          { action: 'line', x: 'w-0.5', y: 0.5 },
          { action: 'line', x: 'w-0.5', y: 'h-0.5' },
          { action: 'line', x: 0.5, y: 'h-0.5' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (b, c) {
      var a = -4
      b += 4
      var d = -10
      c += 8
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/ui/thumb/scrollbar_h.png',
            imageW: 30,
            imageH: 10,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiVLine',
    title: '垂直线',
    category: 'ui',
    attribute: { linkable: false },
    props: { w: 21, h: 240 },
    lineStyle: { lineWidth: 1, lineColor: '136,136,136' },
    anchors: [],
    resizeDir: ['t', 'b'],
    textBlock: [],
    path: [
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'lineWidth%2==0 ? Math.round(w/2) : w/2', y: 0 },
          { action: 'line', x: 'lineWidth%2==0 ? Math.round(w/2) : w/2', y: 'h' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'uiHLine',
    title: '水平线',
    category: 'ui',
    attribute: { linkable: false },
    props: { w: 240, h: 21 },
    lineStyle: { lineWidth: 1, lineColor: '136,136,136' },
    anchors: [],
    resizeDir: ['l', 'r'],
    textBlock: [],
    path: [
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 0, y: 'lineWidth%2==0 ? Math.round(h/2) : h/2' },
          { action: 'line', x: 'w', y: 'lineWidth%2==0 ? Math.round(h/2) : h/2' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'uiLineChart',
    title: '折线图',
    category: 'ui',
    attribute: { linkable: false },
    props: { w: 240, h: 160 },
    lineStyle: { lineWidth: 2, lineColor: '136,136,136' },
    anchors: [],
    fontStyle: { size: 14 },
    textBlock: [
      { position: { x: 10, y: -25, h: 25, w: 'w-20' }, text: '折线图' },
    ],
    path: [
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 0, y: 0 },
          { action: 'line', x: 0, y: 'h' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'move', x: 0, y: 'h' },
          { action: 'line', x: 'w*0.2', y: 'h*0.625' },
          { action: 'line', x: 'w*0.4', y: 'h*0.7' },
          { action: 'line', x: 'w*0.6', y: 'h*0.4' },
          { action: 'line', x: 'w*0.8', y: 'h*0.5' },
          { action: 'line', x: 'w', y: 'h*0.1' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineColor: '50,50,50' },
        actions: [
          { action: 'move', x: 0, y: 'h' },
          { action: 'line', x: 'w*0.2', y: 'h*0.4' },
          { action: 'line', x: 'w*0.4', y: 'h*0.57' },
          { action: 'line', x: 'w*0.6', y: 'h*0.5' },
          { action: 'line', x: 'w*0.8', y: 'h*0.6' },
          { action: 'line', x: 'w', y: 'h*0.52' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: { type: 'none' },
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'move', x: -0.5, y: 0 },
            { action: 'line', x: -0.5, y: b },
            { action: 'line', x: a, y: b },
            { action: 'move', x: 0, y: b },
            { action: 'line', x: a * 0.2, y: b * 0.625 },
            { action: 'line', x: a * 0.4, y: b * 0.7 },
            { action: 'line', x: a * 0.6, y: b * 0.4 },
            { action: 'line', x: a * 0.8, y: b * 0.5 },
            { action: 'line', x: a, y: b * 0.1 },
          ],
        },
        {
          fillStyle: { type: 'none' },
          lineStyle: { lineColor: '50,50,50', lineWidth: 1 },
          actions: [
            { action: 'move', x: 0, y: b },
            { action: 'line', x: a * 0.2, y: b * 0.4 },
            { action: 'line', x: a * 0.4, y: b * 0.57 },
            { action: 'line', x: a * 0.6, y: b * 0.5 },
            { action: 'line', x: a * 0.8, y: b * 0.6 },
            { action: 'line', x: a, y: b * 0.52 },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiPieChart',
    title: '饼图',
    category: 'ui',
    attribute: { linkable: false },
    props: { w: 160, h: 160 },
    lineStyle: { lineWidth: 2, lineColor: '136,136,136' },
    anchors: [],
    fontStyle: { size: 14 },
    textBlock: [{ position: { x: 10, y: -35, h: 25, w: 'w-20' }, text: '饼图' }],
    path: [
      { actions: { ref: 'round' } },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'w/2', y: 0 },
          { action: 'line', x: 'w/2', y: 'h/2' },
          { action: 'line', x: 'w*0.98', y: 'h*0.65' },
          { action: 'move', x: 'w/2', y: 'h/2' },
          { action: 'line', x: 'w*0.98', y: 'h*0.35' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'round' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'move', x: 0, y: b / 2 },
            {
              action: 'curve',
              x1: 0,
              y1: -b / 6,
              x2: a,
              y2: -b / 6,
              x: a,
              y: b / 2,
            },
            {
              action: 'curve',
              x1: a,
              y1: b + b / 6,
              x2: 0,
              y2: b + b / 6,
              x: 0,
              y: b / 2,
            },
            { action: 'close' },
          ],
        },
        {
          fillStyle: { type: 'none' },
          lineStyle: { lineWidth: 1 },
          actions: [
            { action: 'move', x: a / 2, y: 0 },
            { action: 'line', x: a / 2, y: b / 2 },
            { action: 'line', x: a * 0.98, y: b * 0.65 },
            { action: 'move', x: a / 2, y: b / 2 },
            { action: 'line', x: a * 0.98, y: b * 0.35 },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiColumnChart',
    title: '柱状图',
    category: 'ui',
    attribute: { linkable: false },
    props: { w: 250, h: 175 },
    lineStyle: { lineWidth: 2, lineColor: '136,136,136' },
    anchors: [],
    fontStyle: { size: 14 },
    textBlock: [
      { position: { x: 10, y: -25, h: 25, w: 'w-20' }, text: '柱状图' },
    ],
    path: [
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 0, y: 0 },
          { action: 'line', x: 0, y: 'h' },
          { action: 'line', x: 'w', y: 'h' },
        ],
      },
      {
        actions: [
          { action: 'move', x: 'w*0.1', y: 'h*0.4' },
          { action: 'line', x: 'w*0.2', y: 'h*0.4' },
          { action: 'line', x: 'w*0.2', y: 'h' },
          { action: 'line', x: 'w*0.1', y: 'h' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { color: 'r-40,g-40,b-40' },
        actions: [
          { action: 'move', x: 'w*0.2', y: 'h*0.2' },
          { action: 'line', x: 'w*0.3', y: 'h*0.2' },
          { action: 'line', x: 'w*0.3', y: 'h' },
          { action: 'line', x: 'w*0.2', y: 'h' },
          { action: 'close' },
        ],
      },
      {
        actions: [
          { action: 'move', x: 'w*0.4', y: 'h*0.32' },
          { action: 'line', x: 'w*0.5', y: 'h*0.32' },
          { action: 'line', x: 'w*0.5', y: 'h' },
          { action: 'line', x: 'w*0.4', y: 'h' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { color: 'r-40,g-40,b-40' },
        actions: [
          { action: 'move', x: 'w*0.5', y: 'h*0.12' },
          { action: 'line', x: 'w*0.6', y: 'h*0.12' },
          { action: 'line', x: 'w*0.6', y: 'h' },
          { action: 'line', x: 'w*0.5', y: 'h' },
          { action: 'close' },
        ],
      },
      {
        actions: [
          { action: 'move', x: 'w*0.7', y: 'h*0.48' },
          { action: 'line', x: 'w*0.8', y: 'h*0.48' },
          { action: 'line', x: 'w*0.8', y: 'h' },
          { action: 'line', x: 'w*0.7', y: 'h' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { color: 'r-40,g-40,b-40' },
        actions: [
          { action: 'move', x: 'w*0.8', y: 'h*0.52' },
          { action: 'line', x: 'w*0.9', y: 'h*0.52' },
          { action: 'line', x: 'w*0.9', y: 'h' },
          { action: 'line', x: 'w*0.8', y: 'h' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          lineStyle: { lineWidth: 1 },
          fillStyle: { type: 'none' },
          actions: [
            { action: 'move', x: 0.5, y: 0 },
            { action: 'line', x: 0.5, y: b + 0.5 },
            { action: 'line', x: a, y: b + 0.5 },
            { action: 'move', x: Math.round(a * 0.2) - 0.5, y: b },
            { action: 'line', x: Math.round(a * 0.2) - 0.5, y: 3.5 },
            { action: 'line', x: a * 0.3, y: 3.5 },
            { action: 'move', x: Math.round(a * 0.3) + 0.5, y: b },
            { action: 'line', x: Math.round(a * 0.3) + 0.5, y: 1.5 },
            { action: 'line', x: Math.round(a * 0.45) + 0.5, y: 1.5 },
            { action: 'line', x: Math.round(a * 0.45) + 0.5, y: b },
            { action: 'move', x: Math.round(a * 0.6) + 0.5, y: b },
            { action: 'line', x: Math.round(a * 0.6) + 0.5, y: 7.5 },
            { action: 'line', x: Math.round(a * 0.75) + 0.5, y: 7.5 },
            { action: 'move', x: Math.round(a * 0.75) + 0.5, y: b },
            { action: 'line', x: Math.round(a * 0.75) + 0.5, y: 4.5 },
            { action: 'line', x: Math.round(a * 0.95) - 0.5, y: 4.5 },
            { action: 'line', x: Math.round(a * 0.95) - 0.5, y: b },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiBarChart',
    title: '条形图',
    category: 'ui',
    attribute: { linkable: false },
    props: { w: 250, h: 175 },
    lineStyle: { lineWidth: 2, lineColor: '136,136,136' },
    anchors: [],
    fontStyle: { size: 14 },
    textBlock: [
      { position: { x: 10, y: -25, h: 25, w: 'w-20' }, text: '条形图' },
    ],
    path: [
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 0, y: 0 },
          { action: 'line', x: 0, y: 'h' },
          { action: 'line', x: 'w', y: 'h' },
        ],
      },
      {
        actions: [
          { action: 'move', x: 0, y: 'h/7' },
          { action: 'line', x: 'w*0.7', y: 'h/7' },
          { action: 'line', x: 'w*0.7', y: 'h/7*2' },
          { action: 'line', x: 0, y: 'h/7*2' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { color: 'r-40,g-40,b-40' },
        actions: [
          { action: 'move', x: 0, y: 'h/7*2' },
          { action: 'line', x: 'w*0.5', y: 'h/7*2' },
          { action: 'line', x: 'w*0.5', y: 'h/7*3' },
          { action: 'line', x: 0, y: 'h/7*3' },
          { action: 'close' },
        ],
      },
      {
        actions: [
          { action: 'move', x: 0, y: 'h/7*4' },
          { action: 'line', x: 'w*0.9', y: 'h/7*4' },
          { action: 'line', x: 'w*0.9', y: 'h/7*5' },
          { action: 'line', x: 0, y: 'h/7*5' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { color: 'r-40,g-40,b-40' },
        actions: [
          { action: 'move', x: 0, y: 'h/7*5' },
          { action: 'line', x: 'w*0.6', y: 'h/7*5' },
          { action: 'line', x: 'w*0.6', y: 'h/7*6' },
          { action: 'line', x: 0, y: 'h/7*6' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          lineStyle: { lineWidth: 1 },
          fillStyle: { type: 'none' },
          actions: [
            { action: 'move', x: 0.5, y: 0 },
            { action: 'line', x: 0.5, y: b + 0.5 },
            { action: 'line', x: a, y: b + 0.5 },
            { action: 'move', x: 0, y: Math.round(b * 0.1) - 0.5 },
            { action: 'line', x: 12.5, y: Math.round(b * 0.1) - 0.5 },
            { action: 'line', x: 12.5, y: Math.round(b * 0.3) - 0.5 },
            { action: 'move', x: 0, y: Math.round(b * 0.3) - 0.5 },
            { action: 'line', x: 20.5, y: Math.round(b * 0.3) - 0.5 },
            { action: 'line', x: 20.5, y: Math.round(b * 0.4) + 0.5 },
            { action: 'line', x: 0, y: Math.round(b * 0.4) + 0.5 },
            { action: 'move', x: 0, y: Math.round(b * 0.6) - 0.5 },
            { action: 'line', x: 16.5, y: Math.round(b * 0.6) - 0.5 },
            { action: 'line', x: 16.5, y: Math.round(b * 0.7) + 0.5 },
            { action: 'move', x: 0, y: Math.round(b * 0.7) + 0.5 },
            { action: 'line', x: 23.5, y: Math.round(b * 0.7) + 0.5 },
            { action: 'line', x: 23.5, y: Math.round(b * 0.9) + 0.5 },
            { action: 'line', x: 0, y: Math.round(b * 0.9) + 0.5 },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'ui_input',
    text: 'UI 输入控件',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'uiButton',
    title: '按钮',
    category: 'ui_input',
    attribute: { linkable: false },
    props: { w: 120, h: 30 },
    anchors: [],
    fillStyle: {
      type: 'gradient',
      gradientType: 'linear',
      beginColor: '233,233,233',
      endColor: '200,200,200',
      angle: 0,
    },
    lineStyle: { lineWidth: 0 },
    fontStyle: { size: 14 },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' }, text: '按钮' }],
    path: [{ actions: { ref: 'roundRectangle' } }],
    drawIcon: function (a, b) {
      var c = -2.5
      b += 2.5
      return [
        {
          fillStyle: { type: 'solid', color: '200,200,200' },
          actions: [
            { action: 'move', x: 0, y: c + 3 },
            { action: 'quadraticCurve', x1: 0, y1: c, x: 3, y: c },
            { action: 'line', x: a - 3, y: c },
            { action: 'quadraticCurve', x1: a, y1: c, x: a, y: c + 3 },
            { action: 'line', x: a, y: b - 3 },
            { action: 'quadraticCurve', x1: a, y1: b, x: a - 3, y: b },
            { action: 'line', x: 3, y: b },
            { action: 'quadraticCurve', x1: 0, y1: b, x: 0, y: b - 3 },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiInput',
    title: '输入框',
    category: 'ui_input',
    attribute: { linkable: false },
    props: { w: 160, h: 25 },
    anchors: [],
    lineStyle: { lineWidth: 1, lineColor: '138,138,138' },
    fontStyle: { size: 14, textAlign: 'left' },
    path: [
      {
        actions: [
          { action: 'move', x: 0.5, y: 0.5 },
          { action: 'line', x: 'Math.round(w)-0.5', y: 0.5 },
          { action: 'line', x: 'Math.round(w)-0.5', y: 'Math.round(h)-0.5' },
          { action: 'line', x: 0.5, y: 'Math.round(h)-0.5' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      var c = -2.5
      b += 2.5
      return [
        {
          actions: [
            { action: 'move', x: 0.5, y: c },
            { action: 'line', x: Math.round(a) - 0.5, y: c },
            { action: 'line', x: Math.round(a) - 0.5, y: b },
            { action: 'line', x: 0.5, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiSelect',
    title: '下拉选择框',
    category: 'ui_input',
    attribute: { linkable: false },
    props: { w: 160, h: 25 },
    anchors: [],
    lineStyle: { lineWidth: 1, lineColor: '138,138,138' },
    fontStyle: { size: 14, textAlign: 'left' },
    path: [
      {
        actions: [
          { action: 'move', x: 0.5, y: 0.5 },
          { action: 'line', x: 'Math.round(w)-0.5', y: 0.5 },
          { action: 'line', x: 'Math.round(w)-0.5', y: 'Math.round(h)-0.5' },
          { action: 'line', x: 0.5, y: 'Math.round(h)-0.5' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'solid', color: '200,200,200' },
        actions: [
          { action: 'move', x: 'w-h', y: 1 },
          { action: 'line', x: 'w-1', y: 1 },
          { action: 'line', x: 'w-1', y: 'h-1' },
          { action: 'line', x: 'w-h', y: 'h-1' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'Math.round(w-h)-0.5', y: 1 },
          { action: 'line', x: 'Math.round(w-h)-0.5', y: 'h' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'solid', color: '80,80,80' },
        actions: [
          { action: 'move', x: 'w-h*0.5', y: 'h*0.6' },
          { action: 'line', x: 'w-h*0.7', y: 'h*0.4' },
          { action: 'line', x: 'w-h*0.3', y: 'h*0.4' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var a = -4
      b += 4
      var d = -10
      c += 8
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/ui_input/thumb/select.png',
            imageW: 28,
            imageH: 10,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiSearch',
    title: '搜索框',
    category: 'ui_input',
    attribute: { linkable: false },
    props: { w: 160, h: 25 },
    anchors: [],
    lineStyle: { lineWidth: 1, lineColor: '138,138,138' },
    fontStyle: { size: 14, textAlign: 'left' },
    textBlock: [{ position: { x: 25, y: 0, w: 'w-35', h: 'h' }, text: '' }],
    path: [
      {
        actions: [
          { action: 'move', x: 0.5, y: 0.5 },
          { action: 'line', x: 'Math.round(w)-0.5', y: 0.5 },
          { action: 'line', x: 'Math.round(w)-0.5', y: 'Math.round(h)-0.5' },
          { action: 'line', x: 0.5, y: 'Math.round(h)-0.5' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/ui_input/search.png',
          imageX: '4',
          imageY: 'h/2-9',
          imageW: 16,
          imageH: 16,
          display: 'static',
        },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var a = -4
      b += 4
      var d = -10
      c += 8
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/ui_input/thumb/search.png',
            imageW: 28,
            imageH: 10,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiCheckbox',
    title: '复选框',
    category: 'ui_input',
    attribute: { linkable: false },
    props: { w: 120, h: 20 },
    lineStyle: { lineWidth: 2, lineColor: '92,92,92', lineStyle: 'solid' },
    fontStyle: { textAlign: 'left', size: 14 },
    anchors: [],
    resizeDir: ['l', 'r'],
    textBlock: [
      { position: { x: '20', y: '0', w: 'w-20', h: 'h' }, text: '选项' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: 0, y: 3 },
          { action: 'line', x: 'h-6', y: 3 },
          { action: 'line', x: 'h-6', y: 'h-3' },
          { action: 'line', x: 0, y: 'h-3' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          actions: [
            { action: 'move', x: a / 2 - 5, y: b / 2 - 5 },
            { action: 'line', x: a / 2 + 5, y: b / 2 - 5 },
            { action: 'line', x: a / 2 + 5, y: b / 2 + 5 },
            { action: 'line', x: a / 2 - 5, y: b / 2 + 5 },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiCheckedbox',
    title: '复选框（选中）',
    category: 'ui_input',
    attribute: { linkable: false },
    props: { w: 120, h: 20 },
    lineStyle: { lineWidth: 2, lineColor: '92,92,92', lineStyle: 'solid' },
    fontStyle: { textAlign: 'left', size: 14 },
    anchors: [],
    resizeDir: ['l', 'r'],
    textBlock: [
      { position: { x: '20', y: '0', w: 'w-20', h: 'h' }, text: '选项' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: 0, y: 3 },
          { action: 'line', x: 'h-6', y: 3 },
          { action: 'line', x: 'h-6', y: 'h-3' },
          { action: 'line', x: 0, y: 'h-3' },
          { action: 'close' },
        ],
      },
      {
        actions: [
          { action: 'move', x: 3, y: 'h/2' },
          { action: 'line', x: 6, y: 'h*0.7' },
          { action: 'line', x: 10, y: 'h*0.3' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          actions: [
            { action: 'move', x: a / 2 - 5, y: b / 2 - 5 },
            { action: 'line', x: a / 2 + 5, y: b / 2 - 5 },
            { action: 'line', x: a / 2 + 5, y: b / 2 + 5 },
            { action: 'line', x: a / 2 - 5, y: b / 2 + 5 },
            { action: 'close' },
          ],
        },
        {
          actions: [
            { action: 'move', x: a / 2 - 3, y: b / 2 },
            { action: 'line', x: a / 2, y: b / 2 + 2 },
            { action: 'line', x: a / 2 + 3, y: b / 2 - 2.5 },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiRadio',
    title: '单选框',
    category: 'ui_input',
    attribute: { linkable: false },
    props: { w: 120, h: 20 },
    lineStyle: { lineWidth: 2, lineColor: '92,92,92', lineStyle: 'solid' },
    fontStyle: { textAlign: 'left', size: 14 },
    anchors: [],
    resizeDir: ['l', 'r'],
    textBlock: [
      { position: { x: '20', y: '0', w: 'w-20', h: 'h' }, text: '选项' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h/2' },
          {
            action: 'curve',
            x1: '0',
            y1: '0.4',
            x2: 'h-6',
            y2: '0.4',
            x: 'h-6',
            y: 'h/2',
          },
          {
            action: 'curve',
            x1: 'h-6',
            y1: 'h-0.4',
            x2: '0',
            y2: 'h-0.4',
            x: '0',
            y: 'h/2',
          },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          actions: [
            { action: 'move', x: a / 2 - 5, y: b / 2 },
            {
              action: 'curve',
              x1: a / 2 - 5,
              y1: b / 2 - 6.8,
              x2: a / 2 + 5,
              y2: b / 2 - 6.8,
              x: a / 2 + 5,
              y: b / 2,
            },
            {
              action: 'curve',
              x1: a / 2 + 5,
              y1: b / 2 + 6.8,
              x2: a / 2 - 5,
              y2: b / 2 + 6.8,
              x: a / 2 - 5,
              y: b / 2,
            },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiRadioChecked',
    title: '单选框（选中）',
    category: 'ui_input',
    attribute: { linkable: false },
    props: { w: 120, h: 20 },
    lineStyle: { lineWidth: 2, lineColor: '92,92,92', lineStyle: 'solid' },
    fontStyle: { textAlign: 'left', size: 14 },
    anchors: [],
    resizeDir: ['l', 'r'],
    textBlock: [
      { position: { x: '20', y: '0', w: 'w-20', h: 'h' }, text: '选项' },
    ],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h/2' },
          {
            action: 'curve',
            x1: '0',
            y1: '0.4',
            x2: 'h-6',
            y2: '0.4',
            x: 'h-6',
            y: 'h/2',
          },
          {
            action: 'curve',
            x1: 'h-6',
            y1: 'h-0.4',
            x2: '0',
            y2: 'h-0.4',
            x: '0',
            y: 'h/2',
          },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'solid', color: '92,92,92' },
        actions: [
          { action: 'move', x: '3', y: 'h/2' },
          {
            action: 'curve',
            x1: '3',
            y1: '4.5',
            x2: 'h-9',
            y2: '4.5',
            x: 'h-9',
            y: 'h/2',
          },
          {
            action: 'curve',
            x1: 'h-9',
            y1: 'h-4.5',
            x2: '3',
            y2: 'h-4.5',
            x: '3',
            y: 'h/2',
          },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          actions: [
            { action: 'move', x: a / 2 - 5, y: b / 2 },
            {
              action: 'curve',
              x1: a / 2 - 5,
              y1: b / 2 - 6.8,
              x2: a / 2 + 5,
              y2: b / 2 - 6.8,
              x: a / 2 + 5,
              y: b / 2,
            },
            {
              action: 'curve',
              x1: a / 2 + 5,
              y1: b / 2 + 6.8,
              x2: a / 2 - 5,
              y2: b / 2 + 6.8,
              x: a / 2 - 5,
              y: b / 2,
            },
            { action: 'close' },
          ],
        },
        {
          lineStyle: { lineWidth: 0 },
          fillStyle: { type: 'solid', color: '92,92,92' },
          actions: [
            { action: 'move', x: a / 2 - 3, y: b / 2 },
            {
              action: 'curve',
              x1: a / 2 - 3,
              y1: b / 2 - 4.2,
              x2: a / 2 + 3,
              y2: b / 2 - 4.2,
              x: a / 2 + 3,
              y: b / 2,
            },
            {
              action: 'curve',
              x1: a / 2 + 3,
              y1: b / 2 + 4.2,
              x2: a / 2 - 3,
              y2: b / 2 + 4.2,
              x: a / 2 - 3,
              y: b / 2,
            },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiStepper',
    title: 'Stepper 数字输入',
    category: 'ui_input',
    attribute: { linkable: false },
    props: { w: 60, h: 25 },
    lineStyle: { lineWidth: 1, lineColor: '138,138,138' },
    fontStyle: { size: 14, textAlign: 'left' },
    textBlock: [{ position: { x: '5', y: '0', w: 'w-21', h: 'h' }, text: '0' }],
    anchors: [],
    path: [
      {
        actions: [
          { action: 'move', x: 0.5, y: 0.5 },
          { action: 'line', x: 'Math.round(w)-0.5', y: 0.5 },
          { action: 'line', x: 'Math.round(w)-0.5', y: 'Math.round(h)-0.5' },
          { action: 'line', x: 0.5, y: 'Math.round(h)-0.5' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'solid', color: '80,80,80' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: 'w-8', y: 'h*0.25-2' },
          { action: 'line', x: 'w-12', y: 'h*0.25+3' },
          { action: 'line', x: 'w-4', y: 'h*0.25+3' },
          { action: 'close' },
        ],
      },
      {
        actions: [
          { action: 'move', x: 'Math.round(w-16)+0.5', y: '0' },
          { action: 'line', x: 'Math.round(w-16)+0.5', y: 'h' },
          { action: 'move', x: 'w-16', y: 'Math.round(h/2)-0.5' },
          { action: 'line', x: 'w', y: 'Math.round(h/2)-0.5' },
        ],
      },
      {
        fillStyle: { type: 'solid', color: '80,80,80' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: 'w-8', y: 'h*0.75+2' },
          { action: 'line', x: 'w-12', y: 'h*0.75-3' },
          { action: 'line', x: 'w-4', y: 'h*0.75-3' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var a = -4
      b += 4
      var d = -10
      c += 8
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/ui_input/thumb/stepper.png',
            imageW: 30,
            imageH: 16,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiTextarea',
    title: '文本域',
    category: 'ui_input',
    attribute: { linkable: false },
    props: { w: 180, h: 70 },
    anchors: [],
    lineStyle: { lineWidth: 1, lineColor: '138,138,138' },
    fontStyle: { size: 14, textAlign: 'left', vAlign: 'top' },
    textBlock: [{ position: { x: 10, y: 5, w: 'w-20', h: 'h-10' } }],
    path: [
      {
        actions: [
          { action: 'move', x: 0.5, y: 0.5 },
          { action: 'line', x: 'Math.round(w)-0.5', y: 0.5 },
          { action: 'line', x: 'Math.round(w)-0.5', y: 'Math.round(h)-0.5' },
          { action: 'line', x: 0.5, y: 'Math.round(h)-0.5' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      var c = -2.5
      b += 2.5
      return [
        {
          actions: [
            { action: 'move', x: 0.5, y: c },
            { action: 'line', x: Math.round(a) - 0.5, y: c },
            { action: 'line', x: Math.round(a) - 0.5, y: b },
            { action: 'line', x: 0.5, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiMultiselect',
    title: '多选列表',
    category: 'ui_input',
    attribute: { linkable: false },
    props: { w: 160, h: 70 },
    anchors: [],
    lineStyle: { lineWidth: 1, lineColor: '138,138,138' },
    fontStyle: { size: 14, textAlign: 'left', vAlign: 'top' },
    textBlock: [{ position: { x: 10, y: 5, w: 'w-20', h: 'h-10' } }],
    path: [
      {
        actions: [
          { action: 'move', x: 0.5, y: 0.5 },
          { action: 'line', x: 'Math.round(w)-0.5', y: 0.5 },
          { action: 'line', x: 'Math.round(w)-0.5', y: 'Math.round(h)-0.5' },
          { action: 'line', x: 0.5, y: 'Math.round(h)-0.5' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'solid', color: '229,229,229' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: 'w-8', y: 1 },
          { action: 'line', x: 'Math.round(w)-1', y: 1 },
          { action: 'line', x: 'Math.round(w)-1', y: 'h-1' },
          { action: 'line', x: 'w-8', y: 'h-1' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 1, lineColor: '200,200,200' },
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'Math.round(w-8)-0.5', y: 1 },
          { action: 'line', x: 'Math.round(w-8)-0.5', y: 'h-1' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      var c = -1.5
      b += 1.5
      return [
        {
          actions: [
            { action: 'move', x: 0.5, y: c },
            { action: 'line', x: Math.round(a) - 0.5, y: c },
            { action: 'line', x: Math.round(a) - 0.5, y: b },
            { action: 'line', x: 0.5, y: b },
            { action: 'close' },
          ],
        },
        {
          fillStyle: { type: 'solid', color: '212,212,212' },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a - 6, y: c + 0.5 },
            { action: 'line', x: Math.round(a) - 1, y: c + 0.5 },
            { action: 'line', x: Math.round(a) - 1, y: b - 0.5 },
            { action: 'line', x: a - 6, y: b - 0.5 },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiDatepicker',
    title: '日期选择框',
    category: 'ui_input',
    attribute: { linkable: false },
    props: { w: 160, h: 25 },
    anchors: [],
    lineStyle: { lineWidth: 1, lineColor: '138,138,138' },
    fontStyle: { size: 14, textAlign: 'left' },
    fontStyle: { size: 14, textAlign: 'left' },
    textBlock: [{ position: { x: 10, y: 0, w: 'w-35', h: 'h' } }],
    path: [
      {
        actions: [
          { action: 'move', x: 0.5, y: 0.5 },
          { action: 'line', x: 'Math.round(w)-0.5', y: 0.5 },
          { action: 'line', x: 'Math.round(w)-0.5', y: 'Math.round(h)-0.5' },
          { action: 'line', x: 0.5, y: 'Math.round(h)-0.5' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'Math.round(w-h)-0.5', y: 1 },
          { action: 'line', x: 'Math.round(w-h)-0.5', y: 'h' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/ui_input/calendar.png',
          imageX: 'w-21',
          imageY: 'h/2-8',
          imageW: 16,
          imageH: 16,
          display: 'static',
        },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var a = -4
      b += 4
      var d = -10
      c += 8
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/ui_input/thumb/calendar.png',
            imageW: 30,
            imageH: 16,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiSlider',
    title: 'Slider 范围选择',
    category: 'ui_input',
    attribute: { linkable: false },
    props: { w: 160, h: 20 },
    anchors: [],
    textBlock: [],
    resizeDir: ['l', 'r'],
    path: [
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 4, lineColor: '203,203,203' },
        actions: [
          { action: 'move', x: 0, y: 'h/2' },
          { action: 'line', x: 'w', y: 'h/2' },
        ],
      },
      {
        fillStyle: { type: 'solid', color: '255,255,255' },
        lineStyle: { lineWidth: 2, lineColor: '203,203,203' },
        actions: [
          { action: 'move', x: 'w*0.4', y: 'h/2' },
          {
            action: 'curve',
            x1: 'w*0.4',
            y1: 'h/2-8',
            x2: 'w*0.4+12',
            y2: 'h/2-8',
            x: 'w*0.4+12',
            y: 'h/2',
          },
          {
            action: 'curve',
            x1: 'w*0.4+12',
            y1: 'h/2+8',
            x2: 'w*0.4',
            y2: 'h/2+8',
            x: 'w*0.4',
            y: 'h/2',
          },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = -2
      b += 2
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/ui_input/thumb/slider.png',
            imageW: 30,
            imageH: 15,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'uiTextEditor',
    title: '文本编辑器',
    category: 'ui_input',
    attribute: { linkable: false },
    props: { w: 300, h: 180 },
    anchors: [],
    lineStyle: { lineWidth: 1, lineColor: '138,138,138' },
    fontStyle: { size: 14, textAlign: 'left', vAlign: 'top' },
    textBlock: [{ position: { x: 10, y: 30, w: 'w-20', h: 'h-35' } }],
    path: [
      {
        actions: [
          { action: 'move', x: 0.5, y: 0.5 },
          { action: 'line', x: 'Math.round(w)-0.5', y: 0.5 },
          { action: 'line', x: 'Math.round(w)-0.5', y: 'Math.round(h)-0.5' },
          { action: 'line', x: 0.5, y: 'Math.round(h)-0.5' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: '0.5', y: 25.5 },
          { action: 'line', x: 'w', y: 25.5 },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: 1, y: 1 },
          { action: 'line', x: 'w-1', y: 1 },
          { action: 'line', x: 'w-1', y: 'h-1' },
          { action: 'line', x: '1', y: 'h-1' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/ui_input/richtext.png',
          imageX: 5,
          imageY: 5,
          imageW: 260,
          imageH: 20,
          display: 'static',
        },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var a = -4
      b += 4
      var d = -10
      c += 8
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/ui_input/thumb/richtext.png',
            imageW: 23,
            imageH: 23,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'ios_devices',
    text: 'iOS 设备',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'iPhone5Black',
    title: 'iPhone5（黑色）',
    category: 'ios_devices',
    attribute: { container: true, linkable: false },
    props: { w: 340, h: 690 },
    resizeDir: [],
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios/iphone_black.png',
          imageW: 340,
          imageH: 690,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/iphone5.png',
            imageW: 14,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a, y: 0 },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iPhoneGold',
    title: 'iPhone5（金色）',
    category: 'ios_devices',
    attribute: { container: true, linkable: false },
    props: { w: 340, h: 690 },
    resizeDir: [],
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios/iphone_gold.png',
          imageW: 340,
          imageH: 690,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/iphone_white.png',
            imageW: 15,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a, y: 0 },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iPhoneWhite',
    title: 'iPhone5（白色）',
    category: 'ios_devices',
    attribute: { container: true, linkable: false },
    props: { w: 340, h: 690 },
    resizeDir: [],
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios/iphone_white.png',
          imageW: 340,
          imageH: 690,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/iphone_white.png',
            imageW: 15,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a, y: 0 },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7GreyBg',
    title: '灰色背景',
    category: 'ios_devices',
    attribute: { linkable: false },
    props: { w: 280, h: 495 },
    resizeDir: [],
    anchors: [],
    textBlock: [],
    fillStyle: { type: 'solid', color: '230,230,230' },
    path: [{ lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } }],
    drawIcon: function (b, c) {
      var a = -3
      b += 4
      return [
        {
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: 0 },
            { action: 'line', x: b, y: 0 },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7BlackBg',
    title: '黑色背景',
    category: 'ios_devices',
    attribute: { linkable: false },
    props: { w: 280, h: 495 },
    resizeDir: [],
    anchors: [],
    textBlock: [],
    fillStyle: { type: 'solid', color: '0,0,0' },
    path: [{ lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } }],
    drawIcon: function (b, c) {
      var a = -3
      b += 4
      return [
        {
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: 0 },
            { action: 'line', x: b, y: 0 },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7WhiteBg',
    title: '白色背景',
    category: 'ios_devices',
    attribute: { linkable: false },
    props: { w: 280, h: 495 },
    resizeDir: [],
    anchors: [],
    textBlock: [],
    fillStyle: { type: 'solid', color: '255,255,255' },
    path: [{ lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } }],
    drawIcon: function (b, c) {
      var a = -3
      b += 4
      return [
        {
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: 0 },
            { action: 'line', x: b, y: 0 },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7DefaultBg',
    title: 'iOS 背景',
    category: 'ios_devices',
    attribute: { linkable: false },
    props: { w: 280, h: 495 },
    resizeDir: [],
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios/bg_default.png',
          imageW: 280,
          imageH: 495,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/bg_default.png',
            imageW: 26,
            imageH: 26,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: -3, y: 0 },
            { action: 'line', x: a + 4, y: 0 },
            { action: 'line', x: a + 4, y: b },
            { action: 'line', x: -3, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7SpaceBg',
    title: '星空背景',
    category: 'ios_devices',
    attribute: { linkable: false },
    props: { w: 280, h: 495 },
    resizeDir: [],
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios/bg_space.png',
          imageW: 280,
          imageH: 495,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/bg_space.png',
            imageW: 26,
            imageH: 26,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: -3, y: 0 },
            { action: 'line', x: a + 4, y: 0 },
            { action: 'line', x: a + 4, y: b },
            { action: 'line', x: -3, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7GrassBg',
    title: '绿草背景',
    category: 'ios_devices',
    attribute: { linkable: false },
    props: { w: 280, h: 495 },
    resizeDir: [],
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios/bg_grass.png',
          imageW: 280,
          imageH: 495,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/bg_grass.png',
            imageW: 26,
            imageH: 26,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: -3, y: 0 },
            { action: 'line', x: a + 4, y: 0 },
            { action: 'line', x: a + 4, y: b },
            { action: 'line', x: -3, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7MountainBg',
    title: '高山背景',
    category: 'ios_devices',
    attribute: { linkable: false },
    props: { w: 280, h: 495 },
    resizeDir: [],
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios/bg_mountain.png',
          imageW: 280,
          imageH: 495,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/bg_mountain.png',
            imageW: 26,
            imageH: 26,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: -3, y: 0 },
            { action: 'line', x: a + 4, y: 0 },
            { action: 'line', x: a + 4, y: b },
            { action: 'line', x: -3, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'ios_elements',
    text: 'iOS 元素',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'ios7Heading1',
    title: '标题',
    category: 'ios_elements',
    attribute: { linkable: false },
    props: { w: 120, h: 30 },
    anchors: [],
    fillStyle: { type: 'none' },
    fontStyle: { bold: true, size: 15 },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' }, text: '标题' }],
    path: [{ lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } }],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/heading.png',
            imageW: 30,
            imageH: 11,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a, y: 0 },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7Heading2',
    title: '标题',
    category: 'ios_elements',
    attribute: { linkable: false },
    props: { w: 120, h: 30 },
    anchors: [],
    fillStyle: { type: 'none' },
    fontStyle: { bold: true, size: 15, color: '34,124,231' },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' }, text: '标题' }],
    path: [{ lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } }],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/heading2.png',
            imageW: 30,
            imageH: 11,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a, y: 0 },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7TextLabel',
    title: '文本',
    category: 'ios_elements',
    attribute: { linkable: false },
    props: { w: 200, h: 40 },
    anchors: [],
    fillStyle: { type: 'none' },
    fontStyle: {
      size: 12,
      color: '132,132,132',
      textAlign: 'left',
      vAlign: 'top',
    },
    textBlock: [
      { position: { x: 0, y: 0, w: 'w', h: 'h' }, text: '文本内容...' },
    ],
    path: [{ lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } }],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/text.png',
            imageW: 30,
            imageH: 12,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a, y: 0 },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7Label',
    title: '标签',
    category: 'ios_elements',
    attribute: { linkable: false },
    props: { w: 100, h: 20 },
    anchors: [],
    fillStyle: { type: 'none' },
    fontStyle: { color: '100,100,100', textAlign: 'left' },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' }, text: '标签' }],
    path: [{ lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } }],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/label.png',
            imageW: 30,
            imageH: 6,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a, y: 0 },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7TransparentBg',
    title: '标题栏背景',
    category: 'ios_elements',
    attribute: { linkable: false },
    props: { w: 280, h: 45 },
    anchors: [],
    fillStyle: { type: 'solid', color: '247,247,247', alpha: 0.6 },
    textBlock: [],
    path: [{ lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } }],
    drawIcon: function (a, b) {
      return [
        {
          lineStyle: { lineWidth: 0 },
          fillStyle: { type: 'solid', color: '200,200,200' },
          actions: [
            { action: 'move', x: 0, y: -6 },
            { action: 'line', x: a, y: -6 },
            { action: 'line', x: a, y: b + 6 },
            { action: 'line', x: 0, y: b + 6 },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7StatusDark',
    title: '状态栏（深色）',
    category: 'ios_elements',
    attribute: { linkable: false },
    props: { w: 280, h: 20 },
    anchors: [],
    resizeDir: [],
    fillStyle: { type: 'none' },
    textBlock: [
      {
        position: { x: 100, y: 0, w: 80, h: 20 },
        text: '10:34 A.M',
        fontStyle: { bold: true, size: 12, color: '0,0,0' },
      },
    ],
    path: [
      {
        fillStyle: { alpha: 0.6 },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios/status_black.png',
          imageW: 280,
          imageH: 20,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      var c = -8
      b += 8
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/status_black.png',
            imageW: 26,
            imageH: 20,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: 0, y: c },
            { action: 'line', x: a, y: c },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7StatusLight',
    title: '状态栏（浅色）',
    category: 'ios_elements',
    attribute: { linkable: false },
    props: { w: 280, h: 20 },
    anchors: [],
    resizeDir: [],
    fillStyle: { type: 'none' },
    textBlock: [
      {
        position: { x: 100, y: 0, w: 80, h: 20 },
        text: '10:34 A.M',
        fontStyle: { bold: true, size: 12, color: '255,255,255' },
      },
    ],
    path: [
      {
        fillStyle: { alpha: 0.6 },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios/status_white.png',
          imageW: 280,
          imageH: 20,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      var c = -8
      b += 8
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/status_white.png',
            imageW: 26,
            imageH: 20,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: 0, y: c },
            { action: 'line', x: a, y: c },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7Nav',
    title: '导航栏',
    category: 'ios_elements',
    attribute: { linkable: false },
    props: { w: 280, h: 45 },
    resizeDir: [],
    anchors: [],
    fillStyle: { type: 'solid', color: '247,247,247' },
    fontStyle: { bold: true, size: 16, color: '34,124,231' },
    lineStyle: { lineColor: '27,124,250' },
    textBlock: [
      {
        position: { x: 25, y: 5, w: 80, h: 35 },
        text: '返回',
        fontStyle: { textAlign: 'left' },
      },
      {
        position: { x: 190, y: 5, w: 80, h: 35 },
        text: '操作',
        fontStyle: { textAlign: 'right' },
      },
    ],
    path: [
      { lineStyle: { lineWidth: 0, alpha: 0.6 }, actions: { ref: 'rectangle' } },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: '18', y: 'h*0.25' },
          { action: 'line', x: 8, y: 'h/2' },
          { action: 'line', x: '18', y: 'h*0.75' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      var c = -8
      b += 8
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/nav_bar.png',
            imageW: 26,
            imageH: 20,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: 0, y: c },
            { action: 'line', x: a, y: c },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7Progress',
    title: '进度条',
    category: 'ios_elements',
    attribute: { linkable: false },
    props: { w: 280, h: 50 },
    resizeDir: [],
    anchors: [],
    fillStyle: { type: 'solid', color: '247,247,247', alpha: 0.6 },
    fontStyle: { bold: true, size: 12 },
    textBlock: [{ position: { x: 40, y: 8, w: 200, h: 37 }, text: '下载中...' }],
    path: [
      { lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } },
      {
        lineStyle: { lineWidth: 3, lineColor: '203,203,203' },
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 0, y: 1.5 },
          { action: 'line', x: 'w', y: 1.5 },
        ],
      },
      {
        lineStyle: { lineWidth: 3, lineColor: '0,122,255' },
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 0, y: 1.5 },
          { action: 'line', x: 'w*0.6', y: 1.5 },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7TitleScope',
    title: '范围',
    category: 'ios_elements',
    attribute: { linkable: false },
    props: { w: 280, h: 80 },
    resizeDir: [],
    anchors: [],
    fillStyle: { type: 'solid', color: '247,247,247' },
    fontStyle: { size: 14, color: '0,122,255' },
    textBlock: [
      {
        position: { x: 90, y: 5, w: 100, h: 25 },
        text: '标题',
        fontStyle: { bold: true, color: '50,50,50' },
      },
      {
        position: { x: 185, y: 5, w: 80, h: 25 },
        text: '取消',
        fontStyle: { textAlign: 'right' },
      },
      { position: { x: 15, y: 37, w: 83, h: 28 }, text: '文本' },
      {
        position: { x: 98, y: 37, w: 83, h: 28 },
        text: '文本',
        fontStyle: { color: '255,255,255' },
      },
      { position: { x: 181, y: 37, w: 83, h: 28 }, text: '文本' },
    ],
    path: [
      {
        fillStyle: { alpha: 0.6 },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
      {
        lineStyle: { lineWidth: 2, lineColor: '0,122,255' },
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: '15', y: 'h/2+2' },
          {
            action: 'quadraticCurve',
            x1: '15',
            y1: 'h/2-3',
            x: '20',
            y: 'h/2-3',
          },
          { action: 'line', x: 'w-20', y: 'h/2-3' },
          {
            action: 'quadraticCurve',
            x1: 'w-15',
            y1: 'h/2-3',
            x: 'w-15',
            y: 'h/2+2',
          },
          { action: 'line', x: 'w-15', y: 'h*0.75' },
          {
            action: 'quadraticCurve',
            x1: 'w-15',
            y1: 'h*0.8125',
            x: 'w-20',
            y: 'h*0.8125',
          },
          { action: 'line', x: '20', y: 'h*0.8125' },
          {
            action: 'quadraticCurve',
            x1: '15',
            y1: 'h*0.8125',
            x: '15',
            y: 'h*0.75',
          },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'solid', color: '0,122,255' },
        actions: [
          { action: 'move', x: 'w*0.35', y: 'h/2-3' },
          { action: 'line', x: 'w*0.65', y: 'h/2-3' },
          { action: 'line', x: 'w*0.65', y: 'h*0.8125' },
          { action: 'line', x: 'w*0.35', y: 'h*0.8125' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = -1
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/scope_titled.png',
            imageW: 28,
            imageH: 24,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7Scope',
    title: '范围',
    category: 'ios_elements',
    attribute: { linkable: false },
    props: { w: 250, h: 28 },
    resizeDir: [],
    anchors: [],
    fontStyle: { size: 14, color: '0,122,255' },
    textBlock: [
      { position: { x: 0, y: 0, w: 83, h: 28 }, text: '文本' },
      {
        position: { x: 83, y: 0, w: 83, h: 28 },
        text: '文本',
        fontStyle: { color: '255,255,255' },
      },
      { position: { x: 166, y: 0, w: 83, h: 28 }, text: '文本' },
    ],
    path: [
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'solid', color: '0,122,255' },
        actions: [
          { action: 'move', x: 'w*0.33', y: 0 },
          { action: 'line', x: 'w*0.66', y: 0 },
          { action: 'line', x: 'w*0.66', y: 'h' },
          { action: 'line', x: 'w*0.33', y: 'h' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 2, lineColor: '0,122,255' },
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: '0', y: '5' },
          { action: 'quadraticCurve', x1: 0, y1: 0, x: 5, y: 0 },
          { action: 'line', x: 'w-5', y: 0 },
          { action: 'quadraticCurve', x1: 'w', y1: 0, x: 'w', y: 5 },
          { action: 'line', x: 'w', y: 'h-5' },
          { action: 'quadraticCurve', x1: 'w', y1: 'h', x: 'w-5', y: 'h' },
          { action: 'line', x: 5, y: 'h' },
          { action: 'quadraticCurve', x1: 0, y1: 'h', x: 0, y: 'h-5' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = -1
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/scope.png',
            imageW: 28,
            imageH: 24,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7Search',
    title: '搜索栏',
    category: 'ios_elements',
    attribute: { linkable: false },
    props: { w: 280, h: 45 },
    resizeDir: [],
    anchors: [],
    fillStyle: { type: 'solid', color: '247,247,247' },
    fontStyle: { size: 14, textAlign: 'left', color: '100,100,100' },
    textBlock: [
      { position: { x: 33, y: 12, w: 157, h: 21 }, text: '搜索' },
      {
        position: { x: 202, y: 5, w: 68, h: 35 },
        text: '取消',
        fontStyle: { size: 14, textAlign: 'center', bold: true },
      },
    ],
    path: [
      {
        fillStyle: { alpha: 0.6 },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
      {
        fillStyle: { type: 'solid', color: '255,255,255' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: '7', y: '12' },
          { action: 'quadraticCurve', x1: '7', y1: '7', x: '12', y: '7' },
          { action: 'line', x: '190', y: '7' },
          { action: 'quadraticCurve', x1: '195', y1: '7', x: '195', y: '12' },
          { action: 'line', x: '195', y: 'h-12' },
          { action: 'quadraticCurve', x1: '195', y1: 'h-7', x: '190', y: 'h-7' },
          { action: 'line', x: '12', y: 'h-7' },
          { action: 'quadraticCurve', x1: '7', y1: 'h-7', x: '7', y: 'h-12' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios/search_ico.png',
          imageW: 16,
          imageH: 16,
          display: 'static',
          imageX: 'w*0.05',
          imageY: 'h*0.3',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = -1
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/search.png',
            imageW: 28,
            imageH: 24,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7ListView',
    title: '列表视图',
    category: 'ios_elements',
    attribute: { linkable: false },
    props: { w: 280, h: 160 },
    anchors: [],
    fontStyle: { size: 14, textAlign: 'left' },
    textBlock: [
      { position: { x: 15, y: '5', w: 265, h: 'h/4-10' }, text: '标题' },
      { position: { x: 15, y: 'h/4+5', w: 265, h: 'h/4-10' }, text: '标题' },
      { position: { x: 15, y: 'h/2+5', w: 265, h: 'h/4-10' }, text: '标题' },
      { position: { x: 15, y: 'h*0.75+5', w: 265, h: 'h/4-10' }, text: '标题' },
    ],
    path: [
      { lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 1, lineColor: '200,200,200' },
        actions: [
          { action: 'move', x: 15, y: 'Math.round(h/4) + 0.5' },
          { action: 'line', x: 'w', y: 'Math.round(h/4) + 0.5' },
          { action: 'move', x: 15, y: 'Math.round(h/2) + 0.5' },
          { action: 'line', x: 'w', y: 'Math.round(h/2) + 0.5' },
          { action: 'move', x: 15, y: 'Math.round(h*0.75) + 0.5' },
          { action: 'line', x: 'w', y: 'Math.round(h*0.75) + 0.5' },
          { action: 'move', x: 15, y: 'h - 0.5' },
          { action: 'line', x: 'w', y: 'h - 0.5' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/list_view.png',
            imageW: 28,
            imageH: 16,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7ListRow',
    title: '列表行',
    category: 'ios_elements',
    attribute: { linkable: false },
    props: { w: 280, h: 40 },
    anchors: [],
    fontStyle: { size: 14, textAlign: 'left' },
    textBlock: [{ position: { x: 15, y: 5, w: 265, h: 'h-10' }, text: '标题' }],
    path: [
      { lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 1, lineColor: '200,200,200' },
        actions: [
          { action: 'move', x: 15, y: 'h - 0.5' },
          { action: 'line', x: 'w', y: 'h - 0.5' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/list_row.png',
            imageW: 30,
            imageH: 10,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7Tooltip',
    title: '提示',
    category: 'ios_elements',
    attribute: { linkable: false },
    props: { w: 130, h: 60 },
    anchors: [],
    lineStyle: { lineWidth: 0 },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '8' },
          { action: 'quadraticCurve', x1: '0', y1: '0', x: '8', y: '0' },
          { action: 'line', x: 'w*0.4-14', y: '0' },
          { action: 'line', x: 'w*0.4-7', y: '-8' },
          { action: 'line', x: 'w*0.4', y: '0' },
          { action: 'line', x: 'w-8', y: '0' },
          { action: 'quadraticCurve', x1: 'w', y1: '0', x: 'w', y: '8' },
          { action: 'line', x: 'w', y: 'h-8' },
          { action: 'quadraticCurve', x1: 'w', y1: 'h', x: 'w-8', y: 'h' },
          { action: 'line', x: '8', y: 'h' },
          { action: 'quadraticCurve', x1: '0', y1: 'h', x: '0', y: 'h-8' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          lineStyle: { lineWidth: 1, lineColor: '150,150,150' },
          actions: [
            { action: 'move', x: 0.5, y: 0 },
            { action: 'line', x: a * 0.5 - 5, y: 0 },
            { action: 'line', x: a * 0.5 - 2.5, y: -4 },
            { action: 'line', x: a * 0.5, y: 0 },
            { action: 'line', x: Math.round(a) - 0.5, y: 0 },
            { action: 'line', x: Math.round(a) - 0.5, y: b },
            { action: 'line', x: 0.5, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7Keyboard',
    title: '键盘',
    category: 'ios_elements',
    attribute: { linkable: false },
    props: { w: 280, h: 189 },
    anchors: [],
    lineStyle: { lineWidth: 0 },
    textBlock: [],
    fillStyle: { type: 'solid', color: '247,247,247' },
    path: [
      {
        fillStyle: { alpha: 0.6 },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios/keyboard.png',
          imageW: 280,
          imageH: 189,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/keyboard.png',
            imageW: 30,
            imageH: 19,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7Alert',
    title: '提示',
    category: 'ios_elements',
    attribute: { linkable: false },
    props: { w: 240, h: 115 },
    anchors: [],
    lineStyle: { lineWidth: 0 },
    fillStyle: { type: 'solid', color: '222,226,227' },
    textBlock: [
      {
        position: { x: 10, y: 5, w: 'w-20', h: '30' },
        text: '提示',
        fontStyle: { size: 14, bold: true },
      },
      {
        position: { x: 10, y: 35, w: 'w-20', h: 'h-75' },
        text: '提示信息',
        fontStyle: { vAlign: 'top' },
      },
      {
        position: { x: 5, y: 'h-40', w: 'w/2-10', h: 40 },
        text: '确定',
        fontStyle: { color: '0,122,255' },
      },
      {
        position: { x: 'w/2+5', y: 'h-40', w: 'w/2-10', h: 40 },
        text: '取消',
        fontStyle: { color: '0,122,255' },
      },
    ],
    path: [
      {
        fillStyle: { alpha: 0.95 },
        actions: [
          { action: 'move', x: '0', y: '8' },
          { action: 'quadraticCurve', x1: '0', y1: '0', x: '8', y: '0' },
          { action: 'line', x: 'w*0.4', y: '0' },
          { action: 'line', x: 'w-8', y: '0' },
          { action: 'quadraticCurve', x1: 'w', y1: '0', x: 'w', y: '8' },
          { action: 'line', x: 'w', y: 'h-8' },
          { action: 'quadraticCurve', x1: 'w', y1: 'h', x: 'w-8', y: 'h' },
          { action: 'line', x: '8', y: 'h' },
          { action: 'quadraticCurve', x1: '0', y1: 'h', x: '0', y: 'h-8' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 1, lineColor: '169,169,169' },
        actions: [
          { action: 'move', x: 0, y: 'Math.round(h-40) + 0.5' },
          { action: 'line', x: 'w', y: 'Math.round(h-40) + 0.5' },
          { action: 'move', x: 'Math.round(w/2) + 0.5', y: 'Math.round(h-40)' },
          { action: 'line', x: 'Math.round(w/2) + 0.5', y: 'h' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/alert.png',
            imageW: 30,
            imageH: 12,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7Dropdown',
    title: '下拉列表',
    category: 'ios_elements',
    attribute: { linkable: false },
    props: { w: 280, h: 140 },
    anchors: [],
    fontStyle: { size: 16, color: '80,80,80' },
    fillStyle: { type: 'solid', color: '237,237,237', alpha: 0.7 },
    textBlock: [
      {
        position: { x: 0, y: 'h*0.4', w: 'w', h: 'h/5' },
        text: '选项 3',
        fontStyle: { bold: true, color: '0,0,0' },
      },
      { position: { x: 0, y: 0, w: 'w', h: 'h/5' }, text: '选项 1' },
      { position: { x: 0, y: 'h*0.2', w: 'w', h: 'h/5' }, text: '选项 2' },
      { position: { x: 0, y: 'h*0.6', w: 'w', h: 'h/5' }, text: '选项 4' },
      { position: { x: 0, y: 'h*0.8', w: 'w', h: 'h/5' }, text: '选项 5' },
    ],
    path: [
      { lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 1, lineColor: '120,120,120' },
        actions: [
          { action: 'move', x: 0, y: 'Math.round(h*0.4) + 0.5' },
          { action: 'line', x: 'w', y: 'Math.round(h*0.4) + 0.5' },
          { action: 'move', x: 0, y: 'Math.round(h*0.6) + 0.5' },
          { action: 'line', x: 'w', y: 'Math.round(h*0.6) + 0.5' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/dropdown.png',
            imageW: 30,
            imageH: 19,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'ios_controls',
    text: 'iOS 控件',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'ios7Button1',
    title: '按钮',
    category: 'ios_controls',
    attribute: { linkable: false },
    props: { w: 240, h: 40 },
    anchors: [],
    lineStyle: { lineWidth: 0 },
    fontStyle: { size: 16, color: '252,84,57', bold: true },
    textBlock: [{ position: { x: 10, y: 0, w: 'w-20', h: 'h' }, text: '操作' }],
    path: [{ actions: { ref: 'roundRectangle' } }],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios_controls/thumb/button1.png',
            imageW: 30,
            imageH: 10,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7Button2',
    title: '按钮',
    category: 'ios_controls',
    attribute: { linkable: false },
    props: { w: 240, h: 40 },
    anchors: [],
    lineStyle: { lineWidth: 0 },
    fontStyle: { size: 16, color: '34,124,231' },
    textBlock: [{ position: { x: 10, y: 0, w: 'w-20', h: 'h' }, text: 'Cancel' }],
    path: [{ actions: { ref: 'roundRectangle' } }],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios_controls/thumb/button2.png',
            imageW: 30,
            imageH: 10,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7Text',
    title: '输入框',
    category: 'ios_controls',
    attribute: { linkable: false },
    props: { w: 240, h: 30 },
    anchors: [],
    lineStyle: { lineWidth: 0 },
    fillStyle: { type: 'solid', color: '215,216,218' },
    fontStyle: { size: 14, color: '80,80,80', textAlign: 'left' },
    textBlock: [{ position: { x: 10, y: 0, w: 'w-20', h: 'h' }, text: '文本' }],
    path: [{ actions: { ref: 'roundRectangle' } }],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios_controls/thumb/text.png',
            imageW: 30,
            imageH: 8,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7Stepper',
    title: 'Stepper 数字调整',
    category: 'ios_controls',
    attribute: { linkable: false },
    props: { w: 90, h: 28 },
    anchors: [],
    lineStyle: { lineWidth: 2, lineColor: '0,122,255' },
    fillStyle: { type: 'solid', color: '0,0,0', alpha: 0.1 },
    textBlock: [],
    path: [
      { actions: { ref: 'roundRectangle' } },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'w/2', y: 0 },
          { action: 'line', x: 'w/2', y: 'h' },
          { action: 'move', x: 'w/4-6', y: 'h/2' },
          { action: 'line', x: 'w/4+6', y: 'h/2' },
          { action: 'move', x: 'w*0.75-6', y: 'h/2' },
          { action: 'line', x: 'w*0.75+6', y: 'h/2' },
          { action: 'move', x: 'w*0.75', y: 'h/2-6' },
          { action: 'line', x: 'w*0.75', y: 'h/2+6' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = -2
      b += 2
      return [
        {
          fillStyle: {
            type: 'image',
            alpha: 1,
            fileId: '/images/designer/ios_controls/thumb/stepper.png',
            imageW: 30,
            imageH: 9,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7Slider',
    title: 'Slider 范围选择',
    category: 'ios_controls',
    attribute: { linkable: false },
    props: { w: 200, h: 30 },
    anchors: [],
    textBlock: [],
    resizeDir: ['l', 'r'],
    path: [
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 4, lineColor: '73,126,191' },
        actions: [
          { action: 'move', x: 0, y: 'h/2' },
          { action: 'line', x: 'w*0.6', y: 'h/2' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 4, lineColor: '203,203,203' },
        actions: [
          { action: 'move', x: 'w*0.6', y: 'h/2' },
          { action: 'line', x: 'w', y: 'h/2' },
        ],
      },
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_controls/slider_ico.png',
          imageX: 'w*0.6-13',
          imageY: 'h/2-13',
          imageW: 26,
          imageH: 26,
          display: 'static',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = -2
      b += 2
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios_controls/thumb/slider.png',
            imageW: 25,
            imageH: 6,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7ControlProgress',
    title: '进度条',
    category: 'ios_controls',
    attribute: { linkable: false },
    props: { w: 200, h: 10 },
    anchors: [],
    textBlock: [],
    resizeDir: ['l', 'r'],
    path: [
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 4, lineColor: '73,126,191' },
        actions: [
          { action: 'move', x: 0, y: 'h/2' },
          { action: 'line', x: 'w*0.6', y: 'h/2' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 4, lineColor: '203,203,203' },
        actions: [
          { action: 'move', x: 'w*0.6', y: 'h/2' },
          { action: 'line', x: 'w', y: 'h/2' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7SwitchOn',
    title: '开关：开',
    category: 'ios_controls',
    attribute: { linkable: false },
    props: { w: 50, h: 28 },
    anchors: [],
    textBlock: [],
    resizeDir: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_controls/switch_on.png',
          imageW: 50,
          imageH: 28,
          display: 'original',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = -2
      b += 2
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios_controls/thumb/switch_on.png',
            imageW: 30,
            imageH: 17,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7SwitchOff',
    title: '开关：关',
    category: 'ios_controls',
    attribute: { linkable: false },
    props: { w: 50, h: 28 },
    anchors: [],
    textBlock: [],
    resizeDir: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_controls/switch_off.png',
          imageW: 50,
          imageH: 28,
          display: 'original',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = -2
      b += 2
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios_controls/thumb/switch_off.png',
            imageW: 30,
            imageH: 17,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios7Sort',
    title: '排序',
    category: 'ios_controls',
    attribute: { linkable: false },
    props: { w: 12, h: 311 },
    anchors: [],
    textBlock: [],
    resizeDir: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_controls/sort.png',
          imageW: 12,
          imageH: 311,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = -2
      b += 2
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios_controls/thumb/sort.png',
            imageW: 8,
            imageH: 30,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({ name: 'ios_icons', text: 'iOS 图标', dataAttributes: [] })
  Schema.addShape({
    name: 'ios7AddBlack',
    title: '添加',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/add_black.svg',
          imageW: '25',
          imageH: '25',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7AddBlackLight',
    title: '添加',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/add_black_light.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7AddGreen',
    title: '添加',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/add_green.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7AddNormal',
    title: '添加',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/add.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7RemoveBlack',
    title: '删除',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/remove_black.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7RemoveBlackLight',
    title: '删除',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/remove_black_light.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7RemoveRed',
    title: '删除',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/remove_red.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7AddSmall',
    title: '添加',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 19, h: 19 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/add_small.svg',
          imageW: 19,
          imageH: 19,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Close1',
    title: '关闭',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 30, h: 30 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/close1.svg',
          imageW: 20,
          imageH: 20,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Close2',
    title: '关闭',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 22 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/close2.svg',
          imageW: 26,
          imageH: 22,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Close3',
    title: '关闭',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 23 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/close3.svg',
          imageW: 26,
          imageH: 23,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Close4',
    title: '关闭',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 23 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/close4.svg',
          imageW: 26,
          imageH: 23,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Refresh',
    title: '刷新',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 30, h: 30 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/refresh.svg',
          imageW: 15,
          imageH: 17,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7SearchIcon',
    title: '搜索',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 30, h: 30 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/search.svg',
          imageW: 16,
          imageH: 16,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7SearchBig',
    title: '搜索',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 24, h: 24 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/search_big.svg',
          imageW: 24,
          imageH: 24,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7MenuIcon',
    title: '菜单',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 18, h: 16 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 0, y: 'lineWidth/2' },
          { action: 'line', x: 'w', y: 'lineWidth/2' },
          { action: 'move', x: 0, y: 'h/2-lineWidth/2' },
          { action: 'line', x: 'w', y: 'h/2-lineWidth/2' },
          { action: 'move', x: 0, y: 'h-lineWidth/2' },
          { action: 'line', x: 'w', y: 'h-lineWidth/2' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7ArrowUp',
    title: '向上',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 23, h: 10 },
    anchors: [],
    textBlock: [],
    lineStyle: { lineColor: '27,124,250' },
    path: [
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 0, y: 'h' },
          { action: 'line', x: 'w/2', y: 0 },
          { action: 'line', x: 'w', y: 'h' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7ArrowDown',
    title: '向下',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 23, h: 10 },
    anchors: [],
    textBlock: [],
    lineStyle: { lineColor: '27,124,250' },
    path: [
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 0, y: 0 },
          { action: 'line', x: 'w/2', y: 'h' },
          { action: 'line', x: 'w', y: 0 },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7ArrowLeft',
    title: '向左',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 10, h: 23 },
    anchors: [],
    textBlock: [],
    lineStyle: { lineColor: '27,124,250' },
    path: [
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'w', y: 0 },
          { action: 'line', x: 0, y: 'h/2' },
          { action: 'line', x: 'w', y: 'h' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7ArrowRight',
    title: '向右',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 10, h: 23 },
    anchors: [],
    textBlock: [],
    lineStyle: { lineColor: '27,124,250' },
    path: [
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 0, y: 0 },
          { action: 'line', x: 'w', y: 'h/2' },
          { action: 'line', x: 0, y: 'h' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Info1',
    title: '信息',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/info1.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Info2',
    title: '信息',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/info2.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Info3',
    title: '信息',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/info3.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Check1',
    title: '选中',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/check1.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Check2',
    title: '选中',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/check2.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Check3',
    title: '选中',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/check3.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Check4',
    title: '选中',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/check4.svg',
          imageW: 14,
          imageH: 16,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Check5',
    title: '选中',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/check5.svg',
          imageW: 14,
          imageH: 16,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Play1',
    title: '播放',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/play1.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Play2',
    title: '播放',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/play2.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Pause1',
    title: '暂停',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/pause1.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Pause2',
    title: '暂停',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/pause2.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Stop2',
    title: '停止',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/stop2.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Stop3',
    title: '停止',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/stop3.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Stop1',
    title: '暂停',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/stop1.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Favourite',
    title: '收藏',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 30, h: 30 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/favourite.svg',
          imageW: 18,
          imageH: 18,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Favourite1',
    title: '收藏',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/favourite1.svg',
          imageW: 24,
          imageH: 24,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Heart',
    title: '喜欢',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 24, h: 24 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/heart.svg',
          imageW: 24,
          imageH: 24,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Bookmark',
    title: '书签',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 30, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/bookmark.svg',
          imageW: 30,
          imageH: 26,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Profile',
    title: '个人信息',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 28, h: 28 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/profile.svg',
          imageW: 28,
          imageH: 28,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Copy',
    title: '复制',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 28, h: 28 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/copy.svg',
          imageW: 28,
          imageH: 28,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Upload',
    title: '上传',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 20, h: 28 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/action.svg',
          imageW: 20,
          imageH: 28,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Wifi',
    title: 'Wifi',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 24, h: 24 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/wifi.svg',
          imageW: 24,
          imageH: 24,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Bluetooth',
    title: '蓝牙',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 24, h: 24 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/bluetooth.svg',
          imageW: 24,
          imageH: 24,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Battery',
    title: '电池',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 28, h: 14 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/battery.svg',
          imageW: 28,
          imageH: 14,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Lock',
    title: '锁定',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 24 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/lock.svg',
          imageW: 26,
          imageH: 24,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Camera',
    title: '相机',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 25, h: 25 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/camera.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Sound',
    title: '声音',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 24, h: 24 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/sound.svg',
          imageW: 24,
          imageH: 24,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Download',
    title: '下载',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 24, h: 28 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/download.svg',
          imageW: 23,
          imageH: 27,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Video',
    title: '视频',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 29, h: 18 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/face.svg',
          imageW: 29,
          imageH: 17,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7ListIcon',
    title: '列表',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 24, h: 15 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/list.svg',
          imageW: 24,
          imageH: 15,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Locate',
    title: '定位',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 18, h: 18 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/locate.svg',
          imageW: 18,
          imageH: 18,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Trash',
    title: '垃圾箱',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 24, h: 24 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/trash.svg',
          imageW: 24,
          imageH: 24,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Help',
    title: '帮助',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/help.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7AlertIcon',
    title: '提醒',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 26, h: 26 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/alert.svg',
          imageW: 25,
          imageH: 25,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Clock',
    title: '时钟',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 24, h: 24 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/clock.svg',
          imageW: 24,
          imageH: 24,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Phone',
    title: '电话',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 24, h: 24 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/phone.svg',
          imageW: 24,
          imageH: 24,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Message',
    title: '信息',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 24, h: 24 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/message.svg',
          imageW: 24,
          imageH: 24,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'ios7Mail',
    title: '邮件',
    category: 'ios_icons',
    attribute: { linkable: false },
    props: { w: 24, h: 24 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/ios_icons/svg/mail.svg',
          imageW: 24,
          imageH: 24,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addCategory({
    name: 'andriod_devices',
    text: 'Android设备',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'andriodBlackBg',
    title: 'Android设备',
    category: 'andriod_devices',
    attribute: { container: true, linkable: false },
    props: { w: 402, h: 797 },
    resizeDir: [],
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod/andriod_bg.png',
          imageW: 402,
          imageH: 797,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/andriod_bg.png',
            imageW: 15,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a, y: 0 },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodBlack1',
    title: '安卓设备(白色背景)',
    category: 'andriod_devices',
    attribute: { container: true, linkable: false },
    props: { w: 402, h: 797 },
    resizeDir: [],
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod/andriod_white.png',
          imageW: 402,
          imageH: 797,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/andriod_white.png',
            imageW: 15,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a, y: 0 },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodBlack',
    title: '安卓设备(黑色背景)',
    category: 'andriod_devices',
    attribute: { container: true, linkable: false },
    props: { w: 402, h: 797 },
    resizeDir: [],
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod/andriod_black.png',
          imageW: 402,
          imageH: 797,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/andriod_black.png',
            imageW: 15,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a, y: 0 },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriod5DefaultBg',
    title: 'Android 背景一',
    category: 'andriod_devices',
    attribute: { linkable: false },
    props: { w: 360, h: 602 },
    resizeDir: [],
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod/bg_default.jpg',
          imageW: 360,
          imageH: 600,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/bg_default.jpg',
            imageW: 26,
            imageH: 26,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: -3, y: 0 },
            { action: 'line', x: a + 4, y: 0 },
            { action: 'line', x: a + 4, y: b },
            { action: 'line', x: -3, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriod5Bg1',
    title: 'Android 背景二',
    category: 'andriod_devices',
    attribute: { linkable: false },
    props: { w: 362, h: 602 },
    resizeDir: [],
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod/bg_1.jpg',
          imageW: 360,
          imageH: 600,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/bg_1.jpg',
            imageW: 26,
            imageH: 26,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: -3, y: 0 },
            { action: 'line', x: a + 4, y: 0 },
            { action: 'line', x: a + 4, y: b },
            { action: 'line', x: -3, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriod5Bg2',
    title: 'Android 背景三',
    category: 'andriod_devices',
    attribute: { linkable: false },
    props: { w: 360, h: 602 },
    resizeDir: [],
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod/bg_2.jpg',
          imageW: 360,
          imageH: 600,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/bg_2.jpg',
            imageW: 26,
            imageH: 26,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: -3, y: 0 },
            { action: 'line', x: a + 4, y: 0 },
            { action: 'line', x: a + 4, y: b },
            { action: 'line', x: -3, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodGreyBg',
    title: 'Android 灰色背景',
    category: 'andriod_devices',
    attribute: { linkable: false },
    props: { w: 360, h: 602 },
    resizeDir: [],
    anchors: [],
    textBlock: [],
    fillStyle: { type: 'solid', color: '230,230,230' },
    path: [{ lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } }],
    drawIcon: function (b, c) {
      var a = -3
      b += 4
      return [
        {
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: 0 },
            { action: 'line', x: b, y: 0 },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'andriod_elements',
    text: 'Android 元素',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'andriodStatusDark',
    title: '状态栏（深色）',
    category: 'andriod_elements',
    attribute: { linkable: false },
    props: { w: 360, h: 24 },
    anchors: [],
    resizeDir: [],
    fillStyle: { type: 'none' },
    textBlock: [
      {
        position: { x: 0, y: 0, w: 80, h: 24 },
        text: '',
        fontStyle: { bold: false, size: 12, color: '255,255,255' },
      },
    ],
    path: [
      {
        fillStyle: { alpha: 0.6 },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod/top.png',
          imageW: 360,
          imageH: 24,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      var c = -12
      b += 12
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/status.png',
            imageW: 30,
            imageH: 30,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: 0, y: c },
            { action: 'line', x: a, y: c },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodHeading1',
    title: '标题',
    category: 'andriod_elements',
    attribute: { linkable: false },
    props: { w: 120, h: 30 },
    anchors: [],
    fillStyle: { type: 'none' },
    fontStyle: { bold: true, size: 15, color: '50,50,50' },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' }, text: '标题' }],
    path: [{ lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } }],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/heading.png',
            imageW: 30,
            imageH: 11,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a, y: 0 },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodHeading2',
    title: '标题',
    category: 'andriod_elements',
    attribute: { linkable: false },
    props: { w: 120, h: 30 },
    anchors: [],
    fillStyle: { type: 'none' },
    fontStyle: { bold: true, size: 15, color: '0,150,136' },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' }, text: '标题' }],
    path: [{ lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } }],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/heading2.png',
            imageW: 30,
            imageH: 11,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a, y: 0 },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodTextLabel',
    title: '文本',
    category: 'andriod_elements',
    attribute: { linkable: false },
    props: { w: 200, h: 40 },
    anchors: [],
    fillStyle: { type: 'none' },
    fontStyle: {
      size: 12,
      color: '132,132,132',
      textAlign: 'left',
      vAlign: 'top',
    },
    textBlock: [
      { position: { x: 0, y: 0, w: 'w', h: 'h' }, text: '文本内容...' },
    ],
    path: [{ lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } }],
    drawIcon: function (a, b) {
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/text.png',
            imageW: 30,
            imageH: 12,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: a, y: 0 },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodTitle1',
    title: '标题栏(居中)',
    category: 'andriod_elements',
    attribute: { linkable: false },
    props: { w: 360, h: 48 },
    lineStyle: { lineWidth: 0 },
    fillStyle: { type: 'solid', color: '243,243,243' },
    anchors: [],
    path: [{ actions: { ref: 'rectangle' } }],
    textBlock: [
      {
        position: { x: 5, y: 'h/4', w: 'w-10', h: 'h/2' },
        text: 'Title',
        fontStyle: { bold: true, size: 14, color: '3,3,3' },
      },
    ],
    drawIcon: function (b, c) {
      var a = 0.5
      var d = -6
      c = Math.round(c + 4) + 4.5
      b = Math.round(b) - 0.5
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/title_center.png',
            imageW: 30,
            imageH: 15,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodTitle2',
    title: '标题栏(居左)',
    category: 'andriod_elements',
    attribute: { linkable: false },
    props: { w: 360, h: 48 },
    lineStyle: { lineWidth: 0 },
    fillStyle: { type: 'solid', color: '243,243,243' },
    anchors: [],
    path: [{ actions: { ref: 'rectangle' } }],
    textBlock: [
      {
        position: { x: 12, y: 'h/4', w: 'w-10', h: 'h/2' },
        text: 'Title',
        fontStyle: { bold: true, textAlign: 'left', size: 14, color: '3,3,3' },
      },
    ],
    drawIcon: function (b, c) {
      var a = 0.5
      var d = -6
      c = Math.round(c + 4) + 4.5
      b = Math.round(b) - 0.5
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/title_left.png',
            imageW: 30,
            imageH: 15,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodSearch1',
    title: '标题栏(菜单)',
    category: 'andriod_elements',
    attribute: { linkable: false },
    props: { w: 360, h: 45 },
    resizeDir: [],
    anchors: [],
    fillStyle: { type: 'solid', color: '243,243,243' },
    fontStyle: { size: 16, textAlign: 'left', color: '100,100,100' },
    textBlock: [
      {
        position: { x: 45, y: 13, w: 257, h: 21 },
        text: 'Title',
        fontStyle: { bold: true },
      },
    ],
    path: [
      {
        fillStyle: { alpha: 1 },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod/list.png',
          imageW: 18,
          imageH: 12,
          display: 'static',
          imageX: 'w*0.05',
          imageY: 'h*0.36',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod/search_ico.png',
          imageW: 16,
          imageH: 16,
          display: 'static',
          imageX: 'w*0.90',
          imageY: 'h*0.29',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = -6
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/title_menu.png',
            imageW: 30,
            imageH: 24,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodBack',
    title: '标题栏(返回)',
    category: 'andriod_elements',
    attribute: { linkable: false },
    props: { w: 360, h: 45 },
    resizeDir: [],
    anchors: [],
    fillStyle: { type: 'solid', color: '243,243,243' },
    fontStyle: { size: 16, textAlign: 'left', color: '100,100,100' },
    textBlock: [
      {
        position: { x: 45, y: 13, w: 257, h: 21 },
        text: 'Title',
        fontStyle: { bold: true },
      },
    ],
    path: [
      {
        fillStyle: { alpha: 1 },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod/arrow_left.png',
          imageW: 18,
          imageH: 12,
          display: 'static',
          imageX: 'w*0.05',
          imageY: 'h*0.36 - 1',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod/search_ico.png',
          imageW: 16,
          imageH: 16,
          display: 'static',
          imageX: 'w*0.90',
          imageY: 'h*0.29',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = -6
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/title.png',
            imageW: 30,
            imageH: 24,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodTitle3',
    title: '菜单',
    category: 'andriod_elements',
    attribute: { linkable: false },
    props: { w: 360, h: 48 },
    lineStyle: { lineWidth: 0 },
    fillStyle: { type: 'solid', color: '243,243,243' },
    anchors: [],
    resizeDir: [],
    path: [
      { actions: { ref: 'rectangle' } },
      {
        lineStyle: { lineWidth: 1, lineColor: '0,150,136' },
        actions: [
          { action: 'move', x: 25, y: '47' },
          { action: 'line', x: '110', y: '47' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    textBlock: [
      {
        position: { x: 20, y: 0, w: 100, h: 48 },
        text: 'Menu A',
        fontStyle: { bold: true, size: 14, color: '0,150,136' },
      },
      {
        position: { x: 120, y: 0, w: 100, h: 48 },
        text: 'Menu B',
        fontStyle: { bold: true, size: 14, color: '120,120,120' },
      },
      {
        position: { x: 220, y: 0, w: 100, h: 48 },
        text: 'Menu C',
        fontStyle: { bold: true, size: 14, color: '120,120,120' },
      },
    ],
    drawIcon: function (b, c) {
      var a = 0.5
      var d = -6
      c = Math.round(c + 4) + 4.5
      b = Math.round(b) - 0.5
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/menu.png',
            imageW: 30,
            imageH: 15,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodSearch',
    title: 'Search Bar',
    category: 'andriod_elements',
    attribute: { linkable: false },
    props: { w: 360, h: 45 },
    resizeDir: [],
    anchors: [],
    fillStyle: { type: 'solid', color: '243,243,243' },
    fontStyle: { size: 16, textAlign: 'left', color: '100,100,100' },
    textBlock: [
      {
        position: { x: 45, y: 12, w: 257, h: 21 },
        text: 'Search',
        fontStyle: { bold: true },
      },
    ],
    path: [
      {
        fillStyle: { alpha: 1 },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
      {
        fillStyle: { type: 'solid', color: '255,255,255' },
        lineStyle: { lineWidth: 0 },
        actions: [
          { action: 'move', x: '7', y: '12' },
          { action: 'quadraticCurve', x1: '7', y1: '7', x: '12', y: '7' },
          { action: 'line', x: '348', y: '7' },
          { action: 'quadraticCurve', x1: '352', y1: '7', x: '352', y: '12' },
          { action: 'line', x: '352', y: 'h-12' },
          { action: 'quadraticCurve', x1: '352', y1: 'h-7', x: '348', y: 'h-7' },
          { action: 'line', x: '12', y: 'h-7' },
          { action: 'quadraticCurve', x1: '7', y1: 'h-7', x: '7', y: 'h-12' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod/search_ico.png',
          imageW: 18,
          imageH: 12,
          display: 'static',
          imageX: 'w*0.05',
          imageY: 'h*0.28',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod/search_say.png',
          imageW: 16,
          imageH: 16,
          display: 'static',
          imageX: 'w*0.90',
          imageY: 'h*0.29',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = -1
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/search.png',
            imageW: 28,
            imageH: 24,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodListView1',
    title: '列表视图',
    category: 'andriod_elements',
    attribute: { linkable: false },
    props: { w: 360, h: 160 },
    anchors: [],
    fillStyle: { type: 'solid', color: '252,252,252' },
    fontStyle: { size: 14, textAlign: 'left' },
    textBlock: [
      {
        position: { x: 15, y: '5', w: 265, h: 'h/4-10' },
        text: 'Single line item',
      },
      {
        position: { x: 15, y: 'h/4+5', w: 265, h: 'h/4-10' },
        text: 'Single line item',
      },
      {
        position: { x: 15, y: 'h/2+5', w: 265, h: 'h/4-10' },
        text: 'Single line item',
      },
      {
        position: { x: 15, y: 'h*0.75+5', w: 265, h: 'h/4-10' },
        text: 'Single line item',
      },
    ],
    path: [
      { lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 1, lineColor: '220,220,220' },
        actions: [
          { action: 'move', x: 15, y: 'Math.round(h/4) + 0.5' },
          { action: 'line', x: 'w', y: 'Math.round(h/4) + 0.5' },
          { action: 'move', x: 15, y: 'Math.round(h/2) + 0.5' },
          { action: 'line', x: 'w', y: 'Math.round(h/2) + 0.5' },
          { action: 'move', x: 15, y: 'Math.round(h*0.75) + 0.5' },
          { action: 'line', x: 'w', y: 'Math.round(h*0.75) + 0.5' },
          { action: 'move', x: 15, y: 'h - 0.5' },
          { action: 'line', x: 'w', y: 'h - 0.5' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/list_view.png',
            imageW: 28,
            imageH: 16,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodListView2',
    title: '列表视图(两行)',
    category: 'andriod_elements',
    attribute: { linkable: false },
    props: { w: 360, h: 260 },
    anchors: [],
    fillStyle: { type: 'solid', color: '252,252,252' },
    fontStyle: { size: 14, textAlign: 'left' },
    textBlock: [
      {
        position: { x: 15, y: 'h/10 -16', w: 265, h: '25' },
        text: 'Single line item',
        fontStyle: { size: 16, color: '113,113,113' },
      },
      {
        position: { x: 15, y: 'h/10 + 9', w: 265, h: '20' },
        text: 'Single line item',
        fontStyle: { size: 13, color: '130,130,130' },
      },
      {
        position: { x: 15, y: 'h/4+10', w: 265, h: '25' },
        text: 'Single line item',
        fontStyle: { size: 16, color: '113,113,113' },
      },
      {
        position: { x: 15, y: 'h/3 + 13', w: 265, h: '20' },
        text: 'Single line item',
        fontStyle: { size: 13, color: '130,130,130' },
      },
      {
        position: { x: 15, y: 'h/2+8', w: 265, h: '25' },
        text: 'Single line item',
        fontStyle: { size: 16, color: '113,113,113' },
      },
      {
        position: { x: 15, y: 'h/1.67 + 7', w: 265, h: '20' },
        text: 'Single line item',
        fontStyle: { size: 13, color: '130,130,130' },
      },
      {
        position: { x: 15, y: 'h*0.75+9', w: 265, h: '25' },
        text: 'Single line item',
        fontStyle: { size: 16, color: '113,113,113' },
      },
      {
        position: { x: 15, y: 'h/1.18 + 8', w: 265, h: '20' },
        text: 'Single line item',
        fontStyle: { size: 13, color: '130,130,130' },
      },
    ],
    path: [
      { lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 1, lineColor: '220,220,220' },
        actions: [
          { action: 'move', x: 15, y: 'Math.round(h/4) + 0.5' },
          { action: 'line', x: 'w', y: 'Math.round(h/4) + 0.5' },
          { action: 'move', x: 15, y: 'Math.round(h/2) + 0.5' },
          { action: 'line', x: 'w', y: 'Math.round(h/2) + 0.5' },
          { action: 'move', x: 15, y: 'Math.round(h*0.75) + 0.5' },
          { action: 'line', x: 'w', y: 'Math.round(h*0.75) + 0.5' },
          { action: 'move', x: 15, y: 'h - 0.5' },
          { action: 'line', x: 'w', y: 'h - 0.5' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/list_view.png',
            imageW: 28,
            imageH: 16,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodListRow',
    title: '单行列表',
    category: 'andriod_elements',
    attribute: { linkable: false },
    props: { w: 360, h: 40 },
    anchors: [],
    fillStyle: { type: 'solid', color: '252,252,252' },
    fontStyle: { size: 14, textAlign: 'left' },
    textBlock: [
      { position: { x: 15, y: 5, w: 265, h: 'h-10' }, text: 'Single line item' },
    ],
    path: [
      { lineStyle: { lineWidth: 0 }, actions: { ref: 'rectangle' } },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 1, lineColor: '200,200,200' },
        actions: [
          { action: 'move', x: 15, y: 'h - 0.5' },
          { action: 'line', x: 'w', y: 'h - 0.5' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/ios/thumb/list_row.png',
            imageW: 30,
            imageH: 10,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodListView3',
    title: '列表菜单',
    category: 'andriod_elements',
    attribute: { linkable: false },
    props: { w: 250, h: 180 },
    anchors: [],
    fillStyle: { type: 'solid', color: '243,243,243' },
    fontStyle: { size: 14, textAlign: 'left' },
    textBlock: [
      {
        position: { x: 15, y: '5', w: 'w - 25', h: 'h/4-10' },
        text: 'List Item',
      },
      {
        position: { x: 15, y: 'h/4+5', w: 'w - 25', h: 'h/4-10' },
        text: 'List Item',
      },
      {
        position: { x: 15, y: 'h/2+5', w: 'w - 25', h: 'h/4-10' },
        text: 'List Item',
      },
      {
        position: { x: 15, y: 'h*0.75+5', w: 'w - 25', h: 'h/4-10' },
        text: 'List Item',
      },
    ],
    path: [
      { lineStyle: { lineWidth: 0 }, actions: { ref: 'roundRectangle' } },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 1, lineColor: '220,220,220' },
        actions: [
          { action: 'move', x: 15, y: 'Math.round(h/4) + 0.5' },
          { action: 'line', x: 'w - 15', y: 'Math.round(h/4) + 0.5' },
          { action: 'move', x: 15, y: 'Math.round(h/2) + 0.5' },
          { action: 'line', x: 'w - 15', y: 'Math.round(h/2) + 0.5' },
          { action: 'move', x: 15, y: 'Math.round(h*0.75) + 0.5' },
          { action: 'line', x: 'w - 15', y: 'Math.round(h*0.75) + 0.5' },
          { action: 'move', x: 15, y: 'h - 0.5' },
          { action: 'line', x: 'w - 15', y: 'h - 0.5' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -5
      c += 5
      var a = -8
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/list.png',
            imageW: 30,
            imageH: 30,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodTag',
    title: '标签',
    category: 'andriod_elements',
    attribute: { linkable: false },
    props: { w: 65, h: 25 },
    anchors: [],
    fillStyle: { type: 'solid', color: '160,160,160' },
    fontStyle: { size: 13, textAlign: 'center', color: '255,255,255' },
    textBlock: [{ position: { x: 5, y: 5, w: 'w-10', h: 'h-10' }, text: 'tag' }],
    path: [{ lineStyle: { lineWidth: 0 }, actions: { ref: 'roundRectangle' } }],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/tag.png',
            imageW: 30,
            imageH: 10,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodTooltip',
    title: '提示',
    category: 'andriod_elements',
    attribute: { linkable: false },
    props: { w: 130, h: 60 },
    anchors: [],
    fillStyle: { type: 'solid', color: '204,204,255' },
    lineStyle: { lineWidth: 0 },
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: '8' },
          { action: 'quadraticCurve', x1: '0', y1: '0', x: '8', y: '0' },
          { action: 'line', x: 'w*0.4-14', y: '0' },
          { action: 'line', x: 'w*0.4-7', y: '-8' },
          { action: 'line', x: 'w*0.4', y: '0' },
          { action: 'line', x: 'w-8', y: '0' },
          { action: 'quadraticCurve', x1: 'w', y1: '0', x: 'w', y: '8' },
          { action: 'line', x: 'w', y: 'h-8' },
          { action: 'quadraticCurve', x1: 'w', y1: 'h', x: 'w-8', y: 'h' },
          { action: 'line', x: '8', y: 'h' },
          { action: 'quadraticCurve', x1: '0', y1: 'h', x: '0', y: 'h-8' },
          { action: 'close' },
        ],
      },
    ],
    drawIcon: function (a, b) {
      return [
        {
          lineStyle: { lineWidth: 1, lineColor: '150,150,150' },
          actions: [
            { action: 'move', x: 0.5, y: 0 },
            { action: 'line', x: a * 0.5 - 5, y: 0 },
            { action: 'line', x: a * 0.5 - 2.5, y: -4 },
            { action: 'line', x: a * 0.5, y: 0 },
            { action: 'line', x: Math.round(a) - 0.5, y: 0 },
            { action: 'line', x: Math.round(a) - 0.5, y: b },
            { action: 'line', x: 0.5, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodDialog',
    title: 'Dialog & Confirm',
    category: 'andriod_elements',
    attribute: { linkable: false },
    props: { w: 300, h: 180 },
    anchors: [],
    fillStyle: { type: 'solid', color: '243,243,243' },
    textBlock: [
      {
        position: { x: 15, y: 14, w: 'w-24', h: '30' },
        text: 'This is a Dialog',
        fontStyle: { textAlign: 'left', bold: true, size: 18, color: '60,60,60' },
      },
      {
        position: { x: 15, y: 45, w: 'w-30', h: 'h/2' },
        text: 'This is a Dialog, you can use it as a simple dialog, or a confirm window yet.',
        fontStyle: { textAlign: 'left', size: 15, color: '80,80,80' },
      },
      {
        position: { x: 'w-90', y: 'h-35', w: '80', h: '25' },
        text: 'Save',
        fontStyle: {
          textAlign: 'center',
          bold: true,
          size: 14,
          color: '0,150,136',
        },
      },
      {
        position: { x: 'w-150', y: 'h-35', w: '80', h: '25' },
        text: 'Cancel',
        fontStyle: {
          textAlign: 'center',
          bold: false,
          size: 14,
          color: '0,150,136',
        },
      },
    ],
    path: [{ lineStyle: { lineWidth: 0 }, actions: { ref: 'roundRectangle' } }],
    drawIcon: function (b, c) {
      var d = -5
      c += 5
      var a = -8
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/dialog.png',
            imageW: 30,
            imageH: 15,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodConfirm',
    title: 'Confirm',
    category: 'andriod_elements',
    attribute: { linkable: false },
    props: { w: 300, h: 100 },
    anchors: [],
    fillStyle: { type: 'solid', color: '243,243,243' },
    textBlock: [
      {
        position: { x: 15, y: 5, w: 'w-30', h: 'h/2' },
        text: 'Are you sure to delete this messages?',
        fontStyle: { textAlign: 'left', size: 15, color: '80,80,80' },
      },
      {
        position: { x: 'w-90', y: 'h-35', w: '80', h: '25' },
        text: 'Done',
        fontStyle: {
          textAlign: 'center',
          bold: false,
          size: 14,
          color: '0,150,136',
        },
      },
      {
        position: { x: 'w-150', y: 'h-35', w: '80', h: '25' },
        text: 'Cancel',
        fontStyle: {
          textAlign: 'center',
          bold: false,
          size: 14,
          color: '0,150,136',
        },
      },
    ],
    path: [{ lineStyle: { lineWidth: 0 }, actions: { ref: 'roundRectangle' } }],
    drawIcon: function (b, c) {
      var d = -5
      c += 5
      var a = -8
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/confirm.png',
            imageW: 30,
            imageH: 15,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodInput',
    title: '输入法',
    category: 'andriod_elements',
    attribute: { linkable: false },
    props: { w: 360, h: 223 },
    anchors: [],
    resizeDir: [],
    fillStyle: { type: 'none' },
    textBlock: [
      {
        position: { x: 100, y: 100, w: 80, h: 24 },
        text: '',
        fontStyle: { bold: false, size: 12, color: '0,0,0' },
      },
    ],
    path: [
      {
        fillStyle: { alpha: 0.6 },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod/input.jpg',
          imageW: 360,
          imageH: 223,
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (a, b) {
      var c = -8
      b += 8
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/input.png',
            imageW: 26,
            imageH: 20,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: 0, y: c },
            { action: 'line', x: a, y: c },
            { action: 'line', x: a, y: b },
            { action: 'line', x: 0, y: b },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodCon',
    title: '容器',
    category: 'andriod_elements',
    attribute: { linkable: false },
    props: { w: 360, h: 100 },
    lineStyle: { lineWidth: 0 },
    fillStyle: { type: 'solid', color: '255,255,255' },
    anchors: [],
    path: [{ actions: { ref: 'rectangle' } }],
    textBlock: [],
    drawIcon: function (b, c) {
      var a = 0.5
      var d = -6
      c = Math.round(c + 4) + 4.5
      b = Math.round(b) - 0.5
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod/thumb/container.png',
            imageW: 30,
            imageH: 15,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'andriod_controls',
    text: 'Android 表单',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'andriodButton1',
    title: 'Button',
    category: 'andriod_controls',
    attribute: { linkable: false },
    props: { w: 80, h: 35 },
    anchors: [],
    lineStyle: { lineWidth: 0 },
    fontStyle: { size: 13, color: '80,80,80', bold: false },
    fillStyle: { type: 'solid', color: '213,213,213' },
    textBlock: [{ position: { x: 10, y: 0, w: 'w-20', h: 'h' }, text: 'Button' }],
    path: [{ actions: { ref: 'roundRectangle' } }],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod_controls/thumb/button1.png',
            imageW: 30,
            imageH: 10,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodInput1',
    title: '输入框',
    category: 'andriod_controls',
    attribute: { linkable: false },
    props: { w: 180, h: 35 },
    anchors: [],
    lineStyle: { lineWidth: 0 },
    fontStyle: { size: 13, color: '80,80,80', bold: false, textAlign: 'left' },
    fillStyle: { type: 'solid', color: '233,233,233' },
    textBlock: [{ position: { x: 10, y: 0, w: 'w-20', h: 'h' }, text: '输入框' }],
    path: [{ actions: { ref: 'roundRectangle' } }],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod_controls/thumb/input.png',
            imageW: 30,
            imageH: 10,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodCheck',
    title: 'Checkbox',
    category: 'andriod_controls',
    attribute: { linkable: false },
    props: { w: 25, h: 25 },
    anchors: [],
    lineStyle: { lineWidth: 0 },
    fontStyle: { size: 13, color: '80,80,80', bold: false, textAlign: 'left' },
    resizeDir: [],
    textBlock: [
      { position: { x: 28, y: 0, w: 'w*2+180', h: 'h' }, text: 'Checkbox' },
    ],
    path: [
      {
        fillStyle: { alpha: 0 },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_controls/checkbox.png',
          display: 'original',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod_controls/thumb/checkbox.png',
            imageW: 30,
            imageH: 10,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodRadio',
    title: 'Radio Button',
    category: 'andriod_controls',
    attribute: { linkable: false },
    props: { w: 25, h: 25 },
    anchors: [],
    lineStyle: { lineWidth: 0 },
    fontStyle: { size: 13, color: '80,80,80', bold: false, textAlign: 'left' },
    resizeDir: [],
    textBlock: [
      { position: { x: 28, y: 0, w: 'w*2 + 180', h: 'h' }, text: 'Radio Button' },
    ],
    path: [
      {
        fillStyle: { alpha: 0 },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_controls/radio.png',
          display: 'original',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = -5
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod_controls/thumb/radio.png',
            imageW: 30,
            imageH: 10,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodSwitchOff',
    title: 'Switch Off',
    category: 'andriod_controls',
    attribute: { linkable: false },
    props: { w: 70, h: 40 },
    lineStyle: { lineWidth: 0 },
    anchors: [],
    resizeDir: [],
    textBlock: [],
    path: [
      {
        fillStyle: { alpha: 0 },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_controls/off.png',
          display: 'original',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod_controls/thumb/off.png',
            imageW: 30,
            imageH: 10,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodSwitchOnf',
    title: 'Switch On',
    category: 'andriod_controls',
    attribute: { linkable: false },
    props: { w: 70, h: 40 },
    lineStyle: { lineWidth: 0 },
    anchors: [],
    textBlock: [],
    resizeDir: [],
    path: [
      {
        fillStyle: { alpha: 0 },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_controls/on.png',
          display: 'original',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod_controls/thumb/on.png',
            imageW: 30,
            imageH: 10,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'andriodSlider',
    title: '滑块',
    category: 'andriod_controls',
    attribute: { linkable: false },
    props: { w: 200, h: 30 },
    anchors: [],
    textBlock: [],
    resizeDir: ['l', 'r'],
    path: [
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 4, lineColor: '0,150,136' },
        actions: [
          { action: 'move', x: 0, y: 'h/2' },
          { action: 'line', x: 'w*0.6', y: 'h/2' },
        ],
      },
      {
        fillStyle: { type: 'none' },
        lineStyle: { lineWidth: 4, lineColor: '203,203,203' },
        actions: [
          { action: 'move', x: 'w*0.6', y: 'h/2' },
          { action: 'line', x: 'w', y: 'h/2' },
        ],
      },
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_controls/slider_icon.png',
          imageX: 'w*0.6-13',
          imageY: 'h/2-13',
          imageW: 26,
          imageH: 26,
          display: 'static',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = -8
      c += 8
      var a = -2
      b += 2
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/images/designer/andriod_controls/thumb/slider.png',
            imageW: 25,
            imageH: 6,
            display: 'original',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'andriod_icons',
    text: 'Android图标',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'andriod_icons_alert1',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/alert1.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_alert2',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/alert2.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_alert3',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/alert3.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_alert4',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/alert4.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_0',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/0.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_1',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/1.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_2',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/2.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_3',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/3.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_4',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/4.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_5',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/5.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_6',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/6.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_7',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/7.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_8',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/8.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_9',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/9.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_10',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/10.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_11',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/11.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_12',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/12.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_13',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/13.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_14',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/14.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_15',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/15.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_16',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/16.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_17',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/17.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_18',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/18.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_19',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/19.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_20',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/20.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_21',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/21.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_22',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/22.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_23',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/23.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_24',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/24.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_25',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/25.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_26',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/26.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_27',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/27.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_28',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/28.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_29',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/29.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_30',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/30.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_31',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/31.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_32',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/32.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_33',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/33.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_34',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/34.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_35',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/35.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_36',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/36.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_37',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/37.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_38',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/38.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_39',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/39.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_40',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/40.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_41',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/41.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_42',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/42.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_43',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/43.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_44',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/44.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_45',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/45.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_46',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/46.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_47',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/47.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_48',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/48.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_49',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/49.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_50',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/50.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_51',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/51.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_52',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/52.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_53',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/53.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_54',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/54.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_55',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/55.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_56',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/56.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_57',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/57.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_58',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/58.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_59',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/59.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_60',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/60.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_61',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/61.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_62',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/62.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_63',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/63.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_64',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/64.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_65',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/65.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_66',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/66.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_67',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/67.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_68',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/68.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_69',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/69.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_70',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/70.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_71',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/71.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_72',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/72.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_73',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/73.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_74',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/74.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_75',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/75.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_76',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/76.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_77',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/77.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_78',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/78.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_79',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/79.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_80',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/80.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'andriod_icons_81',
    title: '',
    category: 'andriod_icons',
    attribute: { linkable: false },
    props: { w: 40, h: 40 },
    anchors: [],
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/images/designer/andriod_icons/svg/81.svg',
          imageW: '29',
          imageH: '29',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addCategory({
    name: 'org',
    text: 'ORG 组织结构图',
    dataAttributes: [
      { name: '序号', type: 'number', value: '', category: 'default' },
      { name: '名称', type: 'string', value: '', category: 'default' },
      { name: '所有者', type: 'string', value: '', category: 'default' },
      { name: '连接', type: 'link', value: '', category: 'default' },
      { name: '便笺', type: 'string', value: '', category: 'default' },
      { name: '成本', type: 'number', value: '', category: 'default' },
      { name: '时间', type: 'number', value: '', category: 'default' },
      { name: '部门', type: 'string', value: '', category: 'default' },
      { name: '输入', type: 'string', value: '', category: 'default' },
      { name: '输出', type: 'string', value: '', category: 'default' },
      { name: '风险', type: 'string', value: '', category: 'default' },
      { name: '备注', type: 'string', value: '', category: 'default' },
    ],
  })
  Schema.addShape({
    name: 'organization',
    title: '组织',
    category: 'org',
    props: { w: 120, h: 70 },
    lineStyle: { lineWidth: 2, lineColor: '220,87,18' },
    fillStyle: {
      type: 'gradient',
      gradientType: 'linear',
      beginColor: '245,236,186',
      endColor: '244,208,0',
      angle: Math.PI * 0.5,
    },
    textBlock: [{ position: { x: 'w*0.15', y: 10, w: 'w*0.85-10', h: 'h-20' } }],
    path: [
      {
        actions: [
          { action: 'move', x: '0', y: 'h*0.5' },
          {
            action: 'curve',
            x1: '0',
            y1: '-h/6',
            x2: 'w',
            y2: '-h/6',
            x: 'w',
            y: 'h*0.5',
          },
          {
            action: 'curve',
            x1: 'w',
            y1: 'h+h/6',
            x2: '0',
            y2: 'h+h/6',
            x: '0',
            y: 'h*0.5',
          },
          { action: 'move', x: 'w*0.15', y: 'h*0.13' },
          { action: 'line', x: 'w*0.15', y: 'h*0.87' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'role',
    title: '角色',
    category: 'org',
    props: { w: 120, h: 70 },
    lineStyle: { lineWidth: 2, lineColor: '220,87,18' },
    fillStyle: {
      type: 'gradient',
      gradientType: 'linear',
      beginColor: '245,236,186',
      endColor: '244,208,0',
      angle: Math.PI * 0.5,
    },
    textBlock: [{ position: { x: 'w/6', y: '0', w: 'w/6*5-10', h: 'h' } }],
    path: [
      { actions: { ref: 'rectangle' } },
      {
        actions: [
          { action: 'move', x: 'w/6', y: '0' },
          { action: 'line', x: 'w/6', y: 'h' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addShape({
    name: 'employee',
    title: '员工',
    category: 'org',
    props: { w: 120, h: 70 },
    lineStyle: { lineWidth: 2, lineColor: '220,87,18' },
    fillStyle: {
      type: 'gradient',
      gradientType: 'linear',
      beginColor: '245,236,186',
      endColor: '244,208,0',
      angle: Math.PI * 0.5,
    },
    path: [{ actions: { ref: 'rectangle' } }],
  })
  Schema.addCategory({ name: 'venn', text: '维恩图', dataAttributes: [] })
  Schema.addShape({
    name: 'greenGradientVennCircle',
    title: 'Green Gradient Venn',
    category: 'venn',
    props: { w: 200, h: 200 },
    lineStyle: { lineWidth: 0, lineColor: '0,255,0', lineStyle: 'none' },
    fillStyle: {
      type: 'gradient',
      gradientType: 'radial',
      beginColor: '255,255,255',
      endColor: '0,255,0',
      radius: 0.6,
      alpha: 0.35,
    },
    path: [{ actions: { ref: 'round' } }],
  })
  Schema.addShape({
    name: 'redGradientVennCircle',
    title: 'Red Gradient Venn',
    category: 'venn',
    props: { w: 200, h: 200 },
    lineStyle: { lineWidth: 0, lineColor: '255,0,0', lineStyle: 'none' },
    fillStyle: {
      type: 'gradient',
      gradientType: 'radial',
      beginColor: '255,255,255',
      endColor: '255,0,0',
      radius: 0.6,
      alpha: 0.35,
    },
    path: [{ actions: { ref: 'round' } }],
  })
  Schema.addShape({
    name: 'blueGradientVennCircle',
    title: 'Blue Gradient Venn',
    category: 'venn',
    props: { w: 200, h: 200 },
    lineStyle: { lineWidth: 0, lineColor: '0,0,255', lineStyle: 'none' },
    fillStyle: {
      type: 'gradient',
      gradientType: 'radial',
      beginColor: '255,255,255',
      endColor: '0,0,255',
      radius: 0.6,
      alpha: 0.35,
    },
    path: [{ actions: { ref: 'round' } }],
  })
  Schema.addShape({
    name: 'greenVenn',
    title: 'Green Venn',
    category: 'venn',
    props: { w: 200, h: 200 },
    lineStyle: { lineWidth: 0, lineColor: '160,191,124', lineStyle: 'none' },
    fillStyle: { color: '160,191,124', alpha: 0.5 },
    path: [{ actions: { ref: 'round' } }],
  })
  Schema.addShape({
    name: 'redVenn',
    title: 'Red Venn',
    category: 'venn',
    props: { w: 200, h: 200 },
    lineStyle: { lineWidth: 0, lineColor: '247,68,97', lineStyle: 'none' },
    fillStyle: { color: '247,68,97', alpha: 0.5 },
    path: [{ actions: { ref: 'round' } }],
  })
  Schema.addShape({
    name: 'blueVenn',
    title: 'Blue Venn',
    category: 'venn',
    props: { w: 200, h: 200 },
    lineStyle: { lineWidth: 0, lineColor: '36,118,192', lineStyle: 'none' },
    fillStyle: { color: '36,118,192', alpha: 0.5 },
    path: [{ actions: { ref: 'round' } }],
  })
  Schema.addShape({
    name: 'greenVennCircle',
    title: 'Green Venn Circle',
    category: 'venn',
    props: { w: 200, h: 200 },
    lineStyle: { lineWidth: 2, lineColor: '121,148,90' },
    fillStyle: { color: '160,191,124', alpha: 0.5 },
    path: [{ actions: { ref: 'round' } }],
  })
  Schema.addShape({
    name: 'redVennCircle',
    title: 'Red Venn Circle',
    category: 'venn',
    props: { w: 200, h: 200 },
    lineStyle: { lineWidth: 2, lineColor: '166,70,86' },
    fillStyle: { color: '247,68,97', alpha: 0.5 },
    path: [{ actions: { ref: 'round' } }],
  })
  Schema.addShape({
    name: 'blueVennCircle',
    title: 'Blue Venn Circle',
    category: 'venn',
    props: { w: 200, h: 200 },
    lineStyle: { lineWidth: 2, lineColor: '41,102,157' },
    fillStyle: { color: '36,118,192', alpha: 0.5 },
    path: [{ actions: { ref: 'round' } }],
  })
  Schema.addShape({
    name: 'blackVennCircle',
    title: 'Black Venn Circle',
    category: 'venn',
    props: { w: 200, h: 200 },
    lineStyle: { lineWidth: 2, lineColor: '48,50,51' },
    fillStyle: { type: 'none' },
    path: [{ actions: { ref: 'round' } }],
  })
  Schema.addCategory({ name: 'weizhu_bm', text: '魏朱商业模式' })
  Schema.addShape({
    name: 'company',
    title: '所研究企业',
    category: 'weizhu_bm',
    props: { w: 120, h: 40 },
    path: [{ actions: { ref: 'rectangle' } }],
  })
  Schema.addShape({
    name: 'external_refer',
    title: '外部利益相关者',
    category: 'weizhu_bm',
    props: { w: 70, h: 70 },
    path: [
      {
        fillStyle: { type: 'solid', color: 'r-35,g-35,b-35' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'external_refer_cg',
    title: '外部利益相关者（参股）',
    category: 'weizhu_bm',
    props: { w: 70, h: 70 },
    textBlock: [
      { position: { x: 0, y: 'h/2', w: 'w', h: 'h/2' }, text: '' },
      { position: { x: 'w/2', y: 0, w: 'w/2', h: 'h/2' }, text: '' },
    ],
    path: [
      {
        fillStyle: { type: 'solid', color: 'r-35,g-35,b-35' },
        actions: [
          { action: 'move', x: 'w/2', y: '0' },
          { action: 'line', x: 'w/2', y: 'h/2' },
          { action: 'line', x: 'w', y: 'h/2.1' },
          {
            action: 'curve',
            x1: 'w',
            y1: 'h+h/6',
            x2: '0',
            y2: 'h+h/6',
            x: '0',
            y: 'h*0.5',
          },
          { action: 'quadraticCurve', x1: '1', y1: '1', x: 'w/2', y: '0' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'solid', color: 'r,g,b' },
        actions: [
          { action: 'move', x: 'w/2', y: '0' },
          { action: 'line', x: 'w/2', y: 'h/2' },
          { action: 'line', x: 'w', y: 'h/2.1' },
          { action: 'quadraticCurve', x1: 'w-2', y1: '1', x: 'w/2', y: '0' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'external_refer_kg',
    title: '外部利益相关者（控股）',
    category: 'weizhu_bm',
    props: { w: 70, h: 70 },
    textBlock: [
      { position: { x: 0, y: 'h/2', w: 'w', h: 'h/2' }, text: '' },
      { position: { x: 'w/2', y: 0, w: 'w/2', h: 'h/2' }, text: '' },
    ],
    path: [
      {
        fillStyle: { type: 'solid', color: 'r-0,g-0,b-0' },
        actions: [
          { action: 'move', x: 'w/2', y: '0' },
          { action: 'line', x: 'w/2', y: 'h/2' },
          { action: 'line', x: 'w', y: 'h/2.1' },
          {
            action: 'curve',
            x1: 'w',
            y1: 'h+h/6',
            x2: '0',
            y2: 'h+h/6',
            x: '0',
            y: 'h*0.5',
          },
          { action: 'quadraticCurve', x1: '1', y1: '1', x: 'w/2', y: '0' },
          { action: 'close' },
        ],
      },
      {
        fillStyle: { type: 'solid', color: 'r-35,g-35,b-35' },
        actions: [
          { action: 'move', x: 'w/2', y: '0' },
          { action: 'line', x: 'w/2', y: 'h/2' },
          { action: 'line', x: 'w', y: 'h/2.1' },
          { action: 'quadraticCurve', x1: 'w-2', y1: '1', x: 'w/2', y: '0' },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0 },
        fillStyle: { type: 'none' },
        actions: { ref: 'round' },
      },
    ],
  })
  Schema.addShape({
    name: 'external_refer_zy',
    title: '外部利益相关者（直营）',
    category: 'weizhu_bm',
    props: { w: 70, h: 70 },
    path: [{ actions: { ref: 'round' } }],
  })
  Schema.addShape({
    name: 'company_jy',
    title: '企业间交易活动',
    category: 'weizhu_bm',
    props: { w: 70, h: 70 },
    path: [
      {
        fillStyle: { type: 'solid', color: 'r-35,g-35,b-35' },
        actions: [
          { action: 'move', x: 'w/2', y: '0' },
          { action: 'line', x: 'w', y: 'h/2' },
          { action: 'line', x: 'w/2', y: 'h' },
          { action: 'line', x: '0', y: 'h/2' },
          { action: 'line', x: 'w/2', y: '0' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'company_nbly',
    title: '企业内部利益相关者',
    category: 'weizhu_bm',
    props: { w: 150, h: 210 },
    textBlock: [
      { position: { x: 0, y: 0, w: 'w', h: 30 } },
      { position: { x: 0, y: 30, w: 'w', h: 'h-60' } },
      { position: { x: 0, y: 'h-30', w: 'w/2', h: '30' } },
      { position: { x: 'w-w/2', y: 'h-30', w: 'w/1.8', h: '30' } },
    ],
    path: [
      { actions: { ref: 'rectangle' } },
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: '0', y: '30' },
          { action: 'line', x: 'w', y: '30' },
          { action: 'move', x: '0', y: 'h-30' },
          { action: 'line', x: 'w/2', y: 'h-30' },
          { action: 'line', x: 'w/2', y: 'h' },
          { action: 'move', x: 'w', y: 'h-30' },
          { action: 'line', x: 'w/1.8', y: 'h-30' },
          { action: 'line', x: 'w/1.8', y: 'h' },
          { action: 'move', x: 'w/1.8', y: 'h' },
          { action: 'close' },
        ],
      },
      { fillStyle: { type: 'none' }, actions: { ref: 'rectangle' } },
    ],
    drawIcon: function (a, b) {
      return [
        {
          actions: [
            { action: 'move', x: 0, y: 0 },
            { action: 'line', x: 0, y: b },
            { action: 'line', x: a, y: b },
            { action: 'line', x: a, y: 0 },
            { action: 'line', x: 0, y: 0 },
            { action: 'move', x: 0, y: 5 },
            { action: 'line', x: a, y: 5 },
            { action: 'move', x: 0, y: b - 5 },
            { action: 'line', x: a, y: b - 5 },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'company_jihe',
    title: '同类利益相关者集合',
    category: 'weizhu_bm',
    props: { w: 20, h: 100 },
    textBlock: [],
    path: [
      {
        fillStyle: { type: 'none' },
        actions: [
          { action: 'move', x: 'w', y: '0' },
          { action: 'line', x: '0', y: '0' },
          { action: 'line', x: '0', y: 'h/2' },
          { action: 'line', x: 'w', y: 'h/2' },
          { action: 'move', x: '0', y: 'h/2' },
          { action: 'line', x: '0', y: 'h' },
          { action: 'line', x: 'w', y: 'h' },
          { action: 'move', x: 'w', y: 'h' },
          { action: 'close' },
        ],
      },
    ],
  })
  Schema.addShape({
    name: 'company_tlx',
    title: '同类型多个实体',
    category: 'weizhu_bm',
    props: { w: 30, h: 18 },
    anchors: [],
    textBlock: [],
    resizeDir: [],
    path: [
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'solid', color: 'r-100,g-100,b-100' },
        actions: [
          { action: 'move', x: '3', y: '6' },
          {
            action: 'curve',
            x1: '4.5',
            y1: '6',
            x2: '6',
            y2: '7.5',
            x: '6',
            y: '9',
          },
          {
            action: 'curve',
            x1: '6',
            y1: '10.5',
            x2: '4.5',
            y2: '12',
            x: '3',
            y: '12',
          },
          {
            action: 'curve',
            x1: '1.5',
            y1: '12',
            x2: '0',
            y2: '10.5',
            x: '0',
            y: '9',
          },
          {
            action: 'curve',
            x1: '0',
            y1: '7.5',
            x2: '1.5',
            y2: '6',
            x: '3',
            y: '6',
          },
          { action: 'move', x: '10', y: '6' },
          {
            action: 'curve',
            x1: '14.5',
            y1: '6',
            x2: '16',
            y2: '7.5',
            x: '16',
            y: '9',
          },
          {
            action: 'curve',
            x1: '16',
            y1: '10.5',
            x2: '14.5',
            y2: '12',
            x: '13',
            y: '12',
          },
          {
            action: 'curve',
            x1: '11.5',
            y1: '12',
            x2: '10',
            y2: '10.5',
            x: '10',
            y: '9',
          },
          {
            action: 'curve',
            x1: '10',
            y1: '7.5',
            x2: '11.5',
            y2: '6',
            x: '13',
            y: '6',
          },
          { action: 'move', x: '20', y: '6' },
          {
            action: 'curve',
            x1: '24.5',
            y1: '6',
            x2: '26',
            y2: '7.5',
            x: '26',
            y: '9',
          },
          {
            action: 'curve',
            x1: '26',
            y1: '10.5',
            x2: '24.5',
            y2: '12',
            x: '23',
            y: '12',
          },
          {
            action: 'curve',
            x1: '21.5',
            y1: '12',
            x2: '20',
            y2: '10.5',
            x: '20',
            y: '9',
          },
          {
            action: 'curve',
            x1: '20',
            y1: '7.5',
            x2: '21.5',
            y2: '6',
            x: '23',
            y: '6',
          },
          { action: 'close' },
        ],
      },
      {
        lineStyle: { lineWidth: 0, lineStyle: 'solid' },
        fillStyle: { type: 'none' },
        actions: { ref: 'rectangle' },
      },
    ],
  })
  Schema.addCategory({ name: 'network', text: 'Network', dataAttributes: [] })
  Schema.addShape({
    name: 'access point',
    title: 'Access Point',
    category: 'network',
    props: { w: 80, h: 58 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/accessPoint.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/accessPoint.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'antenna',
    title: 'Antenna',
    category: 'network',
    props: { w: 13, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/antenna.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/antenna.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'adsl',
    title: 'ADSL',
    category: 'network',
    props: { w: 80, h: 24 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/adsl.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/adsl.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'building',
    title: 'Building',
    category: 'network',
    props: { w: 24, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/building.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/building.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'bus',
    title: 'Bus',
    category: 'network',
    props: { w: 200, h: 20 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/bus.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/bus.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'network cloud',
    title: 'Network Cloud',
    category: 'network',
    props: { w: 76, h: 48 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/cloud.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/cloud.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'comm',
    title: 'Comm',
    category: 'network',
    props: { w: 45, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/comm.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/comm.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'dish antenna',
    title: 'Dish Antenna',
    category: 'network',
    props: { w: 71, h: 79 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/dishAntenna.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/dishAntenna.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ethernet',
    title: 'Ethernet',
    category: 'network',
    props: { w: 75, h: 16 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/ethernet.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/ethernet.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'firewall',
    title: 'Firewall',
    category: 'network',
    props: { w: 75, h: 53 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/firewall.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/firewall.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'globe',
    title: 'Globe',
    category: 'network',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/globe.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/globe.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'hub',
    title: 'Hub',
    category: 'network',
    props: { w: 82.5, h: 15 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/hub.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/hub.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ip phone',
    title: 'IP Phone',
    category: 'network',
    props: { w: 75, h: 65 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/ipPhone.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/ipPhone.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iphone',
    title: 'iPhone',
    category: 'network',
    props: { w: 40, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/iphone.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/iphone.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'isp',
    title: 'ISP',
    category: 'network',
    props: { w: 67, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/isp.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/isp.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mac',
    title: 'Mac',
    category: 'network',
    props: { w: 76, h: 69 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/mac.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/mac.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'macbook',
    title: 'MacBook',
    category: 'network',
    props: { w: 76, h: 43 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/macbook.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/macbook.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'monitor',
    title: 'Monitor',
    category: 'network',
    props: { w: 78, h: 65 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/monitor.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/monitor.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'notebook',
    title: 'Notebook',
    category: 'network',
    props: { w: 79, h: 48 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/notebook.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/notebook.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'office',
    title: 'Office',
    category: 'network',
    props: { w: 78, h: 68 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/office.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/office.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'pc',
    title: 'PC',
    category: 'network',
    props: { w: 77, h: 65 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/pc.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/pc.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'phone',
    title: 'Phone',
    category: 'network',
    props: { w: 57, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/phone.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/phone.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'printer',
    title: 'Printer',
    category: 'network',
    props: { w: 77, h: 54 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/printer.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/printer.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'router',
    title: 'Router',
    category: 'network',
    props: { w: 77, h: 20 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/router.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/router.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'satellite',
    title: 'Satellite',
    category: 'network',
    props: { w: 80, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/satellite.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/satellite.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'scanner',
    title: 'Scanner',
    category: 'network',
    props: { w: 79, h: 57 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/scanner.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/scanner.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'server',
    title: 'Server',
    category: 'network',
    props: { w: 36, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/server.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/server.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'signal',
    title: 'Signal',
    category: 'network',
    props: { w: 47, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/signal.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/signal.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'tab',
    title: 'Tab',
    category: 'network',
    props: { w: 57, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network/tab.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network/tab.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'ali_app_service',
    text: '应用服务',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'CAS',
    title: '移动加速 CAS',
    category: 'ali_app_service',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/ApplicationServices/CAS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/ApplicationServices/CAS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'MAS',
    title: '移动数据分析 MAS',
    category: 'ali_app_service',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/ApplicationServices/MAS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/ApplicationServices/MAS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'MTS',
    title: '多媒体转码服务 MTS',
    category: 'ali_app_service',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/ApplicationServices/MTS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/ApplicationServices/MTS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'OpenSearch',
    title: '开放搜索服务 OpenSearch',
    category: 'ali_app_service',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/ApplicationServices/OpenSearch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/ApplicationServices/OpenSearch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'PTS',
    title: '性能测试服务 PTS',
    category: 'ali_app_service',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/ApplicationServices/PTS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/ApplicationServices/PTS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'SLS',
    title: '简单日志服务 SLS',
    category: 'ali_app_service',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/ApplicationServices/SLS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/ApplicationServices/SLS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({ name: 'ali_database', text: '数据库', dataAttributes: [] })
  Schema.addShape({
    name: 'ADS',
    title: '分析型数据库ADS',
    category: 'ali_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Database/ADS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Database/ADS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'datamanagement',
    title: '数据管理datamanagement',
    category: 'ali_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/Database/datamanagement.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/Database/datamanagement.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'DTS',
    title: '数据传输服务 DTS',
    category: 'ali_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Database/DTS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Database/DTS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'KVStore',
    title: '键值存储 KVStore',
    category: 'ali_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Database/KVStore.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Database/KVStore.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mongodb',
    title: 'mongodb',
    category: 'ali_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Database/mongodb.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Database/mongodb.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'OCS',
    title: '开放缓存服务 OCS',
    category: 'ali_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Database/OCS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Database/OCS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'OTS',
    title: '开放结构化数据服务 OTS',
    category: 'ali_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Database/OTS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Database/OTS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'RDS',
    title: '云数据库 RDS',
    category: 'ali_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Database/RDS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Database/RDS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'ali_devel_resource',
    text: '开发者资源',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'API',
    title: '阿里云API',
    category: 'ali_devel_resource',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/DeveloperResources/API.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/DeveloperResources/API.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'CLI',
    title: '云推送 CLI',
    category: 'ali_devel_resource',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/DeveloperResources/CLI.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/DeveloperResources/CLI.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'Plugin Eclipse',
    title: '插件 Eclipse',
    category: 'ali_devel_resource',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/DeveloperResources/PluginEclipse.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/DeveloperResources/PluginEclipse.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'Plugin Visual Studio',
    title: '插件 Visual Studio',
    category: 'ali_devel_resource',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/DeveloperResources/PluginVisual.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/DeveloperResources/PluginVisual.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'ali_domain_website',
    text: '域名与网站',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'ACM',
    title: '云邮箱 ACM',
    category: 'ali_domain_website',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/DomainandWebsite/ACM.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/DomainandWebsite/ACM.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'AEE',
    title: '企业建站',
    category: 'ali_domain_website',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/DomainandWebsite/AEE.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/DomainandWebsite/AEE.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'CVH',
    title: '云虚拟主机',
    category: 'ali_domain_website',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/DomainandWebsite/CVH.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/DomainandWebsite/CVH.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'DAW',
    title: '域名与网站',
    category: 'ali_domain_website',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/DomainandWebsite/DAW.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/DomainandWebsite/DAW.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'DNS',
    title: '云解析 DNS',
    category: 'ali_domain_website',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/DomainandWebsite/DNS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/DomainandWebsite/DNS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'FWH',
    title: '弹性WEB托管',
    category: 'ali_domain_website',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/DomainandWebsite/FWH.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/DomainandWebsite/FWH.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'Website',
    title: '域名',
    category: 'ali_domain_website',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/DomainandWebsite/Website.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/DomainandWebsite/Website.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'ali_elastic_calc',
    text: '弹性计算',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'ACE',
    title: '云引擎 ACE',
    category: 'ali_elastic_calc',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/ElasticCalculation/ACE.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/ElasticCalculation/ACE.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ECS',
    title: '云服务器 ECS',
    category: 'ali_elastic_calc',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/ElasticCalculation/ECS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/ElasticCalculation/ECS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ESS',
    title: '弹性伸缩服务 ESS',
    category: 'ali_elastic_calc',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/ElasticCalculation/ESS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/ElasticCalculation/ESS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ROS',
    title: '资源编排ROS',
    category: 'ali_elastic_calc',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/ElasticCalculation/ROS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/ElasticCalculation/ROS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'ali_industry_cloud',
    text: '行业云',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'AFC',
    title: '金融云 AFC',
    category: 'ali_industry_cloud',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/IndustryCloud/AFC.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/IndustryCloud/AFC.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'AGC',
    title: '政务云 AGC',
    category: 'ali_industry_cloud',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/IndustryCloud/AGC.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/IndustryCloud/AGC.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'AMC',
    title: '医疗云 AMC',
    category: 'ali_industry_cloud',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/IndustryCloud/AMC.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/IndustryCloud/AMC.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ARC',
    title: '渲染云 ARC',
    category: 'ali_industry_cloud',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/IndustryCloud/ARC.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/IndustryCloud/ARC.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ASC',
    title: '安全云 ASC',
    category: 'ali_industry_cloud',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/IndustryCloud/ASC.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/IndustryCloud/ASC.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'AWC',
    title: '移动云 AWC',
    category: 'ali_industry_cloud',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/IndustryCloud/AWC.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/IndustryCloud/AWC.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'GAME',
    title: '游戏云 GAME',
    category: 'ali_industry_cloud',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/IndustryCloud/GAME.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/IndustryCloud/GAME.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'IOT',
    title: '物联网云 IOT',
    category: 'ali_industry_cloud',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/IndustryCloud/IOT.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/IndustryCloud/IOT.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'MULTIMEDIA',
    title: '多媒体',
    category: 'ali_industry_cloud',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/IndustryCloud/MULTIMEDIA.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/IndustryCloud/MULTIMEDIA.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'O2O',
    title: 'O2O',
    category: 'ali_industry_cloud',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/IndustryCloud/O2O.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/IndustryCloud/O2O.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'STORAGE',
    title: '云存储 STORAGE',
    category: 'ali_industry_cloud',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/IndustryCloud/STORAGE.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/IndustryCloud/STORAGE.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'WS',
    title: '网站 WS',
    category: 'ali_industry_cloud',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/IndustryCloud/WS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/IndustryCloud/WS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'ali_internet_midd',
    text: '互联网中间件',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'DRDS',
    title: '分布式关系型数据库服务 DRDS',
    category: 'ali_internet_midd',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/InternetMiddleware/DRDS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/InternetMiddleware/DRDS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'EDAS',
    title: '企业级分布式应用服务 EDAS',
    category: 'ali_internet_midd',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/InternetMiddleware/EDAS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/InternetMiddleware/EDAS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ONS',
    title: '开放消息服务 ONS',
    category: 'ali_internet_midd',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/InternetMiddleware/ONS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/InternetMiddleware/ONS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'ali_large_scale_calc',
    text: '大规模计算',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'BCS',
    title: '批量计算服务 BCS',
    category: 'ali_large_scale_calc',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/LargeScaleCalculation/BCS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/LargeScaleCalculation/BCS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'CDP',
    title: '数据集成 CDP',
    category: 'ali_large_scale_calc',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/LargeScaleCalculation/CDP.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/LargeScaleCalculation/CDP.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'DPC',
    title: '采云间 DPC',
    category: 'ali_large_scale_calc',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/LargeScaleCalculation/DPC.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/LargeScaleCalculation/DPC.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ODPS',
    title: '开放数据处理服务 ODPS',
    category: 'ali_large_scale_calc',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/LargeScaleCalculation/ODPS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/LargeScaleCalculation/ODPS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'ali_manage_monitor',
    text: '管理与监控',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'CloudMonitoring',
    title: '云监控',
    category: 'ali_manage_monitor',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/ManagementandMonitoring/CloudMonitoring.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/ManagementandMonitoring/CloudMonitoring.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'RAM',
    title: '资源访问管理服务 RAM',
    category: 'ali_manage_monitor',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/ManagementandMonitoring/RAM.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/ManagementandMonitoring/RAM.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'ali_mobile_service',
    text: '移动服务',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'CPS',
    title: '云推动 CPS',
    category: 'ali_mobile_service',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/MobileServices/CPS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/MobileServices/CPS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({ name: 'ali_network', text: '网络', dataAttributes: [] })
  Schema.addShape({
    name: 'havip',
    title: 'havip',
    category: 'ali_network',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Network/havip.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Network/havip.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'SLB',
    title: '负载均衡 SLB',
    category: 'ali_network',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Network/SLB.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Network/SLB.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'HSA',
    title: '高速通道 HSA',
    category: 'ali_network',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Network/HSA.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Network/HSA.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ACS_ali',
    title: '容器服务 ACS',
    category: 'ali_network',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Network/ACS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Network/ACS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'VPC',
    title: '专有网络 VPC',
    category: 'ali_network',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Network/VPC.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Network/VPC.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'ali_other_products',
    text: '其它产品',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'ResilientNetworkIP',
    title: '弹性网络IP',
    category: 'ali_other_products',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/OtherProducts/ResilientNetworkIP.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/OtherProducts/ResilientNetworkIP.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'Tools Image',
    title: '工具与镜像 Tools Image',
    category: 'ali_other_products',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aliyun/OtherProducts/ToolsImage.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/OtherProducts/ToolsImage.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'SAC',
    title: '可用性中心 SAC',
    category: 'ali_other_products',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/OtherProducts/SAC.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/OtherProducts/SAC.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'DPA',
    title: '无线开发平台 DPA',
    category: 'ali_other_products',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/OtherProducts/DPA.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/OtherProducts/DPA.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'YSF',
    title: '御膳房 YSF',
    category: 'ali_other_products',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/OtherProducts/YSF.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/OtherProducts/YSF.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'ali_security',
    text: '云盾（安全）',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'DDOS Basic',
    title: 'DDOS防护 DDOS Basic',
    category: 'ali_security',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Security/DDOSBasic.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/Security/DDOSBasic.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'DDOS IP',
    title: 'DDOS高防IP',
    category: 'ali_security',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Security/DDOSIP.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Security/DDOSIP.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ATS',
    title: 'DDoS专家服务 ATS',
    category: 'ali_security',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Security/ATS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Security/ATS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'MSS',
    title: '安骑士云拖管服务 MSS',
    category: 'ali_security',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Security/MSS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Security/MSS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ESN',
    title: '弹性安全网络 ESN',
    category: 'ali_security',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Security/ESN.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Security/ESN.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'MSS2',
    title: '服务器安全托管 MSS',
    category: 'ali_security',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Security/MSS2.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Security/MSS2.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'AGW',
    title: '绿网',
    category: 'ali_security',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Security/AGW.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Security/AGW.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'HSM',
    title: '密码机 HSM',
    category: 'ali_security',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Security/HSM.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Security/HSM.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'SCAN',
    title: '弱点分析 SCAN',
    category: 'ali_security',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Security/SCAN.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Security/SCAN.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'APS',
    title: '渗透测试服务 APS',
    category: 'ali_security',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Security/APS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Security/APS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'SAS',
    title: '态势感知 SAS',
    category: 'ali_security',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Security/SAS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Security/SAS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'WAF',
    title: '应用防火墙 WAF',
    category: 'ali_security',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Security/WAF.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Security/WAF.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'AYD',
    title: '云盾',
    category: 'ali_security',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Security/AYD.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Security/AYD.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'YPP',
    title: '云盾先知计划',
    category: 'ali_security',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/Security/YPP.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aliyun/Security/YPP.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'ali_storage_cdn',
    text: '存储与CDN',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'OSS',
    title: '开放存储服务 OSS',
    category: 'ali_storage_cdn',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/StorageandCDN/OSS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/StorageandCDN/OSS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'OAS',
    title: '开放归档服务 OAS',
    category: 'ali_storage_cdn',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/StorageandCDN/OAS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/StorageandCDN/OAS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'CDN',
    title: '内容分发网络 CDN',
    category: 'ali_storage_cdn',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/StorageandCDN/CDN.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/StorageandCDN/CDN.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'MNS',
    title: '消息对列服务 MNS',
    category: 'ali_storage_cdn',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aliyun/StorageandCDN/MNS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aliyun/StorageandCDN/MNS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'aws2019_groups',
    text: 'AWS Groups',
    dataAttributes: [],
  })
  AWS2019RenderGroups(
    'aws2019_groups_cloud',
    'aws2019_groups',
    'AWS Cloud',
    '/assets/images/designer/network_aws2019/groups/AWS-Cloud-alt.svg',
    '/assets/images/designer/network_aws2019/groups/AWS-Cloud-alt_icon.svg'
  )
  AWS2019RenderGroups(
    'aws2019_groups_cloud1',
    'aws2019_groups',
    'AWS Cloud',
    '/assets/images/designer/network_aws2019/groups/AWS-Cloud.svg',
    '/assets/images/designer/network_aws2019/groups/AWS-Cloud_icon.svg'
  )
  AWS2019RenderGroups(
    'aws2019_groups_region',
    'aws2019_groups',
    'Region',
    '/assets/images/designer/network_aws2019/groups/Region.svg',
    '/assets/images/designer/network_aws2019/groups/Region_icon.svg'
  )
  AWS2019RenderGroups(
    'aws2019_groups_vpc',
    'aws2019_groups',
    'Virtual Private Cloud',
    '/assets/images/designer/network_aws2019/groups/Virtual-private-cloud-VPC.svg',
    '/assets/images/designer/network_aws2019/groups/Virtual-private-cloud-VPC_icon.svg'
  )
  AWS2019RenderGroups(
    'aws2019_groups_private',
    'aws2019_groups',
    'Private subnet',
    '/assets/images/designer/network_aws2019/groups/VPC-subnet-private.svg',
    '/assets/images/designer/network_aws2019/groups/VPC-subnet-private_icon.svg',
    { style: 'solid', color: '230, 242, 248' },
    { lineWidth: 0 }
  )
  AWS2019RenderGroups(
    'aws2019_groups_public',
    'aws2019_groups',
    'Public Subnet',
    '/assets/images/designer/network_aws2019/groups/VPC-subnet-public.svg',
    '/assets/images/designer/network_aws2019/groups/VPC-subnet-public_icon.svg',
    { style: 'solid', color: '233, 243, 230' },
    { lineWidth: 0 }
  )
  AWS2019RenderGroups(
    'aws2019_groups_server',
    'aws2019_groups',
    'Server contents',
    '/assets/images/designer/network_aws2019/groups/Server-contents.svg',
    '/assets/images/designer/network_aws2019/groups/Server-contents_icon.svg'
  )
  AWS2019RenderGroups(
    'aws2019_groups_datacenter',
    'aws2019_groups',
    'Corporate data center',
    '/assets/images/designer/network_aws2019/groups/Corporate-data-center.svg',
    '/assets/images/designer/network_aws2019/groups/Corporate-data-center_icon.svg'
  )
  AWS2019RenderGroups(
    'aws2019_groups_ebc',
    'aws2019_groups',
    'Elastic Beanstalk container',
    '/assets/images/designer/network_aws2019/groups/Elastic-Beanstalk-container.svg',
    '/assets/images/designer/network_aws2019/groups/Elastic-Beanstalk-container_icon.svg',
    null,
    { lineColor: '216, 102, 19', lineWidth: 1 }
  )
  AWS2019RenderGroups(
    'aws2019_groups_eic',
    'aws2019_groups',
    'EC2 instance contents',
    '/assets/images/designer/network_aws2019/groups/EC2-instance-container.svg',
    '/assets/images/designer/network_aws2019/groups/EC2-instance-container_icon.svg',
    null,
    { lineColor: '216, 102, 19', lineWidth: 1 }
  )
  AWS2019RenderGroups(
    'aws2019_groups_sf',
    'aws2019_groups',
    'Spot Fleet',
    '/assets/images/designer/network_aws2019/groups/Spot-fleet.svg',
    '/assets/images/designer/network_aws2019/groups/Spot-fleet_icon.svg',
    null,
    { lineColor: '216, 102, 19', lineWidth: 1 }
  )
  AWS2019RenderGroups(
    'aws2019_groups_sfw',
    'aws2019_groups',
    'AWS Step Functions workflow',
    '/assets/images/designer/network_aws2019/groups/AWS-Step-Function.svg',
    '/assets/images/designer/network_aws2019/groups/AWS-Step-Function_icon.svg',
    null,
    { lineColor: '205, 34, 100', lineWidth: 1 }
  )
  AWS2019RenderGroupsNormal(
    'aws2019_groups_az',
    'aws2019_groups',
    'Availability Zone',
    null,
    { lineStyle: 'dashed', lineColor: '20,126,186', lineWidth: 1 },
    '20,126,186'
  )
  AWS2019RenderGroupsNormal(
    'aws2019_groups_sg',
    'aws2019_groups',
    'Security group',
    null,
    { lineColor: '221, 53, 34', lineWidth: 1 },
    '221, 53, 34'
  )
  AWS2019RenderGroupsNormal(
    'aws2019_groups_gg',
    'aws2019_groups',
    'Generic group',
    null,
    { lineStyle: 'dashed', lineColor: '90, 108, 134', lineWidth: 1 },
    '90, 108, 134'
  )
  AWS2019RenderGroupsNormal(
    'aws2019_groups_gg1',
    'aws2019_groups',
    'Generic group',
    { type: 'solid', color: '239, 240, 243' },
    { lineWidth: 0 },
    '35, 35, 35'
  )
  Schema.addCategory({
    name: 'aws2019_general',
    text: 'AWS General',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'aws2019-marketplace',
    title: 'AWS-Marketplace',
    category: 'aws2019_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [
      {
        position: { x: '-20', y: 'h', w: 'w+40', h: '30' },
        text: 'AWS-Marketplace',
      },
    ],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws2019/general/AWS-Marketplace.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws2019/general/AWS-Marketplace.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws2019-client',
    title: 'AWS-Client',
    category: 'aws2019_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [
      { position: { x: '-20', y: 'h', w: 'w+40', h: '30' }, text: 'AWS-Client' },
    ],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws2019/general/Client_light-bg.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws2019/general/Client_light-bg.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws2019-datacenter',
    title: 'AWS-DataCenter',
    category: 'aws2019_general',
    props: { w: 52, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [
      { position: { x: '-20', y: 'h', w: 'w+40', h: '30' }, text: 'Data Center' },
    ],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws2019/general/Data_center.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws2019/general/Data_center.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws2019-disk',
    title: 'AWS General Disk',
    category: 'aws2019_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [
      {
        position: { x: '-20', y: 'h', w: 'w+40', h: '30' },
        text: 'AWS General Disk',
      },
    ],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws2019/general/Disk_light-bg.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws2019/general/Disk_light-bg.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws2019-forums',
    title: 'AWS General Forums',
    category: 'aws2019_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [
      {
        position: { x: '-20', y: 'h', w: 'w+40', h: '30' },
        text: 'AWS General Disk',
      },
    ],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws2019/general/Forums_light-bg.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws2019/general/Forums_light-bg.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws2019-database',
    title: 'AWS General Database',
    category: 'aws2019_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [
      {
        position: { x: '-20', y: 'h', w: 'w+40', h: '30' },
        text: 'AWS General Database',
      },
    ],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws2019/general/Generic-database_light-bg.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws2019/general/Generic-database_light-bg.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws2019-internet1',
    title: 'AWS General Internet',
    category: 'aws2019_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [
      {
        position: { x: '-20', y: 'h', w: 'w+40', h: '30' },
        text: 'AWS General Internet Alt 1',
      },
    ],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws2019/general/Internet-alt1_light-bg.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws2019/general/Internet-alt1_light-bg.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws2019-internet2',
    title: 'AWS General Internet',
    category: 'aws2019_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [
      {
        position: { x: '-20', y: 'h', w: 'w+40', h: '30' },
        text: 'AWS General Internet Alt 2',
      },
    ],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws2019/general/Internet-alt2_light-bg.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws2019/general/Internet-alt2_light-bg.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws2019-internet-gateway',
    title: 'AWS General Internet Gateway',
    category: 'aws2019_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [
      {
        position: { x: '-20', y: 'h', w: 'w+40', h: '30' },
        text: 'AWS General Internet Gateway',
      },
    ],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws2019/general/Internet-gateway_light-bg.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws2019/general/Internet-gateway_light-bg.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws2019-mobile',
    title: 'AWS General Mobile Client',
    category: 'aws2019_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [
      {
        position: { x: '-20', y: 'h', w: 'w+40', h: '30' },
        text: 'AWS General Mobile Client',
      },
    ],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws2019/general/Mobile-client_light-bg.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws2019/general/Mobile-client_light-bg.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws2019-multimedia',
    title: 'AWS General Multimedia',
    category: 'aws2019_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [
      {
        position: { x: '-20', y: 'h', w: 'w+40', h: '30' },
        text: 'AWS General Multimedia',
      },
    ],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws2019/general/Multimedia_light-bg.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws2019/general/Multimedia_light-bg.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws2019-office',
    title: 'AWS General Office Building',
    category: 'aws2019_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [
      {
        position: { x: '-20', y: 'h', w: 'w+40', h: '30' },
        text: 'AWS General Office Building',
      },
    ],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws2019/general/Office-building.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws2019/general/Office-building.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws2019-token',
    title: 'AWS General SAML Token',
    category: 'aws2019_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [
      {
        position: { x: '-20', y: 'h', w: 'w+40', h: '30' },
        text: 'AWS General SAML Token',
      },
    ],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws2019/general/SAML-token.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws2019/general/SAML-token.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws2019-sdk',
    title: 'SDK',
    category: 'aws2019_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [
      { position: { x: '-20', y: 'h', w: 'w+40', h: '30' }, text: 'SDK' },
    ],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws2019/general/SDK_light-bg.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws2019/general/SDK_light-bg.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws2019-ssl',
    title: 'AWS General SSL Padlock',
    category: 'aws2019_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [
      {
        position: { x: '-20', y: 'h', w: 'w+40', h: '30' },
        text: 'AWS General SSL Padlock',
      },
    ],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws2019/general/SSL-padlock_light-bg.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws2019/general/SSL-padlock_light-bg.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws2019-tape',
    title: 'AWS General Tape Storage',
    category: 'aws2019_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [
      {
        position: { x: '-20', y: 'h', w: 'w+40', h: '30' },
        text: 'AWS General Tape Storage',
      },
    ],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws2019/general/Tape-storage.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws2019/general/Tape-storage.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws2019-toolkit',
    title: 'Toolkit',
    category: 'aws2019_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [
      { position: { x: '-20', y: 'h', w: 'w+40', h: '30' }, text: 'Toolkit' },
    ],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws2019/general/Toolkit_light-bg.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws2019/general/Toolkit_light-bg.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws2019-traditional',
    title: 'AWS General Traditional Server',
    category: 'aws2019_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [
      {
        position: { x: '-20', y: 'h', w: 'w+40', h: '30' },
        text: 'AWS General Traditional Server',
      },
    ],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws2019/general/Traditional-server_light-bg.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws2019/general/Traditional-server_light-bg.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws2019-user',
    title: 'AWS General User',
    category: 'aws2019_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [
      {
        position: { x: '-20', y: 'h', w: 'w+40', h: '30' },
        text: 'AWS General User',
      },
    ],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws2019/general/User_light-bg.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws2019/general/User_light-bg.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws2019-users',
    title: 'AWS General Users',
    category: 'aws2019_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [
      {
        position: { x: '-20', y: 'h', w: 'w+40', h: '30' },
        text: 'AWS General Users',
      },
    ],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws2019/general/Users_light-bg.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws2019/general/Users_light-bg.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'aws2019_compute',
    text: 'AWS Compute',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_compute_ec2',
    'aws2019_compute',
    'Amazon EC2',
    '/assets/images/designer/network_aws2019/compute/Amazon-EC2.svg'
  )
  AWS2019Render(
    'aws2019_compute_scaling',
    'aws2019_compute',
    'Auto Scaling',
    '/assets/images/designer/network_aws2019/compute/Amazon-EC2-Auto-Scaling.svg'
  )
  AWS2019Render(
    'aws2019_compute_registry',
    'aws2019_compute',
    'Container Registry',
    '/assets/images/designer/network_aws2019/compute/Amazon-EC2-Container-Registry.svg'
  )
  AWS2019Render(
    'aws2019_compute_ecs',
    'aws2019_compute',
    'Elastic Container Service',
    '/assets/images/designer/network_aws2019/compute/Amazon-Elastic-Container-Service.svg'
  )
  AWS2019Render(
    'aws2019_compute_ecsfk',
    'aws2019_compute',
    'Elastic Container Service for Kubernetes',
    '/assets/images/designer/network_aws2019/compute/Amazon-Elastic-Kubernetes-Service.svg'
  )
  AWS2019Render(
    'aws2019_compute_lightsail',
    'aws2019_compute',
    'Lightsail',
    '/assets/images/designer/network_aws2019/compute/Amazon-Lightsail.svg'
  )
  AWS2019Render(
    'aws2019_compute_batch',
    'aws2019_compute',
    'Batch',
    '/assets/images/designer/network_aws2019/compute/AWS-Batch.svg'
  )
  AWS2019Render(
    'aws2019_compute_eb',
    'aws2019_compute',
    'Elastic-Beanstalk',
    '/assets/images/designer/network_aws2019/compute/AWS-Elastic-Beanstalk.svg'
  )
  AWS2019Render(
    'aws2019_compute_fargate',
    'aws2019_compute',
    'Fargate',
    '/assets/images/designer/network_aws2019/compute/AWS-Fargate.svg'
  )
  AWS2019Render(
    'aws2019_compute_lambda',
    'aws2019_compute',
    'Lambda',
    '/assets/images/designer/network_aws2019/compute/AWS-Lambda.svg'
  )
  AWS2019Render(
    'aws2019_compute_outposts',
    'aws2019_compute',
    'Outposts',
    '/assets/images/designer/network_aws2019/compute/AWS-Outposts.svg'
  )
  AWS2019Render(
    'aws2019_compute_sar',
    'aws2019_compute',
    'Serverless Application Repository',
    '/assets/images/designer/network_aws2019/compute/AWS-Serverless-Application-Repository.svg'
  )
  AWS2019Render(
    'aws2019_compute_compute',
    'aws2019_compute',
    'Compute',
    '/assets/images/designer/network_aws2019/compute/Compute.svg'
  )
  AWS2019Render(
    'aws2019_compute_vcoa',
    'aws2019_compute',
    'VMWare Cloud On AWS',
    '/assets/images/designer/network_aws2019/compute/VMware-Cloud-On-AWS.svg'
  )
  AWS2019Render(
    'aws2019_compute_ami',
    'aws2019_compute',
    'AMI',
    '/assets/images/designer/network_aws2019/compute/Amazon-EC2_AMI.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_compute_autoscaling',
    'aws2019_compute',
    'Auto-Scaling',
    '/assets/images/designer/network_aws2019/compute/Amazon-EC2_Auto-Scaling.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_compute_eia',
    'aws2019_compute',
    'Elastic-IP-Address',
    '/assets/images/designer/network_aws2019/compute/Amazon-EC2_Elastic-IP-Address.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_compute_aer',
    'aws2019_compute',
    'Rescue',
    '/assets/images/designer/network_aws2019/compute/Amazon-EC2_Rescue.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_compute_ecrr',
    'aws2019_compute',
    'Registry',
    '/assets/images/designer/network_aws2019/compute/Amazon-EC2-Container-Registry_Registry.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_compute_container1',
    'aws2019_compute',
    'Container',
    '/assets/images/designer/network_aws2019/compute/Amazon-Elastic-Container-Service_Container1.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_compute_container2',
    'aws2019_compute',
    'Container',
    '/assets/images/designer/network_aws2019/compute/Amazon-Elastic-Container-Service_Container2.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_compute_container3',
    'aws2019_compute',
    'Container',
    '/assets/images/designer/network_aws2019/compute/Amazon-Elastic-Container-Service_Container3.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_compute_image',
    'aws2019_compute',
    'Image',
    '/assets/images/designer/network_aws2019/compute/Amazon-EC2-Container-Registry_Image.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_compute_ecss',
    'aws2019_compute',
    'Service',
    '/assets/images/designer/network_aws2019/compute/Amazon-Elastic-Container-Service_Service.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_compute_task',
    'aws2019_compute',
    'Task',
    '/assets/images/designer/network_aws2019/compute/Amazon-Elastic-Container-Service_Task.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_compute_app',
    'aws2019_compute',
    'Application',
    '/assets/images/designer/network_aws2019/compute/AWS-Elastic-Beanstalk_Application.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_compute_dep',
    'aws2019_compute',
    'Deployment',
    '/assets/images/designer/network_aws2019/compute/AWS-Elastic-Beanstalk_Deployment.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_compute_lf',
    'aws2019_compute',
    'Lambda-Function',
    '/assets/images/designer/network_aws2019/compute/AWS-Lambda_Lambda-Function.svg',
    56,
    56
  )
  Schema.addCategory({
    name: 'aws2019_instance',
    text: 'AWS EC2 Instance Types',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_instance_a1',
    'aws2019_instance',
    'A1-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_A1-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_c4',
    'aws2019_instance',
    'C4-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_C4-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_c5',
    'aws2019_instance',
    'C5-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_C5-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_c5n',
    'aws2019_instance',
    'C5n-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_C5n-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_d2',
    'aws2019_instance',
    'D2-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_D2-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_db',
    'aws2019_instance',
    'DB-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_DB-on-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_f1',
    'aws2019_instance',
    'F1-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_F1-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_g3',
    'aws2019_instance',
    'G2-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_G3-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_h1',
    'aws2019_instance',
    'H1-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_H1-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_hml',
    'aws2019_instance',
    'HMI-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_High-Memory-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_i3',
    'aws2019_instance',
    'I3-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_I3-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_ec2',
    'aws2019_instance',
    'Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_ec2s',
    'aws2019_instance',
    'Instances',
    '/assets/images/designer/network_aws2019/instances/EC2_Instances_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_iwc',
    'aws2019_instance',
    'Instance-with-CloudWatch',
    '/assets/images/designer/network_aws2019/instances/EC2_Instance-with-CloudWatch_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_m4',
    'aws2019_instance',
    'M4-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_M4-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_m5a',
    'aws2019_instance',
    'M5a-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_M5a-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_m5',
    'aws2019_instance',
    'M5-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_M5-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_oi',
    'aws2019_instance',
    'Optimized-Instanc',
    '/assets/images/designer/network_aws2019/instances/EC2_Optimized-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_p2',
    'aws2019_instance',
    'P2-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_P2-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_p3',
    'aws2019_instance',
    'P3-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_P3-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_r4',
    'aws2019_instance',
    'R4-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_R4-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_r5a',
    'aws2019_instance',
    'R5a-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_R5a-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_r5',
    'aws2019_instance',
    'R5-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_R5-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_spot',
    'aws2019_instance',
    'Spot-instance',
    '/assets/images/designer/network_aws2019/instances/EC2_Spot-instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_t2',
    'aws2019_instance',
    'T2-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_T2-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_t3a',
    'aws2019_instance',
    'T3a-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_T3a-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_t3',
    'aws2019_instance',
    'T3-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_T3-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_x1e',
    'aws2019_instance',
    'X1e-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_X1e-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_x1',
    'aws2019_instance',
    'X1-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_X1-Instance_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_instance_zld',
    'aws2019_instance',
    'zld-Instance',
    '/assets/images/designer/network_aws2019/instances/EC2_z1d-Instance_light-bg.svg',
    56,
    56
  )
  Schema.addCategory({
    name: 'aws2019_storage',
    text: 'AWS Storage',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_storage_ebs',
    'aws2019_storage',
    'Elastic-Block-Store',
    '/assets/images/designer/network_aws2019/storage/Elastic-Block-Store-EBS.svg'
  )
  AWS2019Render(
    'aws2019_storage_efs',
    'aws2019_storage',
    'Elastic-File-System',
    '/assets/images/designer/network_aws2019/storage/Elastic-File-System_EFS.svg'
  )
  AWS2019Render(
    'aws2019_storage_fsx',
    'aws2019_storage',
    'FSx',
    '/assets/images/designer/network_aws2019/storage/FSx.svg'
  )
  AWS2019Render(
    'aws2019_storage_fsxfl',
    'aws2019_storage',
    'FSx-for-Lustre',
    '/assets/images/designer/network_aws2019/storage/FSx-for-Lustre.svg'
  )
  AWS2019Render(
    'aws2019_storage_fsxfwfs',
    'aws2019_storage',
    'FSx-for-Windows-File-Server',
    '/assets/images/designer/network_aws2019/storage/FSx-for-Windows-File-Server.svg'
  )
  AWS2019Render(
    'aws2019_storage_s3g',
    'aws2019_storage',
    'S3-Glacier',
    '/assets/images/designer/network_aws2019/storage/S3-Glacier.svg'
  )
  AWS2019Render(
    'aws2019_storage_sss',
    'aws2019_storage',
    'Simple-Storage-Service',
    '/assets/images/designer/network_aws2019/storage/Simple-_Storage-Service-S3.svg'
  )
  AWS2019Render(
    'aws2019_storage_backup',
    'aws2019_storage',
    'Backup',
    '/assets/images/designer/network_aws2019/storage/AWS-Backup.svg'
  )
  AWS2019Render(
    'aws2019_storage_snowball',
    'aws2019_storage',
    'Snowball',
    '/assets/images/designer/network_aws2019/storage/AWS-Snowball.svg'
  )
  AWS2019Render(
    'aws2019_storage_se',
    'aws2019_storage',
    'Snowball-Edge',
    '/assets/images/designer/network_aws2019/storage/AWS-Snowball-Edge.svg'
  )
  AWS2019Render(
    'aws2019_storage_snowmobile',
    'aws2019_storage',
    'Snowmobile',
    '/assets/images/designer/network_aws2019/storage/AWS-Snowmobile.svg'
  )
  AWS2019Render(
    'aws2019_storage_sg',
    'aws2019_storage',
    'Storage-Gateway',
    '/assets/images/designer/network_aws2019/storage/AWS-Storage-Gateway.svg'
  )
  AWS2019Render(
    'aws2019_storage_storage',
    'aws2019_storage',
    'Storage',
    '/assets/images/designer/network_aws2019/storage/Storage.svg'
  )
  AWS2019Render(
    'aws2019_storage_snapshot',
    'aws2019_storage',
    'Snapshot',
    '/assets/images/designer/network_aws2019/storage/Elastic-Block-Store-EBS_Snapshot_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_storage_volume',
    'aws2019_storage',
    'Volume',
    '/assets/images/designer/network_aws2019/storage/Elastic-Block-Store-EBS_Volume.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_storage_fs',
    'aws2019_storage',
    'File-system',
    '/assets/images/designer/network_aws2019/storage/Elastic-File-System_EFS_File-system.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_storage_archive',
    'aws2019_storage',
    'Archive',
    '/assets/images/designer/network_aws2019/storage/S3-Glacier_Archive.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_storage_vault',
    'aws2019_storage',
    'Vault',
    '/assets/images/designer/network_aws2019/storage/S3-Glacier_Vault.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_storage_bucket',
    'aws2019_storage',
    'Bucket',
    '/assets/images/designer/network_aws2019/storage/Simple-Storage-Service-S3_Bucket.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_storage_bwo',
    'aws2019_storage',
    'Bucket-with-Objects',
    '/assets/images/designer/network_aws2019/storage/Simple-Storage-Service-S3_Bucket-with-Objects.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_storage_object',
    'aws2019_storage',
    'Object',
    '/assets/images/designer/network_aws2019/storage/Simple-Storage-Service-S3_Object.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_storage_sie',
    'aws2019_storage',
    'Snowball-Import-Export',
    '/assets/images/designer/network_aws2019/storage/AWS-Snow-Family_Snowball-Import-Export_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_storage_cv',
    'aws2019_storage',
    'Cached-Volume',
    '/assets/images/designer/network_aws2019/storage/AWS-Storage-Gateway_Cached-Volume_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_storage_ncv',
    'aws2019_storage',
    'Non-Cached-Volume',
    '/assets/images/designer/network_aws2019/storage/AWS-Storage-Gateway_Non-Cached-Volume.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_storage_vtl',
    'aws2019_storage',
    'Virtual-Tape-Library',
    '/assets/images/designer/network_aws2019/storage/AWS-Storage-Gateway_Virtual-Tape-Library.svg',
    56,
    56
  )
  Schema.addCategory({
    name: 'aws2019_database',
    text: 'AWS Database',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_database_aurora',
    'aws2019_database',
    'Aurora',
    '/assets/images/designer/network_aws2019/database/Aurora.svg'
  )
  AWS2019Render(
    'aws2019_database_wmc',
    'aws2019_database',
    'DocumentDB-(with-MongoDB-compatibility)',
    '/assets/images/designer/network_aws2019/database/DocumentDB-_with-MongoDB-compatibility.svg'
  )
  AWS2019Render(
    'aws2019_database_dynamoDB',
    'aws2019_database',
    'DynamoDB',
    '/assets/images/designer/network_aws2019/database/DynamoDB.svg'
  )
  AWS2019Render(
    'aws2019_database_ec',
    'aws2019_database',
    'ElastiCache',
    '/assets/images/designer/network_aws2019/database/ElastiCache.svg'
  )
  AWS2019Render(
    'aws2019_database_neptune',
    'aws2019_database',
    'Neptune',
    '/assets/images/designer/network_aws2019/database/Neptune.svg'
  )
  AWS2019Render(
    'aws2019_database_qld',
    'aws2019_database',
    'Quantum-Ledger-Database',
    '/assets/images/designer/network_aws2019/database/Quantum-Ledger-_Database_QLDB.svg'
  )
  AWS2019Render(
    'aws2019_database_rds',
    'aws2019_database',
    'RDS',
    '/assets/images/designer/network_aws2019/database/RDS.svg'
  )
  AWS2019Render(
    'aws2019_database_rov',
    'aws2019_database',
    'RDS-on-VMware',
    '/assets/images/designer/network_aws2019/database/RDS-on-VMware.svg'
  )
  AWS2019Render(
    'aws2019_database_redshift',
    'aws2019_database',
    'Redshift',
    '/assets/images/designer/network_aws2019/database/Redshift.svg'
  )
  AWS2019Render(
    'aws2019_database_timestream',
    'aws2019_database',
    'Timestream',
    '/assets/images/designer/network_aws2019/database/Timestream.svg'
  )
  AWS2019Render(
    'aws2019_database_dms',
    'aws2019_database',
    'Database-Migration-Service',
    '/assets/images/designer/network_aws2019/database/AWS-Database-Migration-Service.svg'
  )
  AWS2019Render(
    'aws2019_database_db',
    'aws2019_database',
    'Database',
    '/assets/images/designer/network_aws2019/database/Database.svg'
  )
  AWS2019Render(
    'aws2019_database_attr',
    'aws2019_database',
    'Attribute',
    '/assets/images/designer/network_aws2019/database/DynamoDB_Attribute.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_database_attrs',
    'aws2019_database',
    'Attributes',
    '/assets/images/designer/network_aws2019/database/DynamoDB_Attributes.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_database_gsi',
    'aws2019_database',
    'Global-Secondary-Index',
    '/assets/images/designer/network_aws2019/database/DynamoDB_Global-Secondary-Index.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_database_item',
    'aws2019_database',
    'Item',
    '/assets/images/designer/network_aws2019/database/DynamoDB_Item.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_database_items',
    'aws2019_database',
    'Items',
    '/assets/images/designer/network_aws2019/database/DynamoDB_Items.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_database_table',
    'aws2019_database',
    'Table',
    '/assets/images/designer/network_aws2019/database/DynamoDB_Table.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_database_cn',
    'aws2019_database',
    'Cache-Node',
    '/assets/images/designer/network_aws2019/database/ElastiCache_Cache-Node.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_database_efm',
    'aws2019_database',
    'ElastiCache-For-Memcached',
    '/assets/images/designer/network_aws2019/database/ElastiCache_For-Memcached.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_database_efr',
    'aws2019_database',
    'ElastiCache-For-Redis',
    '/assets/images/designer/network_aws2019/database/ElastiCache_For-Redis.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_database_dcn',
    'aws2019_database',
    'Dense-Compute-Node',
    '/assets/images/designer/network_aws2019/database/Redshift_Dense-Compute-Node.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_database_dsn',
    'aws2019_database',
    'Dense-Storage-Node',
    '/assets/images/designer/network_aws2019/database/Redshift_Dense-Storage-Node.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_database_dmw',
    'aws2019_database',
    'Database-Migration-Workflow',
    '/assets/images/designer/network_aws2019/database/AWS-Database-Migration-Service_Database-Migration-Workflow.svg',
    56,
    56
  )
  Schema.addCategory({
    name: 'aws2019_ncd',
    text: 'Networking & Content Delivery',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_ncd1',
    'aws2019_ncd',
    'API-Gateway',
    '/assets/images/designer/network_aws2019/ncd/API-Gateway.svg'
  )
  AWS2019Render(
    'aws2019_ncd2',
    'aws2019_ncd',
    'CloudFront',
    '/assets/images/designer/network_aws2019/ncd/CloudFront.svg'
  )
  AWS2019Render(
    'aws2019_ncd3',
    'aws2019_ncd',
    'Route-53',
    '/assets/images/designer/network_aws2019/ncd/Route-53.svg'
  )
  AWS2019Render(
    'aws2019_ncd4',
    'aws2019_ncd',
    'AWS-PrivateLink',
    '/assets/images/designer/network_aws2019/ncd/AWS-PrivateLink.svg'
  )
  AWS2019Render(
    'aws2019_ncd5',
    'aws2019_ncd',
    'VPC',
    '/assets/images/designer/network_aws2019/ncd/VPC.svg'
  )
  AWS2019Render(
    'aws2019_ncd6',
    'aws2019_ncd',
    'App-Mesh',
    '/assets/images/designer/network_aws2019/ncd/AWS-App-Mesh.svg'
  )
  AWS2019Render(
    'aws2019_ncd7',
    'aws2019_ncd',
    'Client-VPN',
    '/assets/images/designer/network_aws2019/ncd/AWS-Client-VPN.svg'
  )
  AWS2019Render(
    'aws2019_ncd8',
    'aws2019_ncd',
    'Site-to-Site-VPN',
    '/assets/images/designer/network_aws2019/ncd/AWS-Site-to-Site-VPN.svg'
  )
  AWS2019Render(
    'aws2019_ncd9',
    'aws2019_ncd',
    'Elastic-Load-Balancing',
    '/assets/images/designer/network_aws2019/ncd/Elastic-Load-Balancing.svg'
  )
  AWS2019Render(
    'aws2019_ncd10',
    'aws2019_ncd',
    'Cloud-Map',
    '/assets/images/designer/network_aws2019/ncd/AWS-Cloud-Map.svg'
  )
  AWS2019Render(
    'aws2019_ncd11',
    'aws2019_ncd',
    'Direct-Connect',
    '/assets/images/designer/network_aws2019/ncd/AWS-Direct-Connect.svg'
  )
  AWS2019Render(
    'aws2019_ncd12',
    'aws2019_ncd',
    'Global-Accelerator',
    '/assets/images/designer/network_aws2019/ncd/AWS-Global-Accelerator.svg'
  )
  AWS2019Render(
    'aws2019_ncd13',
    'aws2019_ncd',
    'Transit-Gateway',
    '/assets/images/designer/network_aws2019/ncd/AWS-Transit-Gateway.svg'
  )
  AWS2019Render(
    'aws2019_ncd14',
    'aws2019_ncd',
    'Networking-and-Content-Delivery',
    '/assets/images/designer/network_aws2019/ncd/Networking-and-Content-Delivery.svg'
  )
  AWS2019Render(
    'aws2019_ncd15',
    'aws2019_ncd',
    'Gateway-Endpoint',
    '/assets/images/designer/network_aws2019/ncd/API-Gateway_Endpoint.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ncd16',
    'aws2019_ncd',
    'Download-Distribution',
    '/assets/images/designer/network_aws2019/ncd/CloudFront_Download-Distribution.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ncd17',
    'aws2019_ncd',
    'Edge-Location',
    '/assets/images/designer/network_aws2019/ncd/CloudFront_Edge-Location.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ncd18',
    'aws2019_ncd',
    'Streaming-Distribution',
    '/assets/images/designer/network_aws2019/ncd/CloudFront_Streaming-Distribution.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ncd19',
    'aws2019_ncd',
    'Hosted-Zone',
    '/assets/images/designer/network_aws2019/ncd/Amazon-Route-53_Hosted-Zone_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ncd20',
    'aws2019_ncd',
    'Route-Table',
    '/assets/images/designer/network_aws2019/ncd/Amazon-Route-53_Route-Table_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ncd21',
    'aws2019_ncd',
    'Router',
    '/assets/images/designer/network_aws2019/ncd/VPC_Router.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ncd22',
    'aws2019_ncd',
    'Elastic-Network-Adapter',
    '/assets/images/designer/network_aws2019/ncd/VPC_Elastic-Network-Adapter.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ncd23',
    'aws2019_ncd',
    'Transit-Gateway',
    '/assets/images/designer/network_aws2019/ncd/VPC_Elastic-Network-Interface.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ncd24',
    'aws2019_ncd',
    'Endpoints',
    '/assets/images/designer/network_aws2019/ncd/VPC_Endpoints_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ncd25',
    'aws2019_ncd',
    'Flow-Logs',
    '/assets/images/designer/network_aws2019/ncd/VPC_Flow-Logs_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ncd26',
    'aws2019_ncd',
    'Internet-Gateway',
    '/assets/images/designer/network_aws2019/ncd/VPC_Internet-Gateway.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ncd27',
    'aws2019_ncd',
    'NAT-Gateway',
    '/assets/images/designer/network_aws2019/ncd/VPC_NAT-Gateway.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ncd28',
    'aws2019_ncd',
    'Network-Access-Control-List',
    '/assets/images/designer/network_aws2019/ncd/VPC_Network-Access-Control-List.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ncd29',
    'aws2019_ncd',
    'Peering',
    '/assets/images/designer/network_aws2019/ncd/VPC_Peering.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ncd30',
    'aws2019_ncd',
    'Application-load-balancer',
    '/assets/images/designer/network_aws2019/ncd/Elastic-Load-Balancing-ELB_Application-load-balancer.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ncd31',
    'aws2019_ncd',
    'Classic-load-balancer',
    '/assets/images/designer/network_aws2019/ncd/Elastic-Load-Balancing_Classic-load-balancer.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ncd32',
    'aws2019_ncd',
    'Network-load-balancer',
    '/assets/images/designer/network_aws2019/ncd/Elastic-Load-Balancing-ELB_Network-load-balancer.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ncd33',
    'aws2019_ncd',
    'Customer-Gateway',
    '/assets/images/designer/network_aws2019/ncd/VPC_Customer-Gateway_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ncd34',
    'aws2019_ncd',
    'VPN-Connection',
    '/assets/images/designer/network_aws2019/ncd/VPC_VPN-Connection.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ncd35',
    'aws2019_ncd',
    'VPN-Gateway',
    '/assets/images/designer/network_aws2019/ncd/VPC_VPN-Gateway.svg',
    56,
    56
  )
  Schema.addCategory({
    name: 'aws2019_mt',
    text: 'Migration & Transfer',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_mt1',
    'aws2019_mt',
    'Application-Discovery-Service',
    '/assets/images/designer/network_aws2019/mt/AWS-Application-Discovery-Service.svg'
  )
  AWS2019Render(
    'aws2019_mt2',
    'aws2019_mt',
    'Database-_Migration-Service',
    '/assets/images/designer/network_aws2019/mt/AWS-Database-_Migration-Service.svg'
  )
  AWS2019Render(
    'aws2019_mt3',
    'aws2019_mt',
    'DataSync',
    '/assets/images/designer/network_aws2019/mt/AWS-DataSync.svg'
  )
  AWS2019Render(
    'aws2019_mt4',
    'aws2019_mt',
    'Migration-Hub',
    '/assets/images/designer/network_aws2019/mt/AWS-Migration-Hub.svg'
  )
  AWS2019Render(
    'aws2019_mt5',
    'aws2019_mt',
    'Service-Migration-Service',
    '/assets/images/designer/network_aws2019/mt/AWS-Server-Migration-Service.svg'
  )
  AWS2019Render(
    'aws2019_mt6',
    'aws2019_mt',
    'Snowball',
    '/assets/images/designer/network_aws2019/mt/AWS-Snowball.svg'
  )
  AWS2019Render(
    'aws2019_mt7',
    'aws2019_mt',
    'Snowball-Edge',
    '/assets/images/designer/network_aws2019/mt/AWS-Snowball-Edge.svg'
  )
  AWS2019Render(
    'aws2019_mt8',
    'aws2019_mt',
    'Snowmobile',
    '/assets/images/designer/network_aws2019/mt/AWS-Snowmobile.svg'
  )
  AWS2019Render(
    'aws2019_mt9',
    'aws2019_mt',
    'Transfer-for-SFTP',
    '/assets/images/designer/network_aws2019/mt/AWS-Transfer-for-SFTP.svg'
  )
  AWS2019Render(
    'aws2019_mt10',
    'aws2019_mt',
    'Migration-and-Transfer',
    '/assets/images/designer/network_aws2019/mt/Migration-and-Transfer.svg'
  )
  AWS2019Render(
    'aws2019_mt11',
    'aws2019_mt',
    'Agent',
    '/assets/images/designer/network_aws2019/mt/AWS-DataSync_Agent_light-bg.svg',
    56,
    56
  )
  Schema.addCategory({
    name: 'aws2019_dt',
    text: 'Developer Tools',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_dt1',
    'aws2019_dt',
    'Developer-Tools',
    '/assets/images/designer/network_aws2019/developer_tools/Developer-Tools.svg'
  )
  AWS2019Render(
    'aws2019_dt2',
    'aws2019_dt',
    'Cloud9',
    '/assets/images/designer/network_aws2019/developer_tools/AWS-Cloud9.svg'
  )
  AWS2019Render(
    'aws2019_dt3',
    'aws2019_dt',
    'CodeBuild',
    '/assets/images/designer/network_aws2019/developer_tools/AWS-CodeBuild.svg'
  )
  AWS2019Render(
    'aws2019_dt4',
    'aws2019_dt',
    'CodeCommit',
    '/assets/images/designer/network_aws2019/developer_tools/AWS-CodeCommit.svg'
  )
  AWS2019Render(
    'aws2019_dt5',
    'aws2019_dt',
    'CodeDeploy',
    '/assets/images/designer/network_aws2019/developer_tools/AWS-CodeDeploy.svg'
  )
  AWS2019Render(
    'aws2019_dt6',
    'aws2019_dt',
    'CodePipeline',
    '/assets/images/designer/network_aws2019/developer_tools/AWS-CodePipeline.svg'
  )
  AWS2019Render(
    'aws2019_dt7',
    'aws2019_dt',
    'CodeStar',
    '/assets/images/designer/network_aws2019/developer_tools/AWS-CodeStar.svg'
  )
  AWS2019Render(
    'aws2019_dt8',
    'aws2019_dt',
    'Command-Line-Interface',
    '/assets/images/designer/network_aws2019/developer_tools/AWS-Command-Line-Interface.svg'
  )
  AWS2019Render(
    'aws2019_dt9',
    'aws2019_dt',
    'Tools-And-SDKs',
    '/assets/images/designer/network_aws2019/developer_tools/AWS-Tools-And-SDKs.svg'
  )
  AWS2019Render(
    'aws2019_dt10',
    'aws2019_dt',
    'X-Ray',
    '/assets/images/designer/network_aws2019/developer_tools/AWS-X-Ray.svg'
  )
  Schema.addCategory({
    name: 'aws2019_mg',
    text: 'Management-and-Governance',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_mg1',
    'aws2019_mg',
    'CloudWatch',
    '/assets/images/designer/network_aws2019/mg/CloudWatch.svg'
  )
  AWS2019Render(
    'aws2019_mg2',
    'aws2019_mg',
    'Auto-Scaling',
    '/assets/images/designer/network_aws2019/mg/AWS-Auto-Scaling.svg'
  )
  AWS2019Render(
    'aws2019_mg3',
    'aws2019_mg',
    'CloudFormation',
    '/assets/images/designer/network_aws2019/mg/AWS-CloudFormation.svg'
  )
  AWS2019Render(
    'aws2019_mg4',
    'aws2019_mg',
    'CloudTrail',
    '/assets/images/designer/network_aws2019/mg/AWS-CloudTrail.svg'
  )
  AWS2019Render(
    'aws2019_mg5',
    'aws2019_mg',
    'Command-Line-Interface',
    '/assets/images/designer/network_aws2019/mg/AWS-Command-Line-Interface.svg'
  )
  AWS2019Render(
    'aws2019_mg6',
    'aws2019_mg',
    'Config',
    '/assets/images/designer/network_aws2019/mg/AWS-Config.svg'
  )
  AWS2019Render(
    'aws2019_mg7',
    'aws2019_mg',
    'License-Manager',
    '/assets/images/designer/network_aws2019/mg/AWS-License-Manager.svg'
  )
  AWS2019Render(
    'aws2019_mg8',
    'aws2019_mg',
    'Managed-Services',
    '/assets/images/designer/network_aws2019/mg/AWS-Managed-Services.svg'
  )
  AWS2019Render(
    'aws2019_mg9',
    'aws2019_mg',
    'Management-Console',
    '/assets/images/designer/network_aws2019/mg/AWS-Management-Console.svg'
  )
  AWS2019Render(
    'aws2019_mg10',
    'aws2019_mg',
    'OpsWorks',
    '/assets/images/designer/network_aws2019/mg/AWS-OpsWorks.svg'
  )
  AWS2019Render(
    'aws2019_mg11',
    'aws2019_mg',
    'Health-Dashboard',
    '/assets/images/designer/network_aws2019/mg/AWS-Personal-Health-Dashboard.svg'
  )
  AWS2019Render(
    'aws2019_mg12',
    'aws2019_mg',
    'Service-Catalog',
    '/assets/images/designer/network_aws2019/mg/AWS-Service-Catalog.svg'
  )
  AWS2019Render(
    'aws2019_mg13',
    'aws2019_mg',
    'Systems-Manager',
    '/assets/images/designer/network_aws2019/mg/AWS-Systems-Manager.svg'
  )
  AWS2019Render(
    'aws2019_mg14',
    'aws2019_mg',
    'Trusted-Advisor',
    '/assets/images/designer/network_aws2019/mg/AWS-Trusted-Advisor.svg'
  )
  AWS2019Render(
    'aws2019_mg15',
    'aws2019_mg',
    'Well-Architected-Tool',
    '/assets/images/designer/network_aws2019/mg/AWS-Well-Architected-Tool.svg'
  )
  AWS2019Render(
    'aws2019_mg16',
    'aws2019_mg',
    'Control-Tower',
    '/assets/images/designer/network_aws2019/mg/AWS-Control-Tower.svg'
  )
  AWS2019Render(
    'aws2019_mg17',
    'aws2019_mg',
    'Management-and-Governance',
    '/assets/images/designer/network_aws2019/mg/Management-and-Governance.svg'
  )
  AWS2019Render(
    'aws2019_mg18',
    'aws2019_mg',
    'Alarm',
    '/assets/images/designer/network_aws2019/mg/CloudWatch_Alarm_light-bg.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg19',
    'aws2019_mg',
    'Event(Event-Based)',
    '/assets/images/designer/network_aws2019/mg/CloudWatch_Event-Event-Based.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg20',
    'aws2019_mg',
    'Event(Time-Based)',
    '/assets/images/designer/network_aws2019/mg/CloudWatch_Event-Time-Based.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg21',
    'aws2019_mg',
    'Rule',
    '/assets/images/designer/network_aws2019/mg/CloudWatch_Rule.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg22',
    'aws2019_mg',
    'Change-Set',
    '/assets/images/designer/network_aws2019/mg/AWS-CloudFormation_Change-Set.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg23',
    'aws2019_mg',
    'Stack',
    '/assets/images/designer/network_aws2019/mg/AWS-CloudFormation_Stack.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg24',
    'aws2019_mg',
    'Template',
    '/assets/images/designer/network_aws2019/mg/AWS-CloudFormation_Template.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg25',
    'aws2019_mg',
    'Apps',
    '/assets/images/designer/network_aws2019/mg/AWS-OpsWorks_Apps.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg26',
    'aws2019_mg',
    'Deployments',
    '/assets/images/designer/network_aws2019/mg/AWS-OpsWorks_Deployments.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg27',
    'aws2019_mg',
    'Instances',
    '/assets/images/designer/network_aws2019/mg/AWS-OpsWorks_Instances.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg28',
    'aws2019_mg',
    'Layers',
    '/assets/images/designer/network_aws2019/mg/AWS-OpsWorks_Layers.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg29',
    'aws2019_mg',
    'Monitoring',
    '/assets/images/designer/network_aws2019/mg/AWS-OpsWorks_Monitoring.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg30',
    'aws2019_mg',
    'Permissions',
    '/assets/images/designer/network_aws2019/mg/AWS-OpsWorks_Permissions.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg31',
    'aws2019_mg',
    'Resources',
    '/assets/images/designer/network_aws2019/mg/AWS-OpsWorks_Resources.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg32',
    'aws2019_mg',
    'Stack2',
    '/assets/images/designer/network_aws2019/mg/AWS-OpsWorks_Stack2.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg33',
    'aws2019_mg',
    'Account',
    '/assets/images/designer/network_aws2019/mg/AWS-Organizations_Account.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg34',
    'aws2019_mg',
    'Organizational-unit',
    '/assets/images/designer/network_aws2019/mg/AWS-Organizations_Organizational-unit.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg35',
    'aws2019_mg',
    'Automation',
    '/assets/images/designer/network_aws2019/mg/AWS-Systems-Manager_Automation.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg36',
    'aws2019_mg',
    'Documents',
    '/assets/images/designer/network_aws2019/mg/AWS-Systems-Manager_Documents.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg37',
    'aws2019_mg',
    'Inventory',
    '/assets/images/designer/network_aws2019/mg/AWS-Systems-Manager_Inventory.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg38',
    'aws2019_mg',
    'Maintenance-Windows',
    '/assets/images/designer/network_aws2019/mg/AWS-Systems-Manager_Maintenance-Windows.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg39',
    'aws2019_mg',
    'Parameter-Store',
    '/assets/images/designer/network_aws2019/mg/AWS-Systems-Manager_Parameter-Store.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg40',
    'aws2019_mg',
    'Patch-Manager',
    '/assets/images/designer/network_aws2019/mg/AWS-Systems-Manager_Patch-Manager.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg41',
    'aws2019_mg',
    'Run-Command',
    '/assets/images/designer/network_aws2019/mg/AWS-Systems-Manager_Run-Command.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg42',
    'aws2019_mg',
    'State-Manager',
    '/assets/images/designer/network_aws2019/mg/AWS-Systems-Manager_State-Manager.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg43',
    'aws2019_mg',
    'Checklist',
    '/assets/images/designer/network_aws2019/mg/AWS-Trusted-Advisor_Checklist.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg44',
    'aws2019_mg',
    'Checklist-Cost',
    '/assets/images/designer/network_aws2019/mg/AWS-Trusted-Advisor_Checklist-Cost.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg45',
    'aws2019_mg',
    'Checklist-Fault-Tolerant',
    '/assets/images/designer/network_aws2019/mg/AWS-Trusted-Advisor_Checklist-Fault-Tolerant.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg46',
    'aws2019_mg',
    'Checklist-Performance',
    '/assets/images/designer/network_aws2019/mg/AWS-Trusted-Advisor_Checklist-Performance.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg47',
    'aws2019_mg',
    'Checklist-Security',
    '/assets/images/designer/network_aws2019/mg/AWS-Trusted-Advisor_Checklist-Security.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_mg48',
    'aws2019_mg',
    'OpsCenter',
    '/assets/images/designer/network_aws2019/mg/Systems-Manager_OpsCenter.svg',
    56,
    56
  )
  Schema.addCategory({
    name: 'aws2019_sic',
    text: 'Security Identity& Compliance',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_sic1',
    'aws2019_sic',
    'Directory',
    '/assets/images/designer/network_aws2019/sic/Amazon-Cloud-Directory.svg'
  )
  AWS2019Render(
    'aws2019_sic2',
    'aws2019_sic',
    'Cognito',
    '/assets/images/designer/network_aws2019/sic/Amazon-Cognito.svg'
  )
  AWS2019Render(
    'aws2019_sic3',
    'aws2019_sic',
    'GuardDuty',
    '/assets/images/designer/network_aws2019/sic/Amazon-GuardDuty.svg'
  )
  AWS2019Render(
    'aws2019_sic4',
    'aws2019_sic',
    'Inspector',
    '/assets/images/designer/network_aws2019/sic/Amazon-Inspector.svg'
  )
  AWS2019Render(
    'aws2019_sic5',
    'aws2019_sic',
    'Macie',
    '/assets/images/designer/network_aws2019/sic/Amazon-Macie.svg'
  )
  AWS2019Render(
    'aws2019_sic6',
    'aws2019_sic',
    'Artifact',
    '/assets/images/designer/network_aws2019/sic/AWS-Artifact.svg'
  )
  AWS2019Render(
    'aws2019_sic7',
    'aws2019_sic',
    'Certificate-Manager',
    '/assets/images/designer/network_aws2019/sic/AWS-Certificate-Manager.svg'
  )
  AWS2019Render(
    'aws2019_sic8',
    'aws2019_sic',
    'CloudHSM',
    '/assets/images/designer/network_aws2019/sic/AWS-CloudHSM.svg'
  )
  AWS2019Render(
    'aws2019_sic9',
    'aws2019_sic',
    'Directory-Service',
    '/assets/images/designer/network_aws2019/sic/AWS-Directory-Service.svg'
  )
  AWS2019Render(
    'aws2019_sic10',
    'aws2019_sic',
    'Firewall-Manager',
    '/assets/images/designer/network_aws2019/sic/AWS-Firewall-Manager.svg'
  )
  AWS2019Render(
    'aws2019_sic11',
    'aws2019_sic',
    'Management_IAM',
    '/assets/images/designer/network_aws2019/sic/AWS-Identity-and-Access-Management_IAM.svg'
  )
  AWS2019Render(
    'aws2019_sic12',
    'aws2019_sic',
    'Management-Service',
    '/assets/images/designer/network_aws2019/sic/AWS-Key-Management-Service.svg'
  )
  AWS2019Render(
    'aws2019_sic13',
    'aws2019_sic',
    'Access-Manager',
    '/assets/images/designer/network_aws2019/sic/AWS-Resource-Access-Manager.svg'
  )
  AWS2019Render(
    'aws2019_sic14',
    'aws2019_sic',
    'Secrets-Manager',
    '/assets/images/designer/network_aws2019/sic/AWS-Secrets-Manager.svg'
  )
  AWS2019Render(
    'aws2019_sic15',
    'aws2019_sic',
    'Security-Hub',
    '/assets/images/designer/network_aws2019/sic/AWS-Security-Hub.svg'
  )
  AWS2019Render(
    'aws2019_sic16',
    'aws2019_sic',
    'Shield',
    '/assets/images/designer/network_aws2019/sic/AWS-Shield.svg'
  )
  AWS2019Render(
    'aws2019_sic17',
    'aws2019_sic',
    'Single-Sign-On',
    '/assets/images/designer/network_aws2019/sic/AWS-Single-Sign-On.svg'
  )
  AWS2019Render(
    'aws2019_sic18',
    'aws2019_sic',
    'WAF',
    '/assets/images/designer/network_aws2019/sic/AWS-WAF.svg'
  )
  AWS2019Render(
    'aws2019_sic19',
    'aws2019_sic',
    'Security-Identity-and-Compliance',
    '/assets/images/designer/network_aws2019/sic/Security-Identity-and-Compliance.svg'
  )
  AWS2019Render(
    'aws2019_sic20',
    'aws2019_sic',
    'AD-Connector',
    '/assets/images/designer/network_aws2019/sic/AD-Connector.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_sic21',
    'aws2019_sic',
    'Agent',
    '/assets/images/designer/network_aws2019/sic/Amazon-Inspector_Agent.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_sic22',
    'aws2019_sic',
    'Authority',
    '/assets/images/designer/network_aws2019/sic/AWS-Certificate-Authority.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_sic23',
    'aws2019_sic',
    'Add-on',
    '/assets/images/designer/network_aws2019/sic/AWS-Identity-and-Access-Management-IAM_Add-on.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_sic24',
    'aws2019_sic',
    'AWS-STS',
    '/assets/images/designer/network_aws2019/sic/AWS-Identity-and-Access-Management-IAM_AWS-STS.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_sic25',
    'aws2019_sic',
    'AWS-STS-Alternate',
    '/assets/images/designer/network_aws2019/sic/AWS-Identity-and-Access-Management-IAM_AWS-STS-Alternate.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_sic26',
    'aws2019_sic',
    'Data-Encryption-Key',
    '/assets/images/designer/network_aws2019/sic/AWS-Identity-and-Access-Management-IAM_Data-Encryption-Key.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_sic27',
    'aws2019_sic',
    'Encrypted-Data',
    '/assets/images/designer/network_aws2019/sic/AWS-Identity-and-Access-Management-IAM_Encrypted-Data.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_sic28',
    'aws2019_sic',
    'Long-term-Security-Credential',
    '/assets/images/designer/network_aws2019/sic/AWS-Identity-and-Access-Management-IAM_Long-term-Security-Credential.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_sic29',
    'aws2019_sic',
    'MFA-Token',
    '/assets/images/designer/network_aws2019/sic/AWS-Identity-and-Access-Management-IAM_MFA-Token.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_sic30',
    'aws2019_sic',
    'Permissions',
    '/assets/images/designer/network_aws2019/sic/AWS-Identity-and-Access-Management-IAM_Permissions.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_sic31',
    'aws2019_sic',
    'Role',
    '/assets/images/designer/network_aws2019/sic/AWS-Identity-and-Access-Management-IAM_Role.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_sic32',
    'aws2019_sic',
    'Temporary-Security-Credential',
    '/assets/images/designer/network_aws2019/sic/AWS-Identity-and-Access-Management-IAM_Temporary-Security-Credential.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_sic33',
    'aws2019_sic',
    'Managed-Microsoft-AD',
    '/assets/images/designer/network_aws2019/sic/AWS-Managed-Microsoft-AD.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_sic34',
    'aws2019_sic',
    'Shield-Advanced',
    '/assets/images/designer/network_aws2019/sic/AWS-Shield_Shield-Advanced.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_sic35',
    'aws2019_sic',
    'Filtering-rule',
    '/assets/images/designer/network_aws2019/sic/AWS-WAF_Filtering-rule.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_sic36',
    'aws2019_sic',
    'Simple-AD',
    '/assets/images/designer/network_aws2019/sic/Simple-AD.svg',
    56,
    56
  )
  Schema.addCategory({
    name: 'aws2019_analytics',
    text: 'Analytics',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_analytics1',
    'aws2019_analytics',
    'Athena',
    '/assets/images/designer/network_aws2019/analytics/Amazon-Athena.svg'
  )
  AWS2019Render(
    'aws2019_analytics2',
    'aws2019_analytics',
    'CloudSearch',
    '/assets/images/designer/network_aws2019/analytics/Amazon-CloudSearch.svg'
  )
  AWS2019Render(
    'aws2019_analytics3',
    'aws2019_analytics',
    'Elasticsearch-Service',
    '/assets/images/designer/network_aws2019/analytics/Amazon-Elasticsearch-Service.svg'
  )
  AWS2019Render(
    'aws2019_analytics4',
    'aws2019_analytics',
    'EMR',
    '/assets/images/designer/network_aws2019/analytics/Amazon-EMR.svg'
  )
  AWS2019Render(
    'aws2019_analytics5',
    'aws2019_analytics',
    'Kinesis',
    '/assets/images/designer/network_aws2019/analytics/Amazon-Kinesis.svg'
  )
  AWS2019Render(
    'aws2019_analytics6',
    'aws2019_analytics',
    'Analytics',
    '/assets/images/designer/network_aws2019/analytics/Amazon-Kinesis-Data-Analytics.svg'
  )
  AWS2019Render(
    'aws2019_analytics7',
    'aws2019_analytics',
    'Firehose',
    '/assets/images/designer/network_aws2019/analytics/Amazon-Kinesis-Data-Firehose.svg'
  )
  AWS2019Render(
    'aws2019_analytics8',
    'aws2019_analytics',
    'Data-Streams',
    '/assets/images/designer/network_aws2019/analytics/Amazon-Kinesis-Data-Streams.svg'
  )
  AWS2019Render(
    'aws2019_analytics9',
    'aws2019_analytics',
    'Video-Streams',
    '/assets/images/designer/network_aws2019/analytics/Amazon-Kinesis-Video-Streams.svg'
  )
  AWS2019Render(
    'aws2019_analytics10',
    'aws2019_analytics',
    'Quicksight',
    '/assets/images/designer/network_aws2019/analytics/Amazon-Quicksight.svg'
  )
  AWS2019Render(
    'aws2019_analytics11',
    'aws2019_analytics',
    'Redshift',
    '/assets/images/designer/network_aws2019/analytics/Amazon-Redshift.svg'
  )
  AWS2019Render(
    'aws2019_analytics12',
    'aws2019_analytics',
    'Analytics',
    '/assets/images/designer/network_aws2019/analytics/Analytics.svg'
  )
  AWS2019Render(
    'aws2019_analytics13',
    'aws2019_analytics',
    'Data-Pipeline',
    '/assets/images/designer/network_aws2019/analytics/AWS-Data-Pipeline.svg'
  )
  AWS2019Render(
    'aws2019_analytics14',
    'aws2019_analytics',
    'Streaming-for-Kafka',
    '/assets/images/designer/network_aws2019/analytics/Amazon-Managed-Streaming-for-Kafka.svg'
  )
  AWS2019Render(
    'aws2019_analytics15',
    'aws2019_analytics',
    'Glue',
    '/assets/images/designer/network_aws2019/analytics/AWS-Glue.svg'
  )
  AWS2019Render(
    'aws2019_analytics16',
    'aws2019_analytics',
    'Formation',
    '/assets/images/designer/network_aws2019/analytics/AWS-Lake-Formation.svg'
  )
  AWS2019Render(
    'aws2019_analytics17',
    'aws2019_analytics',
    'Search-documents',
    '/assets/images/designer/network_aws2019/analytics/Amazon-CloudSearch_Search-documents.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_analytics18',
    'aws2019_analytics',
    'Cluster',
    '/assets/images/designer/network_aws2019/analytics/Amazon-EMR_Cluster.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_analytics19',
    'aws2019_analytics',
    'Resource-icon',
    '/assets/images/designer/network_aws2019/analytics/AWS-Data-lake_Resource-icon.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_analytics20',
    'aws2019_analytics',
    'EMR-engine',
    '/assets/images/designer/network_aws2019/analytics/Amazon-EMR_EMR-engine.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_analytics21',
    'aws2019_analytics',
    'EMR-engine-MapR-M3',
    '/assets/images/designer/network_aws2019/analytics/Amazon-EMR_EMR-engine-MapR-M3.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_analytics22',
    'aws2019_analytics',
    'EMR-engine-MapR-M5',
    '/assets/images/designer/network_aws2019/analytics/Amazon-EMR_EMR-engine-MapR-M5.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_analytics23',
    'aws2019_analytics',
    'EMR-engine-MapR-M7',
    '/assets/images/designer/network_aws2019/analytics/Amazon-EMR_EMR-engine-MapR-M7.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_analytics24',
    'aws2019_analytics',
    'HDFS-cluster',
    '/assets/images/designer/network_aws2019/analytics/Amazon-EMR_HDFS-cluster.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_analytics25',
    'aws2019_analytics',
    'Dense-compute-node',
    '/assets/images/designer/network_aws2019/analytics/Amazon-Redshift_Dense-compute-node.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_analytics26',
    'aws2019_analytics',
    'Dense-storage-node',
    '/assets/images/designer/network_aws2019/analytics/Amazon-Redshift_Dense-storage-node.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_analytics27',
    'aws2019_analytics',
    'Crawlers',
    '/assets/images/designer/network_aws2019/analytics/AWS-Glue_Crawlers.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_analytics28',
    'aws2019_analytics',
    'Data-catalog',
    '/assets/images/designer/network_aws2019/analytics/AWS-Glue_Data-catalog.svg',
    56,
    56
  )
  Schema.addCategory({
    name: 'aws2019_ml',
    text: 'Machine Learning',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_ml1',
    'aws2019_ml',
    'Comprehend',
    '/assets/images/designer/network_aws2019/ml/Amazon-Comprehend.svg'
  )
  AWS2019Render(
    'aws2019_ml2',
    'aws2019_ml',
    'Elastic-Inference',
    '/assets/images/designer/network_aws2019/ml/Amazon-Elastic-Inference.svg'
  )
  AWS2019Render(
    'aws2019_ml3',
    'aws2019_ml',
    'Forecast',
    '/assets/images/designer/network_aws2019/ml/Amazon-Forecast.svg'
  )
  AWS2019Render(
    'aws2019_ml4',
    'aws2019_ml',
    'Lex',
    '/assets/images/designer/network_aws2019/ml/Amazon-Lex.svg'
  )
  AWS2019Render(
    'aws2019_ml5',
    'aws2019_ml',
    'Personalize',
    '/assets/images/designer/network_aws2019/ml/Amazon-Personalize.svg'
  )
  AWS2019Render(
    'aws2019_ml6',
    'aws2019_ml',
    'Polly',
    '/assets/images/designer/network_aws2019/ml/Amazon-Polly.svg'
  )
  AWS2019Render(
    'aws2019_ml7',
    'aws2019_ml',
    'Rekognition',
    '/assets/images/designer/network_aws2019/ml/Amazon-Rekognition.svg'
  )
  AWS2019Render(
    'aws2019_ml8',
    'aws2019_ml',
    'SageMaker',
    '/assets/images/designer/network_aws2019/ml/Amazon-SageMaker.svg'
  )
  AWS2019Render(
    'aws2019_ml9',
    'aws2019_ml',
    'Ground-Truth',
    '/assets/images/designer/network_aws2019/ml/Amazon-SageMaker-Ground-Truth.svg'
  )
  AWS2019Render(
    'aws2019_ml10',
    'aws2019_ml',
    'Textract',
    '/assets/images/designer/network_aws2019/ml/Amazon-Textract.svg'
  )
  AWS2019Render(
    'aws2019_ml11',
    'aws2019_ml',
    'Transcribe',
    '/assets/images/designer/network_aws2019/ml/Amazon-Transcribe.svg'
  )
  AWS2019Render(
    'aws2019_ml12',
    'aws2019_ml',
    'Translate',
    '/assets/images/designer/network_aws2019/ml/Amazon-Translate.svg'
  )
  AWS2019Render(
    'aws2019_ml13',
    'aws2019_ml',
    'MXNet-on-AWS',
    '/assets/images/designer/network_aws2019/ml/Apache-MXNet-on-AWS.svg'
  )
  AWS2019Render(
    'aws2019_ml14',
    'aws2019_ml',
    'Deep-Learning-AMIs',
    '/assets/images/designer/network_aws2019/ml/AWS-Deep-Learning-AMIs.svg'
  )
  AWS2019Render(
    'aws2019_ml15',
    'aws2019_ml',
    'DeepLens',
    '/assets/images/designer/network_aws2019/ml/AWS-DeepLens.svg'
  )
  AWS2019Render(
    'aws2019_ml16',
    'aws2019_ml',
    'DeepRacer',
    '/assets/images/designer/network_aws2019/ml/AWS-DeepRacer.svg'
  )
  AWS2019Render(
    'aws2019_ml17',
    'aws2019_ml',
    'Learning',
    '/assets/images/designer/network_aws2019/ml/Machine-Learning.svg'
  )
  AWS2019Render(
    'aws2019_ml18',
    'aws2019_ml',
    'TensorFlow-on-AWS',
    '/assets/images/designer/network_aws2019/ml/TensorFlow-on-AWS.svg'
  )
  AWS2019Render(
    'aws2019_ml19',
    'aws2019_ml',
    'Containers',
    '/assets/images/designer/network_aws2019/ml/AWS-Deep-Learning-Containers.svg'
  )
  AWS2019Render(
    'aws2019_ml20',
    'aws2019_ml',
    'Rekognition_Image',
    '/assets/images/designer/network_aws2019/ml/Amazon-Rekognition_Image.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ml21',
    'aws2019_ml',
    'Video',
    '/assets/images/designer/network_aws2019/ml/Amazon-Rekognition_Video.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ml22',
    'aws2019_ml',
    'Model',
    '/assets/images/designer/network_aws2019/ml/Amazon-SageMaker_Model.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ml23',
    'aws2019_ml',
    'Notebook',
    '/assets/images/designer/network_aws2019/ml/Amazon-SageMaker_Notebook.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ml24',
    'aws2019_ml',
    'Train',
    '/assets/images/designer/network_aws2019/ml/Amazon-SageMaker_Train.svg',
    56,
    56
  )
  Schema.addCategory({
    name: 'aws2019_robotics',
    text: 'Robotics',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_robotics1',
    'aws2019_robotics',
    'Robotics',
    '/assets/images/designer/network_aws2019/robotics/Robotics.svg'
  )
  AWS2019Render(
    'aws2019_robotics2',
    'aws2019_robotics',
    'RoboMaker',
    '/assets/images/designer/network_aws2019/robotics/AWS-RoboMaker.svg'
  )
  AWS2019Render(
    'aws2019_robotics3',
    'aws2019_robotics',
    'Simulation',
    '/assets/images/designer/network_aws2019/robotics/AWS-RoboMaker_Simulation.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_robotics4',
    'aws2019_robotics',
    'Fleet-Management',
    '/assets/images/designer/network_aws2019/robotics/AWS-RoboMaker_Fleet-Management.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_robotics5',
    'aws2019_robotics',
    'Development-Environment',
    '/assets/images/designer/network_aws2019/robotics/AWS-RoboMaker_Development-Environment.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_robotics6',
    'aws2019_robotics',
    'Cloud-Extension-ROS',
    '/assets/images/designer/network_aws2019/robotics/AWS-RoboMaker_Cloud-Extension-ROS.svg',
    56,
    56
  )
  Schema.addCategory({
    name: 'aws2019_mobile',
    text: 'Mobile',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_mobile1',
    'aws2019_mobile',
    'Gateway',
    '/assets/images/designer/network_aws2019/mobile/Amazon-API-Gateway.svg'
  )
  AWS2019Render(
    'aws2019_mobile2',
    'aws2019_mobile',
    'Pinpoint',
    '/assets/images/designer/network_aws2019/mobile/Amazon-Pinpoint.svg'
  )
  AWS2019Render(
    'aws2019_mobile3',
    'aws2019_mobile',
    'Amplify',
    '/assets/images/designer/network_aws2019/mobile/AWS-Amplify.svg'
  )
  AWS2019Render(
    'aws2019_mobile4',
    'aws2019_mobile',
    'AppSync',
    '/assets/images/designer/network_aws2019/mobile/AWS-AppSync.svg'
  )
  AWS2019Render(
    'aws2019_mobile5',
    'aws2019_mobile',
    'Device-Farm',
    '/assets/images/designer/network_aws2019/mobile/AWS-Device-Farm.svg'
  )
  AWS2019Render(
    'aws2019_mobile6',
    'aws2019_mobile',
    'Mobile',
    '/assets/images/designer/network_aws2019/mobile/Mobile.svg'
  )
  AWS2019Render(
    'aws2019_mobile7',
    'aws2019_mobile',
    'Endpoint',
    '/assets/images/designer/network_aws2019/mobile/Amazon-API-Gateway_Endpoint.svg',
    56,
    56
  )
  Schema.addCategory({
    name: 'aws2019_ai',
    text: 'Application Integration',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_ai1',
    'aws2019_ai',
    'MQ',
    '/assets/images/designer/network_aws2019/ai/Amazon-MQ.svg'
  )
  AWS2019Render(
    'aws2019_ai2',
    'aws2019_ai',
    'Service-SNS',
    '/assets/images/designer/network_aws2019/ai/Amazon-Simple-Notification-Service-SNS.svg'
  )
  AWS2019Render(
    'aws2019_ai3',
    'aws2019_ai',
    'Service-SQS',
    '/assets/images/designer/network_aws2019/ai/Amazon-Simple-Queue-Service-SQS.svg'
  )
  AWS2019Render(
    'aws2019_ai4',
    'aws2019_ai',
    'Integration',
    '/assets/images/designer/network_aws2019/ai/Application-Integration.svg'
  )
  AWS2019Render(
    'aws2019_ai5',
    'aws2019_ai',
    'AppSync',
    '/assets/images/designer/network_aws2019/ai/Amazon-AppSync.svg'
  )
  AWS2019Render(
    'aws2019_ai6',
    'aws2019_ai',
    'EventBridge',
    '/assets/images/designer/network_aws2019/ai/Amazon-EventBridge.svg'
  )
  AWS2019Render(
    'aws2019_ai7',
    'aws2019_ai',
    'Step-Functions',
    '/assets/images/designer/network_aws2019/ai/AWS-Step-Functions.svg'
  )
  AWS2019Render(
    'aws2019_ai8',
    'aws2019_ai',
    'Email-Notification',
    '/assets/images/designer/network_aws2019/ai/Amazon-Simple-Notification-Service-SNS_Email-Notification.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ai9',
    'aws2019_ai',
    'HTTP-Notification',
    '/assets/images/designer/network_aws2019/ai/Amazon-Simple-Notification-Service-SNS_HTTP-Notification.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ai10',
    'aws2019_ai',
    'Topic',
    '/assets/images/designer/network_aws2019/ai/Amazon-Simple-Notification-Service-SNS_Topic.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ai11',
    'aws2019_ai',
    'Message',
    '/assets/images/designer/network_aws2019/ai/Amazon-Simple-Queue-Service-SQS_Message.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_ai12',
    'aws2019_ai',
    'Queue',
    '/assets/images/designer/network_aws2019/ai/Amazon-Simple-Queue-Service-SQS_Queue.svg',
    56,
    56
  )
  Schema.addCategory({
    name: 'aws2019_ms',
    text: 'Media Services',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_ms1',
    'aws2019_ms',
    'Elastic-Transcoder',
    '/assets/images/designer/network_aws2019/ms/Amazon-Elastic-Transcoder.svg'
  )
  AWS2019Render(
    'aws2019_ms2',
    'aws2019_ms',
    'Video-Streams',
    '/assets/images/designer/network_aws2019/ms/Amazon-Kinesis-Video-Streams.svg'
  )
  AWS2019Render(
    'aws2019_ms3',
    'aws2019_ms',
    'MediaConnect',
    '/assets/images/designer/network_aws2019/ms/AWS-Elemental-MediaConnect.svg'
  )
  AWS2019Render(
    'aws2019_ms4',
    'aws2019_ms',
    'MediaConvert',
    '/assets/images/designer/network_aws2019/ms/AWS-Elemental-MediaConvert.svg'
  )
  AWS2019Render(
    'aws2019_ms5',
    'aws2019_ms',
    'MediaLive',
    '/assets/images/designer/network_aws2019/ms/AWS-Elemental-MediaLive.svg'
  )
  AWS2019Render(
    'aws2019_ms6',
    'aws2019_ms',
    'MediaPackage',
    '/assets/images/designer/network_aws2019/ms/AWS-Elemental-MediaPackage.svg'
  )
  AWS2019Render(
    'aws2019_ms7',
    'aws2019_ms',
    'MediaStore',
    '/assets/images/designer/network_aws2019/ms/AWS-Elemental-MediaStore.svg'
  )
  AWS2019Render(
    'aws2019_ms8',
    'aws2019_ms',
    'MediaTailor',
    '/assets/images/designer/network_aws2019/ms/AWS-Elemental-MediaTailor.svg'
  )
  AWS2019Render(
    'aws2019_ms9',
    'aws2019_ms',
    'Elemental-Conductor',
    '/assets/images/designer/network_aws2019/ms/AWS-Elemental-Conductor.svg'
  )
  AWS2019Render(
    'aws2019_ms10',
    'aws2019_ms',
    'Media-Services',
    '/assets/images/designer/network_aws2019/ms/Media-Services.svg'
  )
  Schema.addCategory({
    name: 'aws2019_ba',
    text: 'Business Applications',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_ba1',
    'aws2019_ba',
    'Business',
    '/assets/images/designer/network_aws2019/ba/Alexa-For-Business.svg'
  )
  AWS2019Render(
    'aws2019_ba2',
    'aws2019_ba',
    'Chime',
    '/assets/images/designer/network_aws2019/ba/Amazon-Chime.svg'
  )
  AWS2019Render(
    'aws2019_ba3',
    'aws2019_ba',
    'WorkMail',
    '/assets/images/designer/network_aws2019/ba/Amazon-WorkMail.svg'
  )
  AWS2019Render(
    'aws2019_ba4',
    'aws2019_ba',
    'Applications',
    '/assets/images/designer/network_aws2019/ba/Business-Applications.svg'
  )
  Schema.addCategory({
    name: 'aws2019_euc',
    text: 'End User Computing',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_euc1',
    'aws2019_euc',
    'Appstream-2.0',
    '/assets/images/designer/network_aws2019/euc/Amazon-Appstream-2.0.svg'
  )
  AWS2019Render(
    'aws2019_euc2',
    'aws2019_euc',
    'Workspaces',
    '/assets/images/designer/network_aws2019/euc/Amazon-Workspaces.svg'
  )
  AWS2019Render(
    'aws2019_euc3',
    'aws2019_euc',
    'WorkLink',
    '/assets/images/designer/network_aws2019/euc/Amazon-WorkLink.svg'
  )
  AWS2019Render(
    'aws2019_euc4',
    'aws2019_euc',
    'WorkDocs',
    '/assets/images/designer/network_aws2019/euc/Amazon-WorkDocs.svg'
  )
  AWS2019Render(
    'aws2019_euc5',
    'aws2019_euc',
    'User-Computing',
    '/assets/images/designer/network_aws2019/euc/End-User-Computing.svg'
  )
  Schema.addCategory({
    name: 'aws2019_iot',
    text: 'Internet of Things',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_iot1',
    'aws2019_iot',
    'FreeRTOS',
    '/assets/images/designer/network_aws2019/iot/Amazon-FreeRTOS.svg'
  )
  AWS2019Render(
    'aws2019_iot2',
    'aws2019_iot',
    '1-Click',
    '/assets/images/designer/network_aws2019/iot/AWS-IoT-1-Click.svg'
  )
  AWS2019Render(
    'aws2019_iot3',
    'aws2019_iot',
    'Analytics',
    '/assets/images/designer/network_aws2019/iot/AWS-IoT-Analytics.svg'
  )
  AWS2019Render(
    'aws2019_iot4',
    'aws2019_iot',
    'Button',
    '/assets/images/designer/network_aws2019/iot/AWS-IoT-Button.svg'
  )
  AWS2019Render(
    'aws2019_iot5',
    'aws2019_iot',
    'Core',
    '/assets/images/designer/network_aws2019/iot/AWS-IoT-Core.svg'
  )
  AWS2019Render(
    'aws2019_iot6',
    'aws2019_iot',
    'Device-Defender',
    '/assets/images/designer/network_aws2019/iot/AWS-IoT-Device-Defender.svg'
  )
  AWS2019Render(
    'aws2019_iot7',
    'aws2019_iot',
    'Device-Management',
    '/assets/images/designer/network_aws2019/iot/AWS-Iot-device-Management.svg'
  )
  AWS2019Render(
    'aws2019_iot8',
    'aws2019_iot',
    'Events',
    '/assets/images/designer/network_aws2019/iot/AWS-IoT-Events.svg'
  )
  AWS2019Render(
    'aws2019_iot9',
    'aws2019_iot',
    'Greengrass',
    '/assets/images/designer/network_aws2019/iot/AWS-IoT-Greengrass.svg'
  )
  AWS2019Render(
    'aws2019_iot10',
    'aws2019_iot',
    'SiteWise',
    '/assets/images/designer/network_aws2019/iot/AWS-IoT-SiteWise.svg'
  )
  AWS2019Render(
    'aws2019_iot11',
    'aws2019_iot',
    'Things-Graph',
    '/assets/images/designer/network_aws2019/iot/AWS-IoT-Things-Graph.svg'
  )
  AWS2019Render(
    'aws2019_iot12',
    'aws2019_iot',
    'Internet-of-Things',
    '/assets/images/designer/network_aws2019/iot/Internet-of-Things.svg'
  )
  AWS2019Render(
    'aws2019_iot13',
    'aws2019_iot',
    'Channel',
    '/assets/images/designer/network_aws2019/iot/AWS-IoT-Analytics_Channel.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot14',
    'aws2019_iot',
    'Data-Set',
    '/assets/images/designer/network_aws2019/iot/AWS-IoT-Analytics_Data-Set.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot15',
    'aws2019_iot',
    'Data-Store',
    '/assets/images/designer/network_aws2019/iot/AWS-IoT-Analytics_Data-Store.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot16',
    'aws2019_iot',
    'Pipeline',
    '/assets/images/designer/network_aws2019/iot/AWS-IoT-Analytics_Pipeline.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot17',
    'aws2019_iot',
    'Notebook',
    '/assets/images/designer/network_aws2019/iot/AWS-IoT-Analytics_Notebook.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot18',
    'aws2019_iot',
    'Connector',
    '/assets/images/designer/network_aws2019/iot/AWS-IoT-Greengrass_Connector.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot19',
    'aws2019_iot',
    'Action',
    '/assets/images/designer/network_aws2019/iot/IoT_Action.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot20',
    'aws2019_iot',
    'Actuator',
    '/assets/images/designer/network_aws2019/iot/IoT_Actuator.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot21',
    'aws2019_iot',
    'Alexa-enabled-device',
    '/assets/images/designer/network_aws2019/iot/IoT_Alexa-enabled-device.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot22',
    'aws2019_iot',
    'Alexa-skill',
    '/assets/images/designer/network_aws2019/iot/IoT_Alexa-skill.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot23',
    'aws2019_iot',
    'Alexa-voice-service',
    '/assets/images/designer/network_aws2019/iot/IoT_Alexa-voice-service.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot24',
    'aws2019_iot',
    'Bank',
    '/assets/images/designer/network_aws2019/iot/IoT_Bank.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot25',
    'aws2019_iot',
    'Bicycle',
    '/assets/images/designer/network_aws2019/iot/IoT_Bicycle.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot26',
    'aws2019_iot',
    'Camera',
    '/assets/images/designer/network_aws2019/iot/IoT_Camera.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot27',
    'aws2019_iot',
    'Car',
    '/assets/images/designer/network_aws2019/iot/IoT_Car.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot28',
    'aws2019_iot',
    'Cart',
    '/assets/images/designer/network_aws2019/iot/IoT_Cart.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot29',
    'aws2019_iot',
    'Certificate-manager',
    '/assets/images/designer/network_aws2019/iot/IoT_Certificate-manager.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot30',
    'aws2019_iot',
    'Coffee-pot',
    '/assets/images/designer/network_aws2019/iot/IoT_Coffee-pot.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot31',
    'aws2019_iot',
    'Desired-state',
    '/assets/images/designer/network_aws2019/iot/IoT_Desired-state.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot32',
    'aws2019_iot',
    'Device-gateway',
    '/assets/images/designer/network_aws2019/iot/IoT_Device-gateway.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot33',
    'aws2019_iot',
    'Door-lock',
    '/assets/images/designer/network_aws2019/iot/IoT_Door-lock.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot34',
    'aws2019_iot',
    'Echo',
    '/assets/images/designer/network_aws2019/iot/IoT_Echo.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot35',
    'aws2019_iot',
    'Factory',
    '/assets/images/designer/network_aws2019/iot/IoT_Factory.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot36',
    'aws2019_iot',
    'Fire-TV',
    '/assets/images/designer/network_aws2019/iot/IoT_Fire-TV.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot37',
    'aws2019_iot',
    'Generic',
    '/assets/images/designer/network_aws2019/iot/IoT_Generic.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot38',
    'aws2019_iot',
    'Hardware-board',
    '/assets/images/designer/network_aws2019/iot/IoT_Hardware-board.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot39',
    'aws2019_iot',
    'House',
    '/assets/images/designer/network_aws2019/iot/IoT_House.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot40',
    'aws2019_iot',
    'HTTP-2-protocol',
    '/assets/images/designer/network_aws2019/iot/IoT_HTTP-2-protocol.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot41',
    'aws2019_iot',
    'HTTP-protocol',
    '/assets/images/designer/network_aws2019/iot/IoT_HTTP-protocol.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot42',
    'aws2019_iot',
    'Lambda-function',
    '/assets/images/designer/network_aws2019/iot/IoT_Lambda-function.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot43',
    'aws2019_iot',
    'Lightbulb',
    '/assets/images/designer/network_aws2019/iot/IoT_Lightbulb.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot44',
    'aws2019_iot',
    'Medical-emergency',
    '/assets/images/designer/network_aws2019/iot/IoT_Medical-emergency.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot45',
    'aws2019_iot',
    'MQTT-protocol',
    '/assets/images/designer/network_aws2019/iot/IoT_MQTT-protocol.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot46',
    'aws2019_iot',
    'Over-the-air-update',
    '/assets/images/designer/network_aws2019/iot/IoT_Over-the-air-update.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot47',
    'aws2019_iot',
    'Police-emergency',
    '/assets/images/designer/network_aws2019/iot/IoT_Police-emergency.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot48',
    'aws2019_iot',
    'Policy',
    '/assets/images/designer/network_aws2019/iot/IoT_Policy.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot49',
    'aws2019_iot',
    'Reported-state',
    '/assets/images/designer/network_aws2019/iot/IoT_Reported-state.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot50',
    'aws2019_iot',
    'Rule',
    '/assets/images/designer/network_aws2019/iot/IoT_Rule.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot51',
    'aws2019_iot',
    'Sensor',
    '/assets/images/designer/network_aws2019/iot/IoT_Sensor.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot52',
    'aws2019_iot',
    'Servo',
    '/assets/images/designer/network_aws2019/iot/IoT_Servo.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot53',
    'aws2019_iot',
    'Shadow',
    '/assets/images/designer/network_aws2019/iot/IoT_Shadow.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot54',
    'aws2019_iot',
    'Simulator',
    '/assets/images/designer/network_aws2019/iot/IoT_Simulator.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot55',
    'aws2019_iot',
    'Thermostat',
    '/assets/images/designer/network_aws2019/iot/IoT_Thermostat.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot56',
    'aws2019_iot',
    'Topic',
    '/assets/images/designer/network_aws2019/iot/IoT_Topic.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot57',
    'aws2019_iot',
    'Travel',
    '/assets/images/designer/network_aws2019/iot/IoT_Travel.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot58',
    'aws2019_iot',
    'Utility',
    '/assets/images/designer/network_aws2019/iot/IoT_Utility.svg',
    56,
    56
  )
  AWS2019Render(
    'aws2019_iot59',
    'aws2019_iot',
    'Windfarm',
    '/assets/images/designer/network_aws2019/iot/IoT_Windfarm.svg',
    56,
    56
  )
  Schema.addCategory({
    name: 'aws2019_gt',
    text: 'Game Tech',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_gt1',
    'aws2019_gt',
    'GameLift',
    '/assets/images/designer/network_aws2019/gt/Amazon-GameLift.svg'
  )
  AWS2019Render(
    'aws2019_gt2',
    'aws2019_gt',
    'Tech',
    '/assets/images/designer/network_aws2019/gt/Game-Tech.svg'
  )
  Schema.addCategory({ name: 'aws2019_av', text: 'AR & VR', dataAttributes: [] })
  AWS2019Render(
    'aws2019_av1',
    'aws2019_av',
    'Sumerian',
    '/assets/images/designer/network_aws2019/av/Amazon-Sumerian.svg'
  )
  AWS2019Render(
    'aws2019_av2',
    'aws2019_av',
    'AR-VR',
    '/assets/images/designer/network_aws2019/av/AR-VR.svg'
  )
  Schema.addCategory({
    name: 'aws2019_acm',
    text: 'AWS Cost Management',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_acm1',
    'aws2019_acm',
    'Budgets',
    '/assets/images/designer/network_aws2019/acm/AWS-Budgets.svg'
  )
  AWS2019Render(
    'aws2019_acm2',
    'aws2019_acm',
    'Cost-and-Usage-Report',
    '/assets/images/designer/network_aws2019/acm/AWS-Cost-and-Usage-Report.svg'
  )
  AWS2019Render(
    'aws2019_acm3',
    'aws2019_acm',
    'Cost-Explorer',
    '/assets/images/designer/network_aws2019/acm/AWS-Cost-Explorer.svg'
  )
  AWS2019Render(
    'aws2019_acm4',
    'aws2019_acm',
    'Cost-Management',
    '/assets/images/designer/network_aws2019/acm/AWS-Cost-Management.svg'
  )
  AWS2019Render(
    'aws2019_acm5',
    'aws2019_acm',
    'Reserved-Instance-Reporting',
    '/assets/images/designer/network_aws2019/acm/Reserved-Instance-Reporting.svg'
  )
  Schema.addCategory({
    name: 'aws2019_blockchain',
    text: 'Blockchain',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_blockchain1',
    'aws2019_blockchain',
    'Managed-Blockchain',
    '/assets/images/designer/network_aws2019/blockchain/Amazon-Managed-Blockchain.svg'
  )
  AWS2019Render(
    'aws2019_blockchain2',
    'aws2019_blockchain',
    'Quantum-Ledger-Database-QLDB',
    '/assets/images/designer/network_aws2019/blockchain/Amazon-Quantum-Ledger-Database-QLDB.svg'
  )
  AWS2019Render(
    'aws2019_blockchain3',
    'aws2019_blockchain',
    'Blockchain',
    '/assets/images/designer/network_aws2019/blockchain/Blockchain.svg'
  )
  Schema.addCategory({
    name: 'aws2019_ce',
    text: 'Customer Engagement',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_ce1',
    'aws2019_ce',
    'Connect',
    '/assets/images/designer/network_aws2019/ce/Amazon-Connect.svg'
  )
  AWS2019Render(
    'aws2019_ce2',
    'aws2019_ce',
    'Pinpoint',
    '/assets/images/designer/network_aws2019/ce/Amazon-Pinpoint.svg'
  )
  AWS2019Render(
    'aws2019_ce3',
    'aws2019_ce',
    'Simple-Email-Service-SES',
    '/assets/images/designer/network_aws2019/ce/Amazon-Simple-Email-Service-SES.svg'
  )
  AWS2019Render(
    'aws2019_ce4',
    'aws2019_ce',
    'Customer-Engagement',
    '/assets/images/designer/network_aws2019/ce/Customer-Engagement.svg'
  )
  AWS2019Render(
    'aws2019_ce5',
    'aws2019_ce',
    'Simple-Email-Service-SES_Email',
    '/assets/images/designer/network_aws2019/ce/Amazon-Simple-Email-Service-SES_Email.svg',
    56,
    56
  )
  Schema.addCategory({
    name: 'aws2019_satellite',
    text: 'Satellite',
    dataAttributes: [],
  })
  AWS2019Render(
    'aws2019_satellite1',
    'aws2019_satellite',
    'Satellite',
    '/assets/images/designer/network_aws2019/satellite/Satellite.svg'
  )
  AWS2019Render(
    'aws2019_satellite2',
    'aws2019_satellite',
    'Ground-Station',
    '/assets/images/designer/network_aws2019/satellite/AWS-Ground-Station.svg'
  )
  function AWS2019Render(b, c, f, e, d, a) {
    Schema.addShape({
      name: b,
      title: f,
      category: c,
      props: { w: d || 75, h: a || 75 },
      lineStyle: { lineWidth: 0 },
      textBlock: [
        { position: { x: '-20', y: 'h', w: 'w+40', h: '30' }, text: f },
      ],
      path: [
        {
          fillStyle: { type: 'image', fileId: e, display: 'stretch' },
          lineStyle: { lineWidth: 0 },
          actions: { ref: 'rectangle' },
        },
      ],
      drawIcon: function (i, j) {
        var k = 0
        var g = 0
        return [
          {
            fillStyle: {
              type: 'image',
              fileId: e,
              imageW: 30,
              imageH: 30,
              display: 'stretch',
            },
            lineStyle: { lineWidth: 0 },
            actions: [
              { action: 'move', x: g, y: k },
              { action: 'line', x: i, y: k },
              { action: 'line', x: i, y: j },
              { action: 'line', x: g, y: j },
              { action: 'close' },
            ],
          },
        ]
      },
    })
  }
  function AWS2019RenderGroupsNormal(c, e, f, b, a, d) {
    Schema.addShape({
      name: c,
      title: f,
      category: e,
      attribute: { container: true },
      props: { w: 250, h: 280 },
      anchors: [],
      lineStyle: a || { lineWidth: 1, lineColor: '138,138,138' },
      fillStyle: b || {},
      fontStyle: { size: 13, textAlign: 'center', color: d || '138,138,138' },
      textBlock: [{ position: { x: '0', y: '6', w: 'w', h: '25' }, text: f }],
      path: [{ actions: { ref: 'rectangle' } }],
    })
  }
  function AWS2019RenderGroups(c, e, g, f, d, b, a) {
    Schema.addShape({
      name: c,
      title: g,
      category: e,
      attribute: { container: true },
      props: { w: 300, h: 180 },
      anchors: [],
      lineStyle: a || { lineWidth: 1, lineColor: '138,138,138' },
      fillStyle: b || {},
      fontStyle: { size: 13, textAlign: 'left', bold: true },
      textBlock: [{ position: { x: '42', y: '0', w: 'w-56', h: '35' }, text: g }],
      path: [
        { actions: { ref: 'rectangle' } },
        {
          lineStyle: { lineWidth: 0 },
          fillStyle: {
            type: 'image',
            fileId: f,
            imageX: 0,
            imageY: 0,
            imageW: 35,
            imageH: 35,
            display: 'static',
          },
          actions: { ref: 'rectangle' },
        },
      ],
      drawIcon: function (j, k) {
        var i = -4
        j += 4
        var l = -10
        k += 8
        return [
          {
            lineStyle: { lineWidth: 0 },
            fillStyle: {
              type: 'image',
              fileId: d,
              imageW: 30,
              imageH: 30,
              display: 'orignal',
            },
            actions: [
              { action: 'move', x: i, y: l },
              { action: 'line', x: j, y: l },
              { action: 'line', x: j, y: k },
              { action: 'line', x: i, y: k },
              { action: 'close' },
            ],
          },
        ]
      },
    })
  }
  Schema.addCategory({
    name: 'aws_analytics',
    text: 'AWS Analytics',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'elastic search service',
    title: 'Elastic Search Service',
    category: 'aws_analytics',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/analytics/Analytics_AmazonElasticsearchService.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/analytics/Analytics_AmazonElasticsearchService.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'emr',
    title: 'EMR',
    category: 'aws_analytics',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/analytics/Analytics_AmazonEMR.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/analytics/Analytics_AmazonEMR.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'emr cluster',
    title: 'EMR Cluster',
    category: 'aws_analytics',
    props: { w: 69, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/analytics/Analytics_AmazonEMR_cluster.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/analytics/Analytics_AmazonEMR_cluster.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'emr engine',
    title: 'EMR Engine',
    category: 'aws_analytics',
    props: { w: 76, h: 55 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/analytics/Analytics_AmazonEMR_EMRengine.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/analytics/Analytics_AmazonEMR_EMRengine.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'emr_maprm3',
    title: 'EMR_MAPRM3',
    category: 'aws_analytics',
    props: { w: 76, h: 55 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/analytics/Analytics_AmazonEMR_EMRengineMapRM3.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/analytics/Analytics_AmazonEMR_EMRengineMapRM3.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'emr_maprm5',
    title: 'EMR_MAPRM5',
    category: 'aws_analytics',
    props: { w: 75, h: 55 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/analytics/Analytics_AmazonEMR_EMRengineMapRM5.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/analytics/Analytics_AmazonEMR_EMRengineMapRM5.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'emr_maprm7',
    title: 'EMR_MAPRM7',
    category: 'aws_analytics',
    props: { w: 76, h: 55 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/analytics/Analytics_AmazonEMR_EMRengineMapRM7.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/analytics/Analytics_AmazonEMR_EMRengineMapRM7.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'emr_hdf',
    title: 'EMR_HDF',
    category: 'aws_analytics',
    props: { w: 73, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/analytics/Analytics_AmazonEMR_HDFScluster.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/analytics/Analytics_AmazonEMR_HDFScluster.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'kinesis',
    title: 'Kinesis',
    category: 'aws_analytics',
    props: { w: 64, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/analytics/Analytics_AmazonKinesis.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/analytics/Analytics_AmazonKinesis.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'kinesisan alytics',
    title: 'Kinesis Analytics',
    category: 'aws_analytics',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/analytics/Analytics_AmazonKinesis_AmazonKinesisAnalytics.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/analytics/Analytics_AmazonKinesis_AmazonKinesisAnalytics.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'kinesis-enabled',
    title: 'Kinesis-enabled',
    category: 'aws_analytics',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/analytics/Analytics_AmazonKinesis_AmazonKinesis-enabledapp.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/analytics/Analytics_AmazonKinesis_AmazonKinesis-enabledapp.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'kinesis firehose',
    title: 'Kinesis Firehose',
    category: 'aws_analytics',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/analytics/Analytics_AmazonKinesis_AmazonKinesisFirehose.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/analytics/Analytics_AmazonKinesis_AmazonKinesisFirehose.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'kinesis streams',
    title: 'Kinesis Streams',
    category: 'aws_analytics',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/analytics/Analytics_AmazonKinesis_AmazonKinesisStreams.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/analytics/Analytics_AmazonKinesis_AmazonKinesisStreams.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'machine learning',
    title: 'Machine Learning',
    category: 'aws_analytics',
    props: { w: 63, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/analytics/Analytics_AmazonMachineLearning.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/analytics/Analytics_AmazonMachineLearning.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'quick sight',
    title: 'Quick Sight',
    category: 'aws_analytics',
    props: { w: 68, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/analytics/Analytics_AmazonQuickSight.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/analytics/Analytics_AmazonQuickSight.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws data pipeline',
    title: 'AWS Data Pipeline',
    category: 'aws_analytics',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/analytics/Analytics_AWSDataPipeline.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/analytics/Analytics_AWSDataPipeline.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'aws_app_servers',
    text: 'AWS App Servers',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'api gateway',
    title: 'API Gateway',
    category: 'aws_app_servers',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonAPIGateway.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonAPIGateway.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'app stream',
    title: 'App Stream',
    category: 'aws_app_servers',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonAppStream.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonAppStream.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cloud search',
    title: 'Cloud Search',
    category: 'aws_app_servers',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonCloudSearch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonCloudSearch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cloud search metadata',
    title: 'Cloud Search Metadata',
    category: 'aws_app_servers',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonCloudSearch_SDFmetadata.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonCloudSearch_SDFmetadata.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'elastic transcoder',
    title: 'Elastic Transcoder',
    category: 'aws_app_servers',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonElasticTranscoder.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonElasticTranscoder.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ses',
    title: 'SES',
    category: 'aws_app_servers',
    props: { w: 66, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonSES.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonSES.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ses email',
    title: 'SES Email',
    category: 'aws_app_servers',
    props: { w: 77, h: 58 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonSES_email.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonSES_email.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sqs',
    title: 'SQS',
    category: 'aws_app_servers',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonSQS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonSQS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sqs message',
    title: 'SQS Message',
    category: 'aws_app_servers',
    props: { w: 67, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonSQS_message.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonSQS_message.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sqs queue',
    title: 'SQS Queue',
    category: 'aws_app_servers',
    props: { w: 77, h: 50 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonSQS_queue.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonSQS_queue.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'swf',
    title: 'SWF',
    category: 'aws_app_servers',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonSWF.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonSWF.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'swf decider',
    title: 'SWF Decider',
    category: 'aws_app_servers',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonSWF_decider.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonSWF_decider.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'swf worker',
    title: 'SWF Worker',
    category: 'aws_app_servers',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonSWF_worker.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/applicationservers/Application-Services_AmazonSWF_worker.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'aws_compute',
    text: 'AWS Compute',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'ec2',
    title: 'EC2',
    category: 'aws_compute',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/compute/Compute_AmazonEC2.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/compute/Compute_AmazonEC2.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ami',
    title: 'AMI',
    category: 'aws_compute',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/compute/Compute_AmazonEC2_AMI.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/compute/Compute_AmazonEC2_AMI.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'auto scaling',
    title: 'Auto Scaling',
    category: 'aws_compute',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/compute/Compute_AmazonEC2_AutoScaling.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/compute/Compute_AmazonEC2_AutoScaling.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'db on instance',
    title: 'DB On Instance',
    category: 'aws_compute',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/compute/Compute_AmazonEC2_DBoninstance.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/compute/Compute_AmazonEC2_DBoninstance.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'elastic ip',
    title: 'Elastic IP',
    category: 'aws_compute',
    props: { w: 75, h: 21 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/compute/Compute_AmazonEC2_ElasticIP.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/compute/Compute_AmazonEC2_ElasticIP.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'instance',
    title: 'Instance',
    category: 'aws_compute',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/compute/Compute_AmazonEC2_instance.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/compute/Compute_AmazonEC2_instance.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'instances',
    title: 'Instances',
    category: 'aws_compute',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/compute/Compute_AmazonEC2_instances.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/compute/Compute_AmazonEC2_instances.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'instance with cloudwatch',
    title: 'Instance with CloudWatch',
    category: 'aws_compute',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/compute/Compute_AmazonEC2_instancewithCloudWatch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/compute/Compute_AmazonEC2_instancewithCloudWatch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'optimized instance',
    title: 'Optimized Instance',
    category: 'aws_compute',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/compute/Compute_AmazonEC2_optimizedinstance.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/compute/Compute_AmazonEC2_optimizedinstance.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'spot instance',
    title: 'Spot Instance',
    category: 'aws_compute',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/compute/Compute_AmazonEC2_Spotinstance.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/compute/Compute_AmazonEC2_Spotinstance.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ecr',
    title: 'ECR',
    category: 'aws_compute',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/compute/Compute_AmazonECR.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/compute/Compute_AmazonECR.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ecs',
    title: 'ECS',
    category: 'aws_compute',
    props: { w: 75, h: 70 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/compute/Compute_AmazonECS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/compute/Compute_AmazonECS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'elastic beanstalk',
    title: 'Elastic Beanstalk',
    category: 'aws_compute',
    props: { w: 54, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/compute/Compute_AWSElasticBeanstalk.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/compute/Compute_AWSElasticBeanstalk.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'elastic beanstalk app',
    title: 'Elastic Beanstalk App',
    category: 'aws_compute',
    props: { w: 42, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/compute/Compute_AWSElasticBeanstalk_application.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/compute/Compute_AWSElasticBeanstalk_application.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'elastic beanstalk deploy',
    title: 'Elastic Beanstalk Deploy',
    category: 'aws_compute',
    props: { w: 59, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/compute/Compute_AWSElasticBeanstalk_deployment.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/compute/Compute_AWSElasticBeanstalk_deployment.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'lambda',
    title: 'Lambda',
    category: 'aws_compute',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/compute/Compute_AWSLambda.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/compute/Compute_AWSLambda.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'elastic load balancing',
    title: 'Elastic Load Balancing',
    category: 'aws_compute',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/compute/Compute_ElasticLoadBalancing.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/compute/Compute_ElasticLoadBalancing.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'aws_database',
    text: 'AWS Database',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'dynamo db',
    title: 'Dynamo DB',
    category: 'aws_database',
    props: { w: 69, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonDynamoDB.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonDynamoDB.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'dynamo db attribute',
    title: 'Dynamo DB Attribute',
    category: 'aws_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonDynamoDB_attribute.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonDynamoDB_attribute.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'dynamo db attributes',
    title: 'Dynamo DB Attributes',
    category: 'aws_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonDynamoDB_attributes.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonDynamoDB_attributes.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'global secondary index',
    title: 'Global Secondary Index',
    category: 'aws_database',
    props: { w: 75, h: 73 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonDynamoDB_globalsecondaryindex.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonDynamoDB_globalsecondaryindex.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'dynamo db item',
    title: 'Dynamo DB Item',
    category: 'aws_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonDynamoDB_item.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonDynamoDB_item.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'dynamo db items',
    title: 'Dynamo DB Items',
    category: 'aws_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonDynamoDB_items.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonDynamoDB_items.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'dynamo db table',
    title: 'Dynamo DB table',
    category: 'aws_database',
    props: { w: 75, h: 73 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonDynamoDB_table.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonDynamoDB_table.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'elastic cache',
    title: 'Elastic Cache',
    category: 'aws_database',
    props: { w: 65, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonElasticCache.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonElasticCache.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'elastic cache cachenode',
    title: 'Elastic Cache Cachenode',
    category: 'aws_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonElasticCache_cachenode.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonElasticCache_cachenode.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'elastic cache memcached',
    title: 'Elastic Cache Memcached',
    category: 'aws_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonElasticCache_Memcached.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonElasticCache_Memcached.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'elastic cache redis',
    title: 'Elastic Cache Redis',
    category: 'aws_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonElasticCache_Redis.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonElasticCache_Redis.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'rds',
    title: 'RDS',
    category: 'aws_database',
    props: { w: 67, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonRDS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonRDS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'rds ms sql instance',
    title: 'RDS MS SQL Instance',
    category: 'aws_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonRDS_MSSQLinstance.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonRDS_MSSQLinstance.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'rds ms sql instance lternate',
    title: 'RDS MS SQL Instance Lternate',
    category: 'aws_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonRDS_MSSQLinstancealternate.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonRDS_MSSQLinstancealternate.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'rds mysql db instance',
    title: 'RDS MySQL DB Instance',
    category: 'aws_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonRDS_MySQLDBinstance.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonRDS_MySQLDBinstance.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'rds mysql instance lternate',
    title: 'RDS MySQL Instance Lternate',
    category: 'aws_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonRDS_MySQLinstancealternate.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonRDS_MySQLinstancealternate.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'rds oracle db instance',
    title: 'RDS Oracle DB Instance',
    category: 'aws_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonRDS_OracleDBinstance.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonRDS_OracleDBinstance.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'rds oracle db instance alternate',
    title: 'RDS Oracle DB Instance Alternate',
    category: 'aws_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonRDS_OracleDBinstancealternate.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonRDS_OracleDBinstancealternate.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'piop',
    title: 'PIOP',
    category: 'aws_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonRDS_PIOP.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonRDS_PIOP.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'postgre sql instance',
    title: 'Postgre SQL Instance',
    category: 'aws_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonRDS_PostgreSQLinstance.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonRDS_PostgreSQLinstance.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'rds db instance',
    title: 'RDS DB Instance',
    category: 'aws_database',
    props: { w: 60, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonRDS_RDSDBinstance.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonRDS_RDSDBinstance.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'rds db instance standby (multi-az)',
    title: 'RDS DB Instance Standby (multi-AZ)',
    category: 'aws_database',
    props: { w: 60, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonRDS_RDSDBinstancestandby.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonRDS_RDSDBinstancestandby.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'rds db instance read replica',
    title: 'RDS DB Instance Read Replica',
    category: 'aws_database',
    props: { w: 60, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonRDS_RDSDBinstancereadreplica.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonRDS_RDSDBinstancereadreplica.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sql master',
    title: 'SQL Master',
    category: 'aws_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonRDS_SQLmaster.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonRDS_SQLmaster.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sql slave',
    title: 'SQL Slave',
    category: 'aws_database',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonRDS_SQLslave.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonRDS_SQLslave.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'Redshift',
    title: 'Redshift',
    category: 'aws_database',
    props: { w: 70, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonRedshift.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonRedshift.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'dense compute node',
    title: 'Dense Compute Node',
    category: 'aws_database',
    props: { w: 69, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonRedshift_densecomputenode.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonRedshift_densecomputenode.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'dense storage node',
    title: 'Dense Storage Node',
    category: 'aws_database',
    props: { w: 69, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AmazonRedshift_densestoragenode.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AmazonRedshift_densestoragenode.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'migration service',
    title: 'Migration Service',
    category: 'aws_database',
    props: { w: 67, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/database/Database_AWSDatabaseMigrationService.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/database/Database_AWSDatabaseMigrationService.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'aws_devel_tools',
    text: 'AWS Devel Tools',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'codecommit',
    title: 'CodeCommit',
    category: 'aws_devel_tools',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/developertools/Developer-Tools_AWSCodeCommit.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/developertools/Developer-Tools_AWSCodeCommit.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'codedeploy',
    title: 'CodeDeploy',
    category: 'aws_devel_tools',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/developertools/Developer-Tools_AWSCodeDeploy.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/developertools/Developer-Tools_AWSCodeDeploy.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'codepipeline',
    title: 'CodePipeline',
    category: 'aws_devel_tools',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/developertools/Developer-Tools_AWSCodePipeline.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/developertools/Developer-Tools_AWSCodePipeline.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'aws_enterprise_apps',
    text: 'AWS Enterprise Apps',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'work docs',
    title: 'Work Docs',
    category: 'aws_enterprise_apps',
    props: { w: 66, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/enterpriseapplications/Enterprise-Applications_AmazonWorkDocs.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/enterpriseapplications/Enterprise-Applications_AmazonWorkDocs.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'work mail',
    title: 'Work Mail',
    category: 'aws_enterprise_apps',
    props: { w: 66, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/enterpriseapplications/Enterprise-Applications_AmazonWorkMail.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/enterpriseapplications/Enterprise-Applications_AmazonWorkMail.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'work spaces',
    title: 'Work Spaces',
    category: 'aws_enterprise_apps',
    props: { w: 67, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/enterpriseapplications/Enterprise-Applications_AmazonWorkSpaces.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/enterpriseapplications/Enterprise-Applications_AmazonWorkSpaces.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'aws_general',
    text: 'AWS General',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'aws cloud',
    title: 'AWS Cloud',
    category: 'aws_general',
    props: { w: 75, h: 49 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/general/General_AWScloud.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/general/General_AWScloud.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws management console',
    title: 'AWS Management Console',
    category: 'aws_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/general/General_AWSManagementConsole.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/general/General_AWSManagementConsole.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'forums',
    title: 'Forums',
    category: 'aws_general',
    props: { w: 78, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/general/General_forums.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/general/General_forums.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'virtual private cloud',
    title: 'Virtual Private Cloud',
    category: 'aws_general',
    props: { w: 75, h: 49 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/general/General_virtualprivatecloud.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/general/General_virtualprivatecloud.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'client',
    title: 'Client',
    category: 'aws_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/general/General_client.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/general/General_client.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'internet',
    title: 'Internet',
    category: 'aws_general',
    props: { w: 75, h: 49 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/general/General_Internet.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/general/General_Internet.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mobile client',
    title: 'Mobile Client',
    category: 'aws_general',
    props: { w: 50, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/general/General_mobileclient.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/general/General_mobileclient.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'multimedia',
    title: 'Multimedia',
    category: 'aws_general',
    props: { w: 75, h: 72 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/general/General_multimedia.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/general/General_multimedia.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'user',
    title: 'User',
    category: 'aws_general',
    props: { w: 54, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aws/general/General_user.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/general/General_user.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'users',
    title: 'Users',
    category: 'aws_general',
    props: { w: 75, h: 72 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aws/general/General_users.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/general/General_users.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'corporate data center',
    title: 'Corporate Data Center',
    category: 'aws_general',
    props: { w: 57, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/general/General_corporatedatacenter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/general/General_corporatedatacenter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'disk',
    title: 'Disk',
    category: 'aws_general',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aws/general/General_disk.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/general/General_disk.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'generic database',
    title: 'Generic Database',
    category: 'aws_general',
    props: { w: 58, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/general/General_genericdatabase.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/general/General_genericdatabase.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'tape storage',
    title: 'Tape Storage',
    category: 'aws_general',
    props: { w: 75, h: 38 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/general/General_tapestorage.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/general/General_tapestorage.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'traditional server',
    title: 'Traditional Server',
    category: 'aws_general',
    props: { w: 57, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/general/General_traditionalserver.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/general/General_traditionalserver.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'aws_iot',
    text: 'AWS Internet of Things',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'aws iot (continued)',
    title: 'AWS IoT (Continued)',
    category: 'aws_iot',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot action',
    title: 'IoT Action',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_action.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_action.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot actuator',
    title: 'IoT Actuator',
    category: 'aws_iot',
    props: { w: 64, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_actuator.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_actuator.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot certificate',
    title: 'IoT Certificate',
    category: 'aws_iot',
    props: { w: 57, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_certificate.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_certificate.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot desired state',
    title: 'IoT Desired State',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_desiredstate.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_desiredstate.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot hardware board',
    title: 'IoT Hardware Board',
    category: 'aws_iot',
    props: { w: 63, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_hardwareboard.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_hardwareboard.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot http/2 protocol',
    title: 'IoT HTTP/2 Protocol',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_HTTPprotocol.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_HTTPprotocol.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot http protocol',
    title: 'IoT HTTP Protocol',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_HTTP2protocol.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_HTTP2protocol.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot mqtt protocol',
    title: 'IoT MQTT Protocol',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_MQTTprotocol.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_MQTTprotocol.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot policy',
    title: 'IoT Policy',
    category: 'aws_iot',
    props: { w: 46, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_policy.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_policy.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot reported state',
    title: 'IoT Reported State',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_reportedstate.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_reportedstate.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot rule',
    title: 'IoT Rule',
    category: 'aws_iot',
    props: { w: 37, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_rule.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_rule.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot sensor',
    title: 'IoT Sensor',
    category: 'aws_iot',
    props: { w: 64, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_sensor.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_sensor.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot servo',
    title: 'IoT Servo',
    category: 'aws_iot',
    props: { w: 75, h: 53 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_servo.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_servo.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot shadow',
    title: 'IoT Shadow',
    category: 'aws_iot',
    props: { w: 71, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_shadow.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_shadow.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot simulator',
    title: 'IoT Simulator',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_simulator.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_simulator.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot topic',
    title: 'IoT Topic',
    category: 'aws_iot',
    props: { w: 57, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_topic.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_topic.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot thing bank',
    title: 'IoT Thing Bank',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingbank.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingbank.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot thing bicycle',
    title: 'IoT Thing Bicycle',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingbicycle.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingbicycle.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot thing camera',
    title: 'IoT Thing Camera',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingcamera.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingcamera.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot thing car',
    title: 'IoT Thing Car',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingcar.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingcar.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot thing cart',
    title: 'IoT Thing Cart',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingcart.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingcart.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot thing coffee pot',
    title: 'IoT Thing Coffee Pot',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingcoffeepot.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingcoffeepot.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot thing door lock',
    title: 'IoT Thing Door Lock',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingdoorlock.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingdoorlock.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot thing factory',
    title: 'IoT Thing Factory',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingfactory.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingfactory.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot thing generic',
    title: 'IoT Thing Generic',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thinggeneric.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thinggeneric.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot thing house',
    title: 'IoT Thing House',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thinghouse.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thinghouse.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot thing lightbulb',
    title: 'IoT Thing Lightbulb',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thinglightbulb.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thinglightbulb.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot thing medical emergency',
    title: 'IoT Thing Medical Emergency',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingmedicalemergency.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingmedicalemergency.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot thing police emergency',
    title: 'IoT Thing Police Emergency',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingpoliceemergency.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingpoliceemergency.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot thing thermostat',
    title: 'IoT Thing Thermostat',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingthermostat.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingthermostat.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot thing travel',
    title: 'IoT Thing Travel',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingtravel.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingtravel.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot thing utility',
    title: 'IoT Thing Utility',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingutility.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingutility.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iot thing windfarm',
    title: 'IoT Thing Windfarm',
    category: 'aws_iot',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingwindfarm.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/iot/Internet-Of-Things_AWSIoT_thingwindfarm.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'aws_mgmt_tools',
    text: 'AWS Management Tools',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'cloud watch',
    title: 'Cloud Watch',
    category: 'aws_mgmt_tools',
    props: { w: 68, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/managementtools/Management-Tools_AmazonCloudWatch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/managementtools/Management-Tools_AmazonCloudWatch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cloud watch alarm',
    title: 'Cloud Watch Alarm',
    category: 'aws_mgmt_tools',
    props: { w: 63, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/managementtools/Management-Tools_AmazonCloudWatch_alarm.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/managementtools/Management-Tools_AmazonCloudWatch_alarm.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cloud formation',
    title: 'Cloud Formation',
    category: 'aws_mgmt_tools',
    props: { w: 64, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSCloudFormation.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSCloudFormation.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cloud formation stack',
    title: 'Cloud Formation Stack',
    category: 'aws_mgmt_tools',
    props: { w: 77, h: 62 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSCloudFormation_stack.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSCloudFormation_stack.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cloud formation template',
    title: 'Cloud Formation Template',
    category: 'aws_mgmt_tools',
    props: { w: 66, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSCloudFormation_template.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSCloudFormation_template.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cloud trail',
    title: 'Cloud Trail',
    category: 'aws_mgmt_tools',
    props: { w: 66, h: 72 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSCloudTrail.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSCloudTrail.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'config',
    title: 'Config',
    category: 'aws_mgmt_tools',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSConfig.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSConfig.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ops works',
    title: 'Ops Works',
    category: 'aws_mgmt_tools',
    props: { w: 63, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSOpsWorks.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSOpsWorks.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ops works appss',
    title: 'Ops Works Apps',
    category: 'aws_mgmt_tools',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSOpsWorks_apps.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSOpsWorks_apps.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ops works deployments',
    title: 'Ops Works Deployments',
    category: 'aws_mgmt_tools',
    props: { w: 75, h: 71 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSOpsWorks_deployments.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSOpsWorks_deployments.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ops works instances',
    title: 'Ops Works Instances',
    category: 'aws_mgmt_tools',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSOpsWorks_instances.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSOpsWorks_instances.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ops works layers',
    title: 'Ops Works Layers',
    category: 'aws_mgmt_tools',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSOpsWorks_layers.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSOpsWorks_layers.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ops works monitoring',
    title: 'Ops Works Monitoring',
    category: 'aws_mgmt_tools',
    props: { w: 75, h: 63 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSOpsWorks_monitoring.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSOpsWorks_monitoring.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ops works permissions',
    title: 'Ops Works Permissions',
    category: 'aws_mgmt_tools',
    props: { w: 65, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSOpsWorks_permissions.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSOpsWorks_permissions.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ops works resources',
    title: 'Ops Works Resources',
    category: 'aws_mgmt_tools',
    props: { w: 64, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSOpsWorks_resources.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSOpsWorks_resources.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ops works stack',
    title: 'Ops Works Stack',
    category: 'aws_mgmt_tools',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSOpsWorks_stack.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSOpsWorks_stack.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'service catalog',
    title: 'Service Catalog',
    category: 'aws_mgmt_tools',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSServiceCatalog.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSServiceCatalog.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'trusted advisor',
    title: 'Trusted Advisor',
    category: 'aws_mgmt_tools',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSTrustedAdvisor.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/managementtools/Management-Tools_AWSTrustedAdvisor.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'aws_mobile_servers',
    text: 'AWS Mobile Servers',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'cognito',
    title: 'Cognito',
    category: 'aws_mobile_servers',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/mobileservers/Mobile-Services_AmazonCognito.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/mobileservers/Mobile-Services_AmazonCognito.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mobile analytics',
    title: 'Mobile Analytics',
    category: 'aws_mobile_servers',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/mobileservers/Mobile-Services_AmazonMobileAnalytics.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/mobileservers/Mobile-Services_AmazonMobileAnalytics.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sns',
    title: 'SNS',
    category: 'aws_mobile_servers',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/mobileservers/Mobile-Services_AmazonSNS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/mobileservers/Mobile-Services_AmazonSNS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sns email notification',
    title: 'SNS Email Notification',
    category: 'aws_mobile_servers',
    props: { w: 77, h: 48 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/mobileservers/Mobile-Services_AmazonSNS_emailnotification.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/mobileservers/Mobile-Services_AmazonSNS_emailnotification.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sns http notification',
    title: 'SNS HTTP Notification',
    category: 'aws_mobile_servers',
    props: { w: 77, h: 48 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/mobileservers/Mobile-Services_AmazonSNS_HTTPnotification.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/mobileservers/Mobile-Services_AmazonSNS_HTTPnotification.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sns topic',
    title: 'SNS Topic',
    category: 'aws_mobile_servers',
    props: { w: 76, h: 48 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/mobileservers/Mobile-Services_AmazonSNS_topic.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/mobileservers/Mobile-Services_AmazonSNS_topic.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'device farm',
    title: 'Device Farm',
    category: 'aws_mobile_servers',
    props: { w: 65, h: 79 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/mobileservers/Mobile-Services_AWSDeviceFarm.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/mobileservers/Mobile-Services_AWSDeviceFarm.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mobile hub',
    title: 'Mobile Hub',
    category: 'aws_mobile_servers',
    props: { w: 69, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/mobileservers/Mobile-Services_AWSMobileHub.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/mobileservers/Mobile-Services_AWSMobileHub.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'aws_networking',
    text: 'AWS Networking',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'vpc',
    title: 'VPC',
    category: 'aws_networking',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/networking/Networking_AmazonVPC.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/networking/Networking_AmazonVPC.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'vpc customer gateway',
    title: 'VPC Customer Gateway',
    category: 'aws_networking',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/networking/Networking_AmazonVPC_customergateway.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/networking/Networking_AmazonVPC_customergateway.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'vpc endpoints',
    title: 'VPC Endpoints',
    category: 'aws_networking',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/networking/Networking_AmazonVPC_endpoints.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/networking/Networking_AmazonVPC_endpoints.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'vpc flow logs',
    title: 'VPC Flow Logs',
    category: 'aws_networking',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/networking/Networking_AmazonVPC_flowlogs.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/networking/Networking_AmazonVPC_flowlogs.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'vpc internet gateway',
    title: 'VPC Internet Gateway',
    category: 'aws_networking',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/networking/Networking_AmazonVPC_internetgateway.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/networking/Networking_AmazonVPC_internetgateway.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'vpc router',
    title: 'VPC Router',
    category: 'aws_networking',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/networking/Networking_AmazonVPC_router.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/networking/Networking_AmazonVPC_router.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'vpc nat gateway',
    title: 'VPC NAT Gateway',
    category: 'aws_networking',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/networking/Networking_AmazonVPC_VPCNATgateway.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/networking/Networking_AmazonVPC_VPCNATgateway.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'vpn connection',
    title: 'VPN Connection',
    category: 'aws_networking',
    props: { w: 78, h: 62 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/networking/Networking_AmazonVPC_VPNconnection.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/networking/Networking_AmazonVPC_VPNconnection.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws vpn gateway',
    title: 'VPN Gateway',
    category: 'aws_networking',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/networking/Networking_AmazonVPC_VPNgateway.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/networking/Networking_AmazonVPC_VPNgateway.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'vpn peering',
    title: 'VPN Peering',
    category: 'aws_networking',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/networking/Networking_AmazonVPC_VPNpeering.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/networking/Networking_AmazonVPC_VPNpeering.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'route 53',
    title: 'Route 53',
    category: 'aws_networking',
    props: { w: 63, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/networking/Networking_AmazonRoute53.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/networking/Networking_AmazonRoute53.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'route 53 hosted zone',
    title: 'Route 53 Hosted Zone',
    category: 'aws_networking',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/networking/Networking_AmazonRoute53_hostedzone.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/networking/Networking_AmazonRoute53_hostedzone.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'route 53 route table',
    title: 'Route 53 Route Table',
    category: 'aws_networking',
    props: { w: 75, h: 69 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/networking/Networking_AmazonRoute53_routetable.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/networking/Networking_AmazonRoute53_routetable.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'direct connect',
    title: 'Direct Connect',
    category: 'aws_networking',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/networking/Networking_AWSDirectConnect.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/networking/Networking_AWSDirectConnect.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({ name: 'aws_sdk', text: 'AWS SDK', dataAttributes: [] })
  Schema.addShape({
    name: 'android',
    title: 'Android',
    category: 'aws_sdk',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aws/sdk/SDKs_Android.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aws/sdk/SDKs_Android.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios',
    title: 'iOS',
    category: 'aws_sdk',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aws/sdk/SDKs_iOS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aws/sdk/SDKs_iOS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'java',
    title: 'Java',
    category: 'aws_sdk',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aws/sdk/SDKs_Java.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aws/sdk/SDKs_Java.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'javaScript',
    title: 'JavaScript',
    category: 'aws_sdk',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aws/sdk/SDKs_JavaScript.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aws/sdk/SDKs_JavaScript.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: '.net',
    title: '.NET',
    category: 'aws_sdk',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aws/sdk/SDKs_Net.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aws/sdk/SDKs_Net.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'node.js',
    title: 'Node.js',
    category: 'aws_sdk',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aws/sdk/SDKs_Nodejs.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aws/sdk/SDKs_Nodejs.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'php',
    title: 'PHP',
    category: 'aws_sdk',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aws/sdk/SDKs_PHP.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aws/sdk/SDKs_PHP.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'python (boto)',
    title: 'Python (boto)',
    category: 'aws_sdk',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aws/sdk/SDKs_Python.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aws/sdk/SDKs_Python.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ruby',
    title: 'Ruby',
    category: 'aws_sdk',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aws/sdk/SDKs_Ruby.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aws/sdk/SDKs_Ruby.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'xamarin',
    title: 'Xamarin',
    category: 'aws_sdk',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aws/sdk/SDKs_Xamarin.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aws/sdk/SDKs_Xamarin.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'AWS CLI',
    title: 'AWS CLI',
    category: 'aws_sdk',
    props: { w: 70, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aws/sdk/SDKs_AWSCLI.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_aws/sdk/SDKs_AWSCLI.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws toolkit for eclipse',
    title: 'AWS Toolkit for Eclipse',
    category: 'aws_sdk',
    props: { w: 70, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/sdk/SDKs_AWSToolkitForEclipse.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/sdk/SDKs_AWSToolkitForEclipse.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws toolkit for visual studio',
    title: 'AWS Toolkit for Visual Studio',
    category: 'aws_sdk',
    props: { w: 70, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/sdk/SDKs_AWSToolkitForVisualStudio.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/sdk/SDKs_AWSToolkitForVisualStudio.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws toolkit for windows powerShell',
    title: 'AWS Toolkit for Windows PowerShell',
    category: 'aws_sdk',
    props: { w: 70, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/sdk/SDKs_AWSToolsForWindowsPowerShell.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/sdk/SDKs_AWSToolsForWindowsPowerShell.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'aws_security_identity',
    text: 'AWS Security & Identity',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'inpector',
    title: 'Inpector',
    category: 'aws_security_identity',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AmazonInspector.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AmazonInspector.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cloud hsm',
    title: 'Cloud HSM',
    category: 'aws_security_identity',
    props: { w: 63, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSCloudHSM.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSCloudHSM.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'directory service',
    title: 'Directory Service',
    category: 'aws_security_identity',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSDirectoryService.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSDirectoryService.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iam',
    title: 'IAM',
    category: 'aws_security_identity',
    props: { w: 39, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iam add-on',
    title: 'IAM Add-on',
    category: 'aws_security_identity',
    props: { w: 75, h: 41 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM_addon.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM_addon.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iam aws sts',
    title: 'IAM AWS STS',
    category: 'aws_security_identity',
    props: { w: 76, h: 43 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM_AWSSTS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM_AWSSTS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iam aws sts (alternate)',
    title: 'IAM AWS STS (alternate)',
    category: 'aws_security_identity',
    props: { w: 58, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM_AWSSTS-2.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM_AWSSTS-2.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iam data encryption key',
    title: 'IAM Data Encryption Key',
    category: 'aws_security_identity',
    props: { w: 58, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM_dataencryptionkey.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM_dataencryptionkey.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iam Encrypted Data',
    title: 'IAM Encrypted Data',
    category: 'aws_security_identity',
    props: { w: 59, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM_encrypteddata.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM_encrypteddata.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iam long credential',
    title: 'IAM Long Credential',
    category: 'aws_security_identity',
    props: { w: 75, h: 60 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM_long-termsecuritycredential.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM_long-termsecuritycredential.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iam mfa token',
    title: 'IAM MFA Token',
    category: 'aws_security_identity',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM_MFAtoken.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM_MFAtoken.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iam permissions',
    title: 'IAM Permissions',
    category: 'aws_security_identity',
    props: { w: 57, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM_permissions.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM_permissions.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iam role',
    title: 'IAM Role',
    category: 'aws_security_identity',
    props: { w: 75, h: 64 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM_role.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM_role.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iam short credential',
    title: 'IAM Short Credential',
    category: 'aws_security_identity',
    props: { w: 75, h: 67 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM_temporarysecuritycredential.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSIAM_temporarysecuritycredential.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'kms',
    title: 'KMS',
    category: 'aws_security_identity',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSKMS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSKMS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'waf',
    title: 'WAF',
    category: 'aws_security_identity',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSWAF.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/securityIdentity/Security-Identity_AWSWAF.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'aws_storage',
    text: 'AWS Storage & Content Delivery',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'cloud front',
    title: 'Cloud Front',
    category: 'aws_storage',
    props: { w: 63, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonCloudFront.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonCloudFront.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cloud front download distribution',
    title: 'Cloud Front Download Distribution',
    category: 'aws_storage',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonCloudFront_downloaddistribution.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonCloudFront_downloaddistribution.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cloud front edge location',
    title: 'Cloud Front Edge Location',
    category: 'aws_storage',
    props: { w: 69, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonCloudFront_edgelocation.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonCloudFront_edgelocation.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cloud front streaming distribution',
    title: 'Cloud Front Streaming Distribution',
    category: 'aws_storage',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonCloudFront_streamingdistribution.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonCloudFront_streamingdistribution.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ebs',
    title: 'EBS',
    category: 'aws_storage',
    props: { w: 54, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonEBS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonEBS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'efs',
    title: 'EFS',
    category: 'aws_storage',
    props: { w: 63, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonEFS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonEFS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'glacier',
    title: 'Glacier',
    category: 'aws_storage',
    props: { w: 63, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonGlacier.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonGlacier.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'glacier archive',
    title: 'Glacier Archive',
    category: 'aws_storage',
    props: { w: 59, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonGlacier_archive.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonGlacier_archive.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'glacier vault',
    title: 'Glacier Vault',
    category: 'aws_storage',
    props: { w: 54, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonGlacier_vault.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonGlacier_vault.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 's3',
    title: 'S3',
    category: 'aws_storage',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonS3.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonS3.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 's3 bucket',
    title: 'S3 Bucket',
    category: 'aws_storage',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonS3_bucket.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonS3_bucket.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 's3 bucket with objects',
    title: 'S3 Bucket with Objects',
    category: 'aws_storage',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonS3_bucketwithobjects.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonS3_bucketwithobjects.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 's3 objects',
    title: 'S3 Objects',
    category: 'aws_storage',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonS3_object.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AmazonS3_object.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'import/export snowball',
    title: 'Import/Export Snowball',
    category: 'aws_storage',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AWSImportExportSnowball.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AWSImportExportSnowball.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'import/export snowball import/export',
    title: 'Import/Export Snowball Import/Export',
    category: 'aws_storage',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AWSImportExportSnowball_importexport.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AWSImportExportSnowball_importexport.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'storage gateway',
    title: 'Storage Gateway',
    category: 'aws_storage',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AWSStorageGateway.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AWSStorageGateway.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'storage gateway cached volume',
    title: 'Storage Gateway Cached Volume',
    category: 'aws_storage',
    props: { w: 63, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AWSStorageGateway_cachedvolume.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AWSStorageGateway_cachedvolume.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'storage gateway non-cached volume',
    title: 'Storage Gateway Non-cached Volume',
    category: 'aws_storage',
    props: { w: 63, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AWSStorageGateway_non-cachedvolume.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AWSStorageGateway_non-cachedvolume.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'storage gateway virtual tape library',
    title: 'Storage Gateway Virtual Tape Library',
    category: 'aws_storage',
    props: { w: 63, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AWSStorageGateway_virtualtapelibrary.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_AWSStorageGateway_virtualtapelibrary.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'snapshot',
    title: 'Snapshot',
    category: 'aws_storage',
    props: { w: 61, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_snapshot.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_snapshot.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'volume',
    title: 'Volume',
    category: 'aws_storage',
    props: { w: 54, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_volume.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/storageContentDelivery/Storage-Content-Delivery_volume.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'aws_workforce',
    text: 'AWS On-demand Workforce',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'mechanical turk',
    title: 'Mechanical Turk',
    category: 'aws_workforce',
    props: { w: 62, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/on-demandWorkforce/On-Demand-Workforce_AmazonMechanicalTurk.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/on-demandWorkforce/On-Demand-Workforce_AmazonMechanicalTurk.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'assignment/task',
    title: 'Assignment/task',
    category: 'aws_workforce',
    props: { w: 55, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/on-demandWorkforce/On-Demand-Workforce_AmazonMechanicalTurk_assignmenttask.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/on-demandWorkforce/On-Demand-Workforce_AmazonMechanicalTurk_assignmenttask.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'human intelligence tasks (hit)',
    title: 'Human Intelligence Tasks (HIT)',
    category: 'aws_workforce',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/on-demandWorkforce/On-Demand-Workforce_AmazonMechanicalTurk_humanintelligencetasks.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/on-demandWorkforce/On-Demand-Workforce_AmazonMechanicalTurk_humanintelligencetasks.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'requester',
    title: 'Requester',
    category: 'aws_workforce',
    props: { w: 66, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/on-demandWorkforce/On-Demand-Workforce_AmazonMechanicalTurk_requester.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/on-demandWorkforce/On-Demand-Workforce_AmazonMechanicalTurk_requester.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'workers',
    title: 'Workers',
    category: 'aws_workforce',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/on-demandWorkforce/On-Demand-Workforce_AmazonMechanicalTurk_workers.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/on-demandWorkforce/On-Demand-Workforce_AmazonMechanicalTurk_workers.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'aws_groups',
    text: 'AWS Groups',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'auto scaling container',
    title: 'Auto Scaling Container',
    category: 'aws_groups',
    props: { w: 240, h: 240 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/groups/Auto_Scaling_Container.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/groups/Auto_Scaling_Container.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'availability zone',
    title: 'Availability Zone',
    category: 'aws_groups',
    props: { w: 240, h: 240 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/groups/Availability_Zone.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/groups/Availability_Zone.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'region container',
    title: 'Region Container',
    category: 'aws_groups',
    props: { w: 240, h: 240 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/groups/Region_Container.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/groups/Region_Container.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'security group container',
    title: 'Security Group Container',
    category: 'aws_groups',
    props: { w: 240, h: 240 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/groups/Security_Group_Container.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/groups/Security_Group_Container.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'aws cloud container',
    title: 'AWS Cloud Container',
    category: 'aws_groups',
    props: { w: 240, h: 265 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/groups/AWS_Cloud_Container.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/groups/AWS_Cloud_Container.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ec2 instance container',
    title: 'EC2 Instance Container',
    category: 'aws_groups',
    props: { w: 240, h: 256 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/groups/EC2_Instance_Container.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/groups/EC2_Instance_Container.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'elastic beanstalk container',
    title: 'Elastic Beanstalk Container',
    category: 'aws_groups',
    props: { w: 240, h: 257 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/groups/Elastic_Beanstalk_Container.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/groups/Elastic_Beanstalk_Container.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'vpc container',
    title: 'VPC Container',
    category: 'aws_groups',
    props: { w: 240, h: 265 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_aws/groups/VPC_Container.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/groups/VPC_Container.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'subnet container',
    title: 'Subnet Container',
    category: 'aws_groups',
    props: { w: 240, h: 254 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/groups/Subnet_Container.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/groups/Subnet_Container.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'corporate data center container',
    title: 'Corporate Data Center Container',
    category: 'aws_groups',
    props: { w: 240, h: 257 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/groups/Corporate_Data_Center_Container.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/groups/Corporate_Data_Center_Container.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'server contents',
    title: 'Server Contents',
    category: 'aws_groups',
    props: { w: 240, h: 240 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: 0, y: 0, w: 'w', h: 'h' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_aws/groups/Server_Contents.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_aws/groups/Server_Contents.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'cisco_bulidings',
    text: 'Cisco Bulidings',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'branch office',
    title: 'Branch Office',
    category: 'cisco_bulidings',
    props: { w: 52, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Bulidings/branchOffice.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Bulidings/branchOffice.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'end office',
    title: 'End Office',
    category: 'cisco_bulidings',
    props: { w: 74, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Bulidings/endOffice.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Bulidings/endOffice.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'generic building',
    title: 'Generic Building',
    category: 'cisco_bulidings',
    props: { w: 53, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Bulidings/genericBuilding.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Bulidings/genericBuilding.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'government building',
    title: 'Government Building',
    category: 'cisco_bulidings',
    props: { w: 77, h: 55 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Bulidings/governmentBuilding.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Bulidings/governmentBuilding.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mdu',
    title: 'MDU',
    category: 'cisco_bulidings',
    props: { w: 64, h: 79 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Bulidings/mdu.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Bulidings/mdu.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'small business',
    title: 'Small Business',
    category: 'cisco_bulidings',
    props: { w: 78, h: 44 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Bulidings/smallBusiness.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Bulidings/smallBusiness.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'telecommuter house',
    title: 'Telecommuter House',
    category: 'cisco_bulidings',
    props: { w: 75, h: 64 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Bulidings/telecommuterHouse.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Bulidings/telecommuterHouse.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'telecommuter house pc',
    title: 'Telecommuter House PC',
    category: 'cisco_bulidings',
    props: { w: 75, h: 64 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Bulidings/telecommuterHousePC.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Bulidings/telecommuterHousePC.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'university',
    title: 'University',
    category: 'cisco_bulidings',
    props: { w: 78, h: 31 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Bulidings/university.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Bulidings/university.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'cisco_computers_peripherals',
    text: 'Cisco Computers and Peripherals',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'ibm mainframe',
    title: 'IBM Mainframe',
    category: 'cisco_computers_peripherals',
    props: { w: 53, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ComputersandPeripherals/ibmMainframe.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ComputersandPeripherals/ibmMainframe.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ibm mini as400',
    title: 'IBM Mini AS400',
    category: 'cisco_computers_peripherals',
    props: { w: 53, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ComputersandPeripherals/ibmMiniAS400.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ComputersandPeripherals/ibmMiniAS400.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ibm tower',
    title: 'IBM Tower',
    category: 'cisco_computers_peripherals',
    props: { w: 43, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ComputersandPeripherals/ibmTower.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ComputersandPeripherals/ibmTower.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cisco laptop',
    title: 'Cisco Laptop',
    category: 'cisco_computers_peripherals',
    props: { w: 78, h: 53 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ComputersandPeripherals/laptop.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ComputersandPeripherals/laptop.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'macintosh',
    title: 'Macintosh',
    category: 'cisco_computers_peripherals',
    props: { w: 80, h: 56 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ComputersandPeripherals/macintosh.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ComputersandPeripherals/macintosh.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'microphone',
    title: 'Microphone',
    category: 'cisco_computers_peripherals',
    props: { w: 64, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ComputersandPeripherals/microphone.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ComputersandPeripherals/microphone.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cisco pc',
    title: 'PC',
    category: 'cisco_computers_peripherals',
    props: { w: 78, h: 70 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ComputersandPeripherals/pc.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ComputersandPeripherals/pc.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'pc adapter card',
    title: 'PC Adapter Card',
    category: 'cisco_computers_peripherals',
    props: { w: 57, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ComputersandPeripherals/pcAdapterCard.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ComputersandPeripherals/pcAdapterCard.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'pc routercard',
    title: 'PC Routercard',
    category: 'cisco_computers_peripherals',
    props: { w: 77, h: 69 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ComputersandPeripherals/pcRoutercard.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ComputersandPeripherals/pcRoutercard.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cisco printer',
    title: 'Printer',
    category: 'cisco_computers_peripherals',
    props: { w: 78, h: 29 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ComputersandPeripherals/printer.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ComputersandPeripherals/printer.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cisco scanner',
    title: 'Scanner',
    category: 'cisco_computers_peripherals',
    props: { w: 80, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ComputersandPeripherals/scanner.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ComputersandPeripherals/scanner.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'speaker',
    title: 'Speaker',
    category: 'cisco_computers_peripherals',
    props: { w: 45, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ComputersandPeripherals/speaker.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ComputersandPeripherals/speaker.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sun workstation',
    title: 'Sun Workstation',
    category: 'cisco_computers_peripherals',
    props: { w: 77, h: 62 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ComputersandPeripherals/sunWorkstation.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ComputersandPeripherals/sunWorkstation.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'supercomputer',
    title: 'Supercomputer',
    category: 'cisco_computers_peripherals',
    props: { w: 67, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ComputersandPeripherals/supercomputer.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ComputersandPeripherals/supercomputer.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cisco tablet',
    title: 'Cisco Tablet',
    category: 'cisco_computers_peripherals',
    props: { w: 75, h: 41 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ComputersandPeripherals/tablet.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ComputersandPeripherals/tablet.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'terminal',
    title: 'Terminal',
    category: 'cisco_computers_peripherals',
    props: { w: 80, h: 73 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ComputersandPeripherals/terminal.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ComputersandPeripherals/terminal.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'upc',
    title: 'UPC',
    category: 'cisco_computers_peripherals',
    props: { w: 80, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ComputersandPeripherals/upc.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ComputersandPeripherals/upc.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'video camera',
    title: 'Video Camera',
    category: 'cisco_computers_peripherals',
    props: { w: 55, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ComputersandPeripherals/videoCamera.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ComputersandPeripherals/videoCamera.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'web browser',
    title: 'WEB Browser',
    category: 'cisco_computers_peripherals',
    props: { w: 78, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ComputersandPeripherals/webBrowser.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ComputersandPeripherals/webBrowser.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'workstation',
    title: 'Workstation',
    category: 'cisco_computers_peripherals',
    props: { w: 77, h: 64 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ComputersandPeripherals/workstation.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ComputersandPeripherals/workstation.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'cisco_control_module',
    text: 'Cisco Controllers and Modules',
    dataAttributes: [],
  })
  Schema.addShape({
    name: '10ge fcoe',
    title: '10GE FCoE',
    category: 'cisco_control_module',
    props: { w: 57, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ControllersandModules/10GE_FCoE.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ControllersandModules/10GE_FCoE.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: '3174 (desktop)',
    title: '3174 (desktop)',
    category: 'cisco_control_module',
    props: { w: 76, h: 32 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ControllersandModules/3174_desktop.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ControllersandModules/3174_desktop.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: '3x74 (floor)',
    title: '3x74 (Floor)',
    category: 'cisco_control_module',
    props: { w: 77, h: 66 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ControllersandModules/3x74_floor.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ControllersandModules/3x74_floor.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'content switch module',
    title: 'Content Switch Module',
    category: 'cisco_control_module',
    props: { w: 78, h: 58 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ControllersandModules/contentSwitchModule.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ControllersandModules/contentSwitchModule.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'firewall service module (fwsm)',
    title: 'Firewall Service Module (FwSM)',
    category: 'cisco_control_module',
    props: { w: 47, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ControllersandModules/firewallServiceModule_fwsm.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ControllersandModules/firewallServiceModule_fwsm.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'service module',
    title: 'Service Module',
    category: 'cisco_control_module',
    props: { w: 61, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ControllersandModules/ServiceModule.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ControllersandModules/ServiceModule.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'system controller',
    title: 'System Controller',
    category: 'cisco_control_module',
    props: { w: 75, h: 70 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ControllersandModules/systemController.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ControllersandModules/systemController.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'virtual switch controller (vsc3000)',
    title: 'Virtual Switch Controller (VSC3000)',
    category: 'cisco_control_module',
    props: { w: 38, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ControllersandModules/virtualSwitchController_vsc3000.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ControllersandModules/virtualSwitchController_vsc3000.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'cisco_directors',
    text: 'Cisco Directors',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'content engine (cache director)',
    title: 'Content Engine (Cache Director)',
    category: 'cisco_directors',
    props: { w: 77, h: 55 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Directors/contentEngine_cacheDirector.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Directors/contentEngine_cacheDirector.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'director-class fibre channel director',
    title: 'Director-Class Fibre Channel Director',
    category: 'cisco_directors',
    props: { w: 57, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Directors/director-classFibreChannelDirector.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Directors/director-classFibreChannelDirector.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'distributed director',
    title: 'Distributed Director',
    category: 'cisco_directors',
    props: { w: 77, h: 55 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Directors/distributedDirector.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Directors/distributedDirector.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'localdirector',
    title: 'Localdirector',
    category: 'cisco_directors',
    props: { w: 80, h: 52 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Directors/localdirector.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Directors/localdirector.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'workgroup director',
    title: 'Workgroup Director',
    category: 'cisco_directors',
    props: { w: 80, h: 52 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Directors/workgroupDirector.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Directors/workgroupDirector.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'cisco_hubs_gateways',
    text: 'Cisco Hubs and Gateways',
    dataAttributes: [],
  })
  Schema.addShape({
    name: '100baset hub',
    title: '100baset hub',
    category: 'cisco_hubs_gateways',
    props: { w: 76, h: 38 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/HubsandGateways/100basetHub.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/HubsandGateways/100basetHub.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'access gateway',
    title: 'access gateway',
    category: 'cisco_hubs_gateways',
    props: { w: 80, h: 40 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/HubsandGateways/accessGateway.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/HubsandGateways/accessGateway.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cisco hub',
    title: 'Cisco Hub',
    category: 'cisco_hubs_gateways',
    props: { w: 76, h: 38 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/HubsandGateways/ciscoHub.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/HubsandGateways/ciscoHub.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'generic gateway',
    title: 'Generic Gateway',
    category: 'cisco_hubs_gateways',
    props: { w: 67, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/HubsandGateways/genericGateway.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/HubsandGateways/genericGateway.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cisco_hub',
    title: 'Hub',
    category: 'cisco_hubs_gateways',
    props: { w: 67, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/HubsandGateways/hub.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/HubsandGateways/hub.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mas gateway',
    title: 'MAS Gateway',
    category: 'cisco_hubs_gateways',
    props: { w: 74, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/HubsandGateways/masGateway.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/HubsandGateways/masGateway.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'small hub',
    title: 'Small Hub',
    category: 'cisco_hubs_gateways',
    props: { w: 80, h: 40 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/HubsandGateways/smallHub.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/HubsandGateways/smallHub.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'universal gateway',
    title: 'Universal Gateway',
    category: 'cisco_hubs_gateways',
    props: { w: 74, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/HubsandGateways/universalGateway.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/HubsandGateways/universalGateway.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cisco vpn gateway',
    title: 'VPN Gateway',
    category: 'cisco_hubs_gateways',
    props: { w: 76, h: 40 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/HubsandGateways/vpnGateway.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/HubsandGateways/vpnGateway.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'cisco_misc',
    text: 'Cisco  Misc',
    dataAttributes: [],
  })
  Schema.addShape({
    name: '15200',
    title: '15200',
    category: 'cisco_misc',
    props: { w: 77, h: 46 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/15200.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/15200.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: '7500ars (7513)',
    title: '7500ars (7513)',
    category: 'cisco_misc',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/7500ars_7513.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/7500ars_7513.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: '6700 series',
    title: '6700 series',
    category: 'cisco_misc',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/6700Series.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/6700Series.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cisco access point',
    title: 'Cisco Access Point',
    category: 'cisco_misc',
    props: { w: 76, h: 33 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/accesspoint.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/accesspoint.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ace',
    title: 'ACE',
    category: 'cisco_misc',
    props: { w: 77, h: 55 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/ace.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/ace.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ACS',
    title: 'ACS',
    category: 'cisco_misc',
    props: { w: 79, h: 56 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/ACS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/ACS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'adm',
    title: 'ADM',
    category: 'cisco_misc',
    props: { w: 80, h: 52 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/adm.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/adm.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cisco asa 5500',
    title: 'Cisco ASA 5500',
    category: 'cisco_misc',
    props: { w: 66, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/ciscoAsa5500.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/ciscoAsa5500.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'asic processor',
    title: 'Asic Processor',
    category: 'cisco_misc',
    props: { w: 56, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/asicProcessor.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/asicProcessor.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'asr 1000 series',
    title: 'ASR 1000 Series',
    category: 'cisco_misc',
    props: { w: 75, h: 71 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/ASR1000Series.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/ASR1000Series.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ata',
    title: 'ATA',
    category: 'cisco_misc',
    props: { w: 80, h: 42 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/ata.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/ata.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'atm 3800',
    title: 'ATM 3800',
    category: 'cisco_misc',
    props: { w: 67, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/atm3800.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/atm3800.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'avs',
    title: 'AVS',
    category: 'cisco_misc',
    props: { w: 77, h: 55 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/avs.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/avs.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'axp',
    title: 'AXP',
    category: 'cisco_misc',
    props: { w: 75, h: 72 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/AXP.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/AXP.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'bbsm',
    title: 'BBSM',
    category: 'cisco_misc',
    props: { w: 75, h: 31 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/bbsm.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/bbsm.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'breakout box',
    title: 'Breakout Box',
    category: 'cisco_misc',
    props: { w: 46, h: 79 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/breakoutBox.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/breakoutBox.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'bridge',
    title: 'Bridge',
    category: 'cisco_misc',
    props: { w: 77, h: 63 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/bridge.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/bridge.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'bts 10200',
    title: 'BTS 10200',
    category: 'cisco_misc',
    props: { w: 49, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/bts10200.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/bts10200.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'call manager',
    title: 'Call Manager',
    category: 'cisco_misc',
    props: { w: 76, h: 49 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/callmanager.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/callmanager.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'car',
    title: 'Car',
    category: 'cisco_misc',
    props: { w: 76, h: 49 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/car.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/car.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'carrier routing system',
    title: 'Carrier Routing System',
    category: 'cisco_misc',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Misc/carrierRoutingSystem.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/carrierRoutingSystem.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cddi fddi',
    title: 'CDDI FDDI',
    category: 'cisco_misc',
    props: { w: 76, h: 37 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/cddi-fddi.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/cddi-fddi.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cdm',
    title: 'CDM',
    category: 'cisco_misc',
    props: { w: 77, h: 50 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/cdm.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/cdm.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cisco 1000',
    title: 'Cisco 1000',
    category: 'cisco_misc',
    props: { w: 75, h: 67 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/cisco1000.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/cisco1000.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cisco ca',
    title: 'Cisco CA',
    category: 'cisco_misc',
    props: { w: 80, h: 68 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/ciscoCa.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/ciscoCa.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cisco unityexpress',
    title: 'Cisco Unityexpress',
    category: 'cisco_misc',
    props: { w: 75, h: 65 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Misc/ciscoUnityexpress.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/ciscoUnityexpress.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cisco works',
    title: 'Cisco Works',
    category: 'cisco_misc',
    props: { w: 77, h: 62 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/ciscoworks.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/ciscoworks.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'contact center',
    title: 'Contact Center',
    category: 'cisco_misc',
    props: { w: 71, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/contactCenter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/contactCenter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'content transformation engine (cte)',
    title: 'Content Transformation Engine (CTE)',
    category: 'cisco_misc',
    props: { w: 78, h: 52 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Misc/contentTransformationEngine_cte.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/contentTransformationEngine_cte.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'CS MARS',
    title: 'CS MARS',
    category: 'cisco_misc',
    props: { w: 80, h: 52 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/cs-mars.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/cs-mars.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'CSM S',
    title: 'CSM S',
    category: 'cisco_misc',
    props: { w: 57, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/csm-s.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/csm-s.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'CSU DSU',
    title: 'CSU DSU',
    category: 'cisco_misc',
    props: { w: 77, h: 32 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/csu_dsu.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/csu_dsu.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'CUBE',
    title: 'CUBE',
    category: 'cisco_misc',
    props: { w: 78, h: 40 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/CUBE.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/CUBE.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'detector',
    title: 'Detector',
    category: 'cisco_misc',
    props: { w: 78, h: 56 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/detector.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/detector.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'dot-dot',
    title: 'Dot-dot',
    category: 'cisco_misc',
    props: { w: 78, h: 56 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/dot-dot.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/dot-dot.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'dpt',
    title: 'Dpt',
    category: 'cisco_misc',
    props: { w: 80, h: 40 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/dpt.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/dpt.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'dslam',
    title: 'DSLAM',
    category: 'cisco_misc',
    props: { w: 71, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/dslam.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/dslam.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'dual mode',
    title: 'Dual Mode',
    category: 'cisco_misc',
    props: { w: 77, h: 54 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/dualModeAp.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/dualModeAp.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'dwdm filter',
    title: 'DWDM Filter',
    category: 'cisco_misc',
    props: { w: 56, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/dwdmFilter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/dwdmFilter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'fddi ring',
    title: 'FDDI Ring',
    category: 'cisco_misc',
    props: { w: 80, h: 30 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/fddiRing.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/fddiRing.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'front end processor',
    title: 'Front End Processor',
    category: 'cisco_misc',
    props: { w: 64, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Misc/frontEndProcessor.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/frontEndProcessor.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'general applicance',
    title: 'General Applicance',
    category: 'cisco_misc',
    props: { w: 77, h: 70 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Misc/generalApplicance.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/generalApplicance.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'generic processor',
    title: 'Generic Processor',
    category: 'cisco_misc',
    props: { w: 53, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Misc/genericProcessor.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/genericProcessor.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'h 323',
    title: 'H 323',
    category: 'cisco_misc',
    props: { w: 75, h: 74 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/h.323.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/h.323.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'handheld',
    title: 'Handheld',
    category: 'cisco_misc',
    props: { w: 75, h: 41 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/handheld.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/handheld.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'hp mini',
    title: 'HP Mini',
    category: 'cisco_misc',
    props: { w: 73, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/hpMini.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/hpMini.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'icm',
    title: 'ICM',
    category: 'cisco_misc',
    props: { w: 36, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/icm.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/icm.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ics',
    title: 'ICS',
    category: 'cisco_misc',
    props: { w: 72, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/ics.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/ics.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'internet streamer',
    title: 'Internet Streamer',
    category: 'cisco_misc',
    props: { w: 75, h: 51 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Misc/internetStreamer.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/internetStreamer.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios slb',
    title: 'IOS SLB',
    category: 'cisco_misc',
    props: { w: 75, h: 51 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/iosSlb.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/iosSlb.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ip',
    title: 'IP',
    category: 'cisco_misc',
    props: { w: 70, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/ip.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/ip.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iptc',
    title: 'IPTC',
    category: 'cisco_misc',
    props: { w: 79, h: 44 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/iptc.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/iptc.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iptv content manager',
    title: 'IPTV Content Manager',
    category: 'cisco_misc',
    props: { w: 76, h: 50 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Misc/iptvContentManager.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/iptvContentManager.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ip communicator',
    title: 'IP Communicator',
    category: 'cisco_misc',
    props: { w: 80, h: 43 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/ipCommunicator.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/ipCommunicator.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ip dsl',
    title: 'IP DSL',
    category: 'cisco_misc',
    props: { w: 80, h: 43 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/ipDsl.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/ipDsl.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'itp',
    title: 'ITP',
    category: 'cisco_misc',
    props: { w: 76, h: 52 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/itp.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/itp.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'jbod',
    title: 'JBOD',
    category: 'cisco_misc',
    props: { w: 36, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/jbod.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/jbod.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'key',
    title: 'Key',
    category: 'cisco_misc',
    props: { w: 80, h: 35 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/key.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/key.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'keys',
    title: 'Keys',
    category: 'cisco_misc',
    props: { w: 57, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/keys.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/keys.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'lan to lan',
    title: 'Lan to Lan',
    category: 'cisco_misc',
    props: { w: 74, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/lanToLan.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/lanToLan.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'lightweight ap',
    title: 'Lightweight AP',
    category: 'cisco_misc',
    props: { w: 76, h: 37 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/lightweightAp.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/lightweightAp.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'longreach cpe',
    title: 'Longreach CPE',
    category: 'cisco_misc',
    props: { w: 75, h: 72 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/longreachCpe.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/longreachCpe.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'MAU',
    title: 'MAU',
    category: 'cisco_misc',
    props: { w: 76, h: 24 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/mau.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/mau.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mcu',
    title: 'MCU',
    category: 'cisco_misc',
    props: { w: 66, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/mcu.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/mcu.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'me 1100',
    title: 'ME 1100',
    category: 'cisco_misc',
    props: { w: 76, h: 40 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/me1100.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/me1100.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mediator',
    title: 'Mediator',
    category: 'cisco_misc',
    props: { w: 72, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/Mediator.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/Mediator.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'meetingplace',
    title: 'Meetingplace',
    category: 'cisco_misc',
    props: { w: 47, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/meetingplace.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/meetingplace.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mesh ap',
    title: 'Mesh AP',
    category: 'cisco_misc',
    props: { w: 79, h: 44 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/meshAp.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/meshAp.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'metro 1500',
    title: 'Metro 1500',
    category: 'cisco_misc',
    props: { w: 75, h: 67 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/metro1500.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/metro1500.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mini vax',
    title: 'Mini VAX',
    category: 'cisco_misc',
    props: { w: 75, h: 67 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/miniVax.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/miniVax.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mobile streamer',
    title: 'Mobile Streamer',
    category: 'cisco_misc',
    props: { w: 75, h: 51 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/mobileStreamer.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/mobileStreamer.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mse',
    title: 'MSE',
    category: 'cisco_misc',
    props: { w: 78, h: 44 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/MSE.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/MSE.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mux',
    title: 'MUX',
    category: 'cisco_misc',
    props: { w: 76, h: 57 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/mux.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/mux.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mxe',
    title: 'MXE',
    category: 'cisco_misc',
    props: { w: 72, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/MXE.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/MXE.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'nac appliance',
    title: 'NAC Appliance',
    category: 'cisco_misc',
    props: { w: 79, h: 60 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/nacAppliance.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/nacAppliance.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'nce',
    title: 'NCE',
    category: 'cisco_misc',
    props: { w: 77, h: 55 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/NCE.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/NCE.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'netranger',
    title: 'Netranger',
    category: 'cisco_misc',
    props: { w: 77, h: 52 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/netranger.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/netranger.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'netsonar',
    title: 'Netsonar',
    category: 'cisco_misc',
    props: { w: 77, h: 52 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/netsonar.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/netsonar.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'network management',
    title: 'Network Management',
    category: 'cisco_misc',
    props: { w: 75, h: 69 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Misc/networkManagement.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/networkManagement.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'nexus 1000',
    title: 'Nexus 1000',
    category: 'cisco_misc',
    props: { w: 77, h: 55 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/Nexus1000.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/Nexus1000.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'nexus 2000',
    title: 'Nexus 2000',
    category: 'cisco_misc',
    props: { w: 75, h: 37 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/Nexus2000.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/Nexus2000.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'nexus 5000',
    title: 'Nexus 5000',
    category: 'cisco_misc',
    props: { w: 76, h: 37 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/Nexus5000.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/Nexus5000.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'nexus 7000',
    title: 'Nexus 7000',
    category: 'cisco_misc',
    props: { w: 57, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/Nexus7000.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/Nexus7000.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'octel',
    title: 'Octel',
    category: 'cisco_misc',
    props: { w: 75, h: 63 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/octel.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/octel.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ons15500',
    title: 'Ons15500',
    category: 'cisco_misc',
    props: { w: 75, h: 70 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/ons15500.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/ons15500.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'optical amplifier',
    title: 'Optical Amplifier',
    category: 'cisco_misc',
    props: { w: 77, h: 58 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Misc/opticalAmplifier.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/opticalAmplifier.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'optical transport',
    title: 'Optical Transport',
    category: 'cisco_misc',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Misc/opticalTransport.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/opticalTransport.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'pad 1',
    title: 'PAD 1',
    category: 'cisco_misc',
    props: { w: 76, h: 61 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/padX.28.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/padX.28.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'pad 2',
    title: 'PAD 2',
    category: 'cisco_misc',
    props: { w: 77, h: 44 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/pad.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/pad.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'page icon',
    title: 'Page Icon',
    category: 'cisco_misc',
    props: { w: 54, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/pageIcon.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/pageIcon.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'pbx',
    title: 'PBX',
    category: 'cisco_misc',
    props: { w: 74, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/pbx.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/pbx.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'pc software',
    title: 'PC Software',
    category: 'cisco_misc',
    props: { w: 75, h: 71 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/pcSoftware.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/pcSoftware.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'pc video',
    title: 'PC Video',
    category: 'cisco_misc',
    props: { w: 75, h: 65 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/pcVideo.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/pcVideo.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'pda',
    title: 'PDA',
    category: 'cisco_misc',
    props: { w: 55, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/pda.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/pda.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'pmc',
    title: 'PMC',
    category: 'cisco_misc',
    props: { w: 77, h: 49 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/pmc.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/pmc.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'protocol translator',
    title: 'Protocol Translator',
    category: 'cisco_misc',
    props: { w: 52, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Misc/protocolTranslator.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/protocolTranslator.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'pxf',
    title: 'PXF',
    category: 'cisco_misc',
    props: { w: 61, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/pxf.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/pxf.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ratemux',
    title: 'Ratemux',
    category: 'cisco_misc',
    props: { w: 77, h: 60 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/ratemux.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/ratemux.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'repeater',
    title: 'Repeater',
    category: 'cisco_misc',
    props: { w: 75, h: 50 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/repeater.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/repeater.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'route switch processor',
    title: 'Route Switch Processor',
    category: 'cisco_misc',
    props: { w: 56, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Misc/routeSwitchProcessor.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/routeSwitchProcessor.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'rpsrps',
    title: 'Rpsrps',
    category: 'cisco_misc',
    props: { w: 77, h: 50 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/rpsrps.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/rpsrps.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'safeharbor icon',
    title: 'Safeharbor Icon',
    category: 'cisco_misc',
    props: { w: 58, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/safeharborIcon.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/safeharborIcon.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'service control',
    title: 'Service Control',
    category: 'cisco_misc',
    props: { w: 77, h: 51 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/serviceControl.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/serviceControl.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'services',
    title: 'Services',
    category: 'cisco_misc',
    props: { w: 75, h: 73 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/Services.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/Services.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'set top box',
    title: 'Set top box',
    category: 'cisco_misc',
    props: { w: 79, h: 29 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/SetTopBox.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/SetTopBox.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ssc',
    title: 'SSC',
    category: 'cisco_misc',
    props: { w: 76, h: 55 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/ssc.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/ssc.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ssl terminator',
    title: 'SSL Terminator',
    category: 'cisco_misc',
    props: { w: 76, h: 69 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/sslTerminator.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/sslTerminator.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'stb',
    title: 'STB',
    category: 'cisco_misc',
    props: { w: 79, h: 34 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/stb.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/stb.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'stp',
    title: 'STP',
    category: 'cisco_misc',
    props: { w: 75, h: 70 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/stp.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/stp.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'streamer',
    title: 'Streamer',
    category: 'cisco_misc',
    props: { w: 79, h: 55 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/streamer.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/streamer.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'svx',
    title: 'SVX',
    category: 'cisco_misc',
    props: { w: 75, h: 74 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/svx.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/svx.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'telecommuter icon',
    title: 'Telecommuter Icon',
    category: 'cisco_misc',
    props: { w: 76, h: 65 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Misc/telecommuterIcon.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/telecommuterIcon.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'token',
    title: 'Token',
    category: 'cisco_misc',
    props: { w: 80, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/token.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/token.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'tp mcu',
    title: 'TP MCU',
    category: 'cisco_misc',
    props: { w: 65, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/TPMCU.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/TPMCU.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'transpath',
    title: 'Transpath',
    category: 'cisco_misc',
    props: { w: 75, h: 70 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/transpath.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/transpath.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'truck',
    title: 'Truck',
    category: 'cisco_misc',
    props: { w: 76, h: 29 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/truck.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/truck.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'turret',
    title: 'Turret',
    category: 'cisco_misc',
    props: { w: 75, h: 30 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/turret.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/turret.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'tv',
    title: 'TV',
    category: 'cisco_misc',
    props: { w: 75, h: 74 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/tv.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/tv.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ubr910',
    title: 'UBR910',
    category: 'cisco_misc',
    props: { w: 76, h: 37 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/ubr910.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/ubr910.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'umg series',
    title: 'UMG Series',
    category: 'cisco_misc',
    props: { w: 76, h: 37 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/umgSeries.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/umgSeries.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ups',
    title: 'UPS',
    category: 'cisco_misc',
    props: { w: 80, h: 52 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/ups.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/ups.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'vault',
    title: 'Vault',
    category: 'cisco_misc',
    props: { w: 75, h: 52 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/vault.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/vault.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'vip',
    title: 'VIP',
    category: 'cisco_misc',
    props: { w: 57, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/vip.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/vip.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'vpn concentrator',
    title: 'VPN Concentrator',
    category: 'cisco_misc',
    props: { w: 77, h: 70 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Misc/vpnConcentrator.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Misc/vpnConcentrator.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'vsd',
    title: 'VSD',
    category: 'cisco_misc',
    props: { w: 78, h: 64 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/VSD.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/VSD.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'vss',
    title: 'VSS',
    category: 'cisco_misc',
    props: { w: 56, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/VSS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/VSS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'wae',
    title: 'WAE',
    category: 'cisco_misc',
    props: { w: 77, h: 55 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/wae.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/wae.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'wism',
    title: 'WISM',
    category: 'cisco_misc',
    props: { w: 68, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Misc/wism.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Misc/wism.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'cisco_modems_phones',
    text: 'Cisco  Modems and Phones',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'cable modem',
    title: 'Cable Modem',
    category: 'cisco_modems_phones',
    props: { w: 76, h: 37 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ModemsandPhones/cableModem.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ModemsandPhones/cableModem.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cellular phone',
    title: 'Cellular Phone',
    category: 'cisco_modems_phones',
    props: { w: 42, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ModemsandPhones/cellularPhone.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ModemsandPhones/cellularPhone.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'fax',
    title: 'Fax',
    category: 'cisco_modems_phones',
    props: { w: 75, h: 35 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/ModemsandPhones/fax.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ModemsandPhones/fax.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'hootphone',
    title: 'Hootphone',
    category: 'cisco_modems_phones',
    props: { w: 76, h: 56 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ModemsandPhones/hootphone.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ModemsandPhones/hootphone.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cisco ip phone',
    title: 'IP Phone',
    category: 'cisco_modems_phones',
    props: { w: 75, h: 37 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ModemsandPhones/ipPhone.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ModemsandPhones/ipPhone.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mobile access ip phone',
    title: 'Mobile Access Ip Phone',
    category: 'cisco_modems_phones',
    props: { w: 78, h: 70 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ModemsandPhones/mobileAccessIpPhone.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ModemsandPhones/mobileAccessIpPhone.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'modem',
    title: 'Modem',
    category: 'cisco_modems_phones',
    props: { w: 77, h: 28 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ModemsandPhones/modem.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ModemsandPhones/modem.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cisco phone',
    title: 'Phone',
    category: 'cisco_modems_phones',
    props: { w: 76, h: 56 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ModemsandPhones/phone.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ModemsandPhones/phone.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'phone fax',
    title: 'Phone Fax',
    category: 'cisco_modems_phones',
    props: { w: 80, h: 36 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ModemsandPhones/phone_fax.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ModemsandPhones/phone_fax.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'RF modem',
    title: 'RF Modem',
    category: 'cisco_modems_phones',
    props: { w: 80, h: 42 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ModemsandPhones/RFModem.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ModemsandPhones/RFModem.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'softphone',
    title: 'Softphone',
    category: 'cisco_modems_phones',
    props: { w: 78, h: 72 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/ModemsandPhones/softphone.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/ModemsandPhones/softphone.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'cisco_people',
    text: 'Cisco  People',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'androgenous person',
    title: 'Androgenous Person',
    category: 'cisco_people',
    props: { w: 70, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/People/androgenousPerson.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/People/androgenousPerson.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mac woman',
    title: 'Mac Woman',
    category: 'cisco_people',
    props: { w: 50, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/People/macWoman.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/People/macWoman.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'man woman',
    title: 'Man Woman',
    category: 'cisco_people',
    props: { w: 56, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/People/man_woman.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/People/man_woman.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'pc man',
    title: 'PC Man',
    category: 'cisco_people',
    props: { w: 56, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/People/pcMan.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/People/pcMan.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'running man',
    title: 'Running Man',
    category: 'cisco_people',
    props: { w: 70, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/People/runningMan.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/People/runningMan.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sitting woman',
    title: 'Sitting Woman',
    category: 'cisco_people',
    props: { w: 52, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/People/sittingWoman.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/People/sittingWoman.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'standing man',
    title: 'Standing man',
    category: 'cisco_people',
    props: { w: 30, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/People/standingMan.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/People/standingMan.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'standing woman',
    title: 'Standing Woman',
    category: 'cisco_people',
    props: { w: 30, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/People/standingWoman.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/People/standingWoman.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'cisco_routers',
    text: 'Cisco  Routers',
    dataAttributes: [],
  })
  Schema.addShape({
    name: '10700',
    title: '10700',
    category: 'cisco_routers',
    props: { w: 80, h: 54 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Routers/10700.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Routers/10700.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: '3200 mobile access router',
    title: '3200 Mobile Access Router',
    category: 'cisco_routers',
    props: { w: 80, h: 45 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Routers/3200MobileAccessRouter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Routers/3200MobileAccessRouter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'atm router',
    title: 'ATM Router',
    category: 'cisco_routers',
    props: { w: 80, h: 55 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Routers/atmRouter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Routers/atmRouter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'atm tag switch router',
    title: 'ATM Tag Switch Router',
    category: 'cisco_routers',
    props: { w: 64, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Routers/atmTagSwitchRouter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Routers/atmTagSwitchRouter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'broadband router',
    title: 'Broadband Router',
    category: 'cisco_routers',
    props: { w: 80, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Routers/broadbandRouter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Routers/broadbandRouter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'content service router',
    title: 'Content Service Router',
    category: 'cisco_routers',
    props: { w: 80, h: 54 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Routers/contentServiceRouter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Routers/contentServiceRouter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'gigabit switch atm tag router',
    title: 'Gigabit Switch ATM Tag Router',
    category: 'cisco_routers',
    props: { w: 80, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Routers/gigabitSwitchAtmTagRouter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Routers/gigabitSwitchAtmTagRouter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iad router',
    title: 'IAD Router',
    category: 'cisco_routers',
    props: { w: 74, h: 54 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Routers/iadRouter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Routers/iadRouter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ip telephony router',
    title: 'IP Telephony Router',
    category: 'cisco_routers',
    props: { w: 78, h: 68 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Routers/ipTelephonyRouter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Routers/ipTelephonyRouter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iscsi router',
    title: 'ISCSI Router',
    category: 'cisco_routers',
    props: { w: 78, h: 60 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Routers/iscsiRouter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Routers/iscsiRouter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mobile access router',
    title: 'Mobile Access Router',
    category: 'cisco_routers',
    props: { w: 78, h: 46 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Routers/mobileAccessRouter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Routers/mobileAccessRouter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'nce router',
    title: 'NCE Router',
    category: 'cisco_routers',
    props: { w: 80, h: 54 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Routers/NCERouter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Routers/NCERouter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'netflow router',
    title: 'Netflow Router',
    category: 'cisco_routers',
    props: { w: 80, h: 54 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Routers/netflowRouter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Routers/netflowRouter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'optical services router',
    title: 'Optical Services Router',
    category: 'cisco_routers',
    props: { w: 80, h: 70 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Routers/opticalServicesRouter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Routers/opticalServicesRouter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'router with silicon switch',
    title: 'Router With Silicon Switch',
    category: 'cisco_routers',
    props: { w: 80, h: 54 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Routers/routerWithSiliconSwitch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Routers/routerWithSiliconSwitch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cisco router',
    title: 'Router',
    category: 'cisco_routers',
    props: { w: 80, h: 54 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Routers/router.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Routers/router.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'router in building',
    title: 'Router In Building',
    category: 'cisco_routers',
    props: { w: 54, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Routers/routerinBuilding.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Routers/routerinBuilding.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'service router',
    title: 'Service Router',
    category: 'cisco_routers',
    props: { w: 80, h: 54 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Routers/ServiceRouter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Routers/ServiceRouter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'space router',
    title: 'Space Router',
    category: 'cisco_routers',
    props: { w: 78, h: 42 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Routers/SpaceRouter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Routers/SpaceRouter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'storage router',
    title: 'Storage Router',
    category: 'cisco_routers',
    props: { w: 78, h: 60 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Routers/storageRouter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Routers/storageRouter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'tdm router',
    title: 'TDM router',
    category: 'cisco_routers',
    props: { w: 78, h: 54 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Routers/tdmRouter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Routers/tdmRouter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'voice router',
    title: 'Voice Router',
    category: 'cisco_routers',
    props: { w: 80, h: 54 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Routers/voiceRouter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Routers/voiceRouter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'wavelength router',
    title: 'Wavelength Router',
    category: 'cisco_routers',
    props: { w: 80, h: 52 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Routers/wavelengthRouter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Routers/wavelengthRouter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'wireless router',
    title: 'Wireless Router',
    category: 'cisco_routers',
    props: { w: 80, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Routers/wirelessRouter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Routers/wirelessRouter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'cisco_security',
    text: 'Cisco  Security',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'centri firewall',
    title: 'Centri Firewall',
    category: 'cisco_security',
    props: { w: 56, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Security/centriFirewall.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Security/centriFirewall.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cisco security',
    title: 'Cisco Security',
    category: 'cisco_security',
    props: { w: 80, h: 72 },
    lineStyle: { lineWidth: 0 },
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Security/ciscosecurity.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Security/ciscosecurity.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cisco firewall',
    title: 'Cisco Firewall',
    category: 'cisco_security',
    props: { w: 36, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Security/firewall.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Security/firewall.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'gatekeeper',
    title: 'Gatekeeper',
    category: 'cisco_security',
    props: { w: 80, h: 58 },
    lineStyle: { lineWidth: 0 },
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Security/gatekeeper.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Security/gatekeeper.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'guard',
    title: 'Guard',
    category: 'cisco_security',
    props: { w: 78, h: 50 },
    lineStyle: { lineWidth: 0 },
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Security/guard.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Security/guard.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ios firewall',
    title: 'IOS Firewall',
    category: 'cisco_security',
    props: { w: 50, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Security/iosFirewall.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Security/iosFirewall.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'lock',
    title: 'Lock',
    category: 'cisco_security',
    props: { w: 68, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Security/lock.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Security/lock.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'pix firewall',
    title: 'PIX Firewall',
    category: 'cisco_security',
    props: { w: 80, h: 54 },
    lineStyle: { lineWidth: 0 },
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Security/pixFirewall.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Security/pixFirewall.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'router Firewall',
    title: 'Router Firewall',
    category: 'cisco_security',
    props: { w: 78, h: 62 },
    lineStyle: { lineWidth: 0 },
    textBlock: [],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Security/router_firewall.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Security/router_firewall.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'cisco_servers',
    text: 'Cisco  Servers',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'cisco unified presence server',
    title: 'Cisco Unified Presence Server',
    category: 'cisco_servers',
    props: { w: 64, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Servers/ciscoUnifiedPresenceServer.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Servers/ciscoUnifiedPresenceServer.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'communications server',
    title: 'Communications Server',
    category: 'cisco_servers',
    props: { w: 76, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Servers/communicationsServer.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Servers/communicationsServer.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'directory server',
    title: 'Directory Server',
    category: 'cisco_servers',
    props: { w: 78, h: 64 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Servers/directoryServer.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Servers/directoryServer.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'file server',
    title: 'File Server',
    category: 'cisco_servers',
    props: { w: 60, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Servers/fileServer2.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Servers/fileServer2.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'fileserver',
    title: 'Fileserver',
    category: 'cisco_servers',
    props: { w: 56, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Servers/fileserver.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Servers/fileserver.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'host',
    title: 'Host',
    category: 'cisco_servers',
    props: { w: 78, h: 40 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Servers/host.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Servers/host.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'iptv server',
    title: 'Iptv Server',
    category: 'cisco_servers',
    props: { w: 78, h: 52 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Servers/iptvServer.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Servers/iptvServer.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'microwebserver',
    title: 'Microwebserver',
    category: 'cisco_servers',
    props: { w: 80, h: 54 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Servers/microwebserver.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Servers/microwebserver.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'moh server',
    title: 'MOH Server',
    category: 'cisco_servers',
    props: { w: 56, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Servers/mohServer.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Servers/mohServer.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'server with router',
    title: 'Server With Router',
    category: 'cisco_servers',
    props: { w: 48, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Servers/serverWithRouter.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Servers/serverWithRouter.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sip proxy werver',
    title: 'SIP Proxy Werver',
    category: 'cisco_servers',
    props: { w: 52, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Servers/sipProxyWerver.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Servers/sipProxyWerver.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'software based server',
    title: 'Software Based Server',
    category: 'cisco_servers',
    props: { w: 68, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Servers/softwareBasedServer.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Servers/softwareBasedServer.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'standard host',
    title: 'Standard Host',
    category: 'cisco_servers',
    props: { w: 58, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Servers/standardHost.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Servers/standardHost.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'storage server',
    title: 'Storage Server',
    category: 'cisco_servers',
    props: { w: 54, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Servers/storageServer.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Servers/storageServer.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'unity server',
    title: 'Unity Server',
    category: 'cisco_servers',
    props: { w: 58, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Servers/unityServer.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Servers/unityServer.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'voice commserver',
    title: 'Voice Commserver',
    category: 'cisco_servers',
    props: { w: 78, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Servers/voiceCommserver.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Servers/voiceCommserver.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'www server',
    title: 'WWW Sserver',
    category: 'cisco_servers',
    props: { w: 76, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Servers/wwwServer.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Servers/wwwServer.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'cisco_storage',
    text: 'Cisco  Storage',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'cisco file engine',
    title: 'Cisco File Engine',
    category: 'cisco_storage',
    props: { w: 80, h: 58 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Storage/ciscoFileEngine.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Storage/ciscoFileEngine.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cisco cloud',
    title: 'Cisco Cloud',
    category: 'cisco_storage',
    props: { w: 80, h: 48 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Storage/cloud.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Storage/cloud.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'diskette',
    title: 'Diskette',
    category: 'cisco_storage',
    props: { w: 78, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Storage/diskette.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Storage/diskette.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'fc storage',
    title: 'FC Storage',
    category: 'cisco_storage',
    props: { w: 78, h: 46 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Storage/fcStorage.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Storage/fcStorage.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'fibre channel disk subsystem',
    title: 'Fibre Channel Disk Subsystem',
    category: 'cisco_storage',
    props: { w: 56, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Storage/fibreChannelDiskSubsystem.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Storage/fibreChannelDiskSubsystem.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'file cabinet',
    title: 'File Cabinet',
    category: 'cisco_storage',
    props: { w: 64, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Storage/fileCabinet.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Storage/fileCabinet.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'relational database',
    title: 'Relational Database',
    category: 'cisco_storage',
    props: { w: 78, h: 62 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Storage/relationalDatabase.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Storage/relationalDatabase.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'tape array',
    title: 'Tape Array',
    category: 'cisco_storage',
    props: { w: 56, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Storage/tapeArray.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Storage/tapeArray.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'web cluster',
    title: 'WEB Cluster',
    category: 'cisco_storage',
    props: { w: 78, h: 46 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Storage/webCluster.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Storage/webCluster.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'cisco_switches',
    text: 'Cisco  Switches',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'atm fast gigabit etherswitch',
    title: 'ATM Fast Gigabit Etherswitch',
    category: 'cisco_switches',
    props: { w: 78, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Switches/atmFastGigabitEtherswitch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/atmFastGigabitEtherswitch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'atm switch',
    title: 'ATM Switch',
    category: 'cisco_switches',
    props: { w: 76, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Switches/atmSwitch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/atmSwitch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'class 4 5 switch',
    title: 'Class 4 5 Switch',
    category: 'cisco_switches',
    props: { w: 76, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Switches/class4_5Switch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/class4_5Switch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'content service switch 1100',
    title: 'Content Service Switch 1100',
    category: 'cisco_switches',
    props: { w: 78, h: 54 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Switches/contentServiceSwitch1100.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/contentServiceSwitch1100.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'content switch',
    title: 'Content Switch',
    category: 'cisco_switches',
    props: { w: 60, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Switches/contentSwitch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/contentSwitch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'fibre channel fabric switch',
    title: 'Fibre Channel Fabric Switch',
    category: 'cisco_switches',
    props: { w: 80, h: 60 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Switches/fibreChannelFabricSwitch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/fibreChannelFabricSwitch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'generic softswitch',
    title: 'Generic Softswitch',
    category: 'cisco_switches',
    props: { w: 52, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Switches/genericSoftswitch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/genericSoftswitch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'intelliswitch stack',
    title: 'Intelliswitch Stack',
    category: 'cisco_switches',
    props: { w: 72, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Switches/intelliswitchStack.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/intelliswitchStack.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'isdn switch',
    title: 'ISDN Switch',
    category: 'cisco_switches',
    props: { w: 76, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Switches/isdnSwitch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/isdnSwitch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'layer 2 remote switch',
    title: 'Layer 2 Remote Switch',
    category: 'cisco_switches',
    props: { w: 78, h: 40 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Switches/layer2RemoteSwitch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/layer2RemoteSwitch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'layer 3 switch',
    title: 'Layer 3 Switch',
    category: 'cisco_switches',
    props: { w: 78, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Switches/layer3Switch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/layer3Switch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mgx 8000 multiservice switch',
    title: 'MGX 8000 Multiservice Switch',
    category: 'cisco_switches',
    props: { w: 78, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Switches/mgx8000MultiserviceSwitch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/mgx8000MultiserviceSwitch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mulitswitch device',
    title: 'Mulitswitch Device',
    category: 'cisco_switches',
    props: { w: 78, h: 50 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Switches/mulitswitchDevice.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/mulitswitchDevice.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'multi-fabric server switch',
    title: 'Multi-Fabric Server Switch',
    category: 'cisco_switches',
    props: { w: 56, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Switches/multi-fabricServerSwitch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/multi-fabricServerSwitch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'multilayer remote switch',
    title: 'Multilayer Remote Switch',
    category: 'cisco_switches',
    props: { w: 58, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Switches/multilayerRemoteSwitch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/multilayerRemoteSwitch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'pbx switch',
    title: 'PBX Switch',
    category: 'cisco_switches',
    props: { w: 80, h: 74 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Switches/pbxSwitch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/pbxSwitch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'programmable switch',
    title: 'Programmable Switch',
    category: 'cisco_switches',
    props: { w: 76, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Switches/programmableSwitch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/programmableSwitch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'server switch',
    title: 'Server Switch',
    category: 'cisco_switches',
    props: { w: 76, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Switches/serverSwitch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/serverSwitch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'simulitlayer switch',
    title: 'Simulitlayer Switch',
    category: 'cisco_switches',
    props: { w: 76, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Switches/simulitlayerSwitch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/simulitlayerSwitch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'softswitch pgw mgc',
    title: 'Softswitch PGW MGC',
    category: 'cisco_switches',
    props: { w: 68, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Switches/softswitchPgwMgc.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/softswitchPgwMgc.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'virtual layer switch',
    title: 'Virtual Layer Switch',
    category: 'cisco_switches',
    props: { w: 58, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Switches/virtualLayerSwitch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/virtualLayerSwitch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'voice atm switch',
    title: 'Voice ATM Switch',
    category: 'cisco_switches',
    props: { w: 76, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Switches/voiceAtmSwitch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/voiceAtmSwitch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'voice switch',
    title: 'Voice switch',
    category: 'cisco_switches',
    props: { w: 78, h: 42 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Switches/voiceSwitch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/voiceSwitch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'workgroup switch',
    title: 'Workgroup Switch',
    category: 'cisco_switches',
    props: { w: 78, h: 40 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Switches/workgroupSwitch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Switches/workgroupSwitch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({
    name: 'cisco_wireless',
    text: 'Cisco Wireless',
    dataAttributes: [],
  })
  Schema.addShape({
    name: 'cisco antenna',
    title: 'Cisco Antenna',
    category: 'cisco_wireless',
    props: { w: 66, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Wireless/antenna.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Wireless/antenna.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'ground terminal',
    title: 'Ground Terminal',
    category: 'cisco_wireless',
    props: { w: 66, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Wireless/GroundTerminal.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Wireless/GroundTerminal.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'radio tower',
    title: 'Radio Tower',
    category: 'cisco_wireless',
    props: { w: 30, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Wireless/radioTower.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Wireless/radioTower.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sattelite dish',
    title: 'Sattelite Dish',
    category: 'cisco_wireless',
    props: { w: 60, h: 80 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Wireless/satteliteDish.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Wireless/satteliteDish.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sattelite',
    title: 'Sattelite',
    category: 'cisco_wireless',
    props: { w: 80, h: 28 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Wireless/sattelite.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Wireless/sattelite.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'wi-fi tag',
    title: 'WI-FI Tag',
    category: 'cisco_wireless',
    props: { w: 80, h: 70 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Wireless/wi-fiTag.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Wireless/wi-fiTag.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'wireless bridge',
    title: 'Wireless Bridge',
    category: 'cisco_wireless',
    props: { w: 78, h: 64 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Wireless/wirelessBridge.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Wireless/wirelessBridge.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'wireless location appliance',
    title: 'Wireless Location Appliance',
    category: 'cisco_wireless',
    props: { w: 78, h: 44 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Wireless/wirelessLocationAppliance.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Wireless/wirelessLocationAppliance.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'wireless transport',
    title: 'Wireless Transport',
    category: 'cisco_wireless',
    props: { w: 78, h: 56 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Wireless/wirelessTransport.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Wireless/wirelessTransport.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'wireless',
    title: 'Wireless',
    category: 'cisco_wireless',
    props: { w: 44, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_cisco/Wireless/wireless.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_cisco/Wireless/wireless.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'wlan controller',
    title: 'Wlan Controller',
    category: 'cisco_wireless',
    props: { w: 80, h: 46 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_cisco/Wireless/wlanController.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_cisco/Wireless/wlanController.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({ name: 'azure', text: 'Azure', dataAttributes: [] })
  Schema.addShape({
    name: 'add ons',
    title: 'Add Ons',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/Add-Ons.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/Add-Ons.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'alert',
    title: 'Alert',
    category: 'azure',
    props: { w: 78, h: 67 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/Alert.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/Alert.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'api management',
    title: 'API Management',
    category: 'azure',
    props: { w: 76, h: 65 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/APIManagement.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/APIManagement.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'automation',
    title: 'Automation',
    category: 'azure',
    props: { w: 75, h: 68 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/Automation.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/Automation.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'autoscale',
    title: 'Autoscale',
    category: 'azure',
    props: { w: 76, h: 48 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/Autoscale.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/Autoscale.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'active directory',
    title: 'Active Directory',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_azure/AzureActiveDirectory_AAD.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_azure/AzureActiveDirectory_AAD.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'access control services',
    title: 'Access Control Services',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_azure/AzureActiveDirectoryAccessControlServices_ACS.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_azure/AzureActiveDirectoryAccessControlServices_ACS.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'load balancer',
    title: 'Load Balancer',
    category: 'azure',
    props: { w: 75, h: 50 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/AzureLoadBalancer.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/AzureLoadBalancer.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'marketplace',
    title: 'Marketplace',
    category: 'azure',
    props: { w: 61, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/AzureMarketplace.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/AzureMarketplace.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sdk',
    title: 'SDK',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/AzureSDK.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/AzureSDK.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'subscription',
    title: 'Subscription',
    category: 'azure',
    props: { w: 77, h: 57 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/AzureSubscription.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/AzureSubscription.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'backup service',
    title: 'Backup Service',
    category: 'azure',
    props: { w: 75, h: 66 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/BackupService.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/BackupService.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'batch services',
    title: 'Batch Services',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/BatchServices.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/BatchServices.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'bitbucket',
    title: 'BitBucket',
    category: 'azure',
    props: { w: 66, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_azure/BitBucket_CodeSource.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_azure/BitBucket_CodeSource.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'biztalk services',
    title: 'BizTalk Services',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/BizTalkServices.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/BizTalkServices.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cache',
    title: 'Cache',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/Cache.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/Cache.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cdn',
    title: 'CDN',
    category: 'azure',
    props: { w: 75, h: 51 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/CDN.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/CDN.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'certificate',
    title: 'Certificate',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/Certificate.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/Certificate.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cloud service',
    title: 'Cloud Service',
    category: 'azure',
    props: { w: 75, h: 63 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/CloudService.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/CloudService.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'azure cloud',
    title: 'Azure Cloud',
    category: 'azure',
    props: { w: 76, h: 47 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/Cloud.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/Cloud.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'code file',
    title: 'Code File',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/CodeFile.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/CodeFile.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'codeplex',
    title: 'Codeplex',
    category: 'azure',
    props: { w: 78, h: 59 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/Codeplex_CodeSource.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_azure/Codeplex_CodeSource.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'computer',
    title: 'Computer',
    category: 'azure',
    props: { w: 80, h: 74 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/Computer.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/Computer.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cloud service configuration file',
    title: 'Cloud Service Configuration File',
    category: 'azure',
    props: { w: 55, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_azure/CSCFG_CloudServiceConfiguration_File.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_azure/CSCFG_CloudServiceConfiguration_File.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cloud service definition file',
    title: 'Cloud Service Definition File',
    category: 'azure',
    props: { w: 57, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_azure/CSDEF_CloudServiceDefinition_File.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_azure/CSDEF_CloudServiceDefinition_File.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'cloud service package',
    title: 'Cloud Service Package',
    category: 'azure',
    props: { w: 47, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_azure/CSPKG_CloudServicePackage.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_azure/CSPKG_CloudServicePackage.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'database generic',
    title: 'Database Generic',
    category: 'azure',
    props: { w: 58, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/DatabaseGeneric.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/DatabaseGeneric.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'dropbox',
    title: 'Dropbox',
    category: 'azure',
    props: { w: 75, h: 70 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/Dropbox_CodeSource.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_azure/Dropbox_CodeSource.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'enterprise',
    title: 'Enterprise',
    category: 'azure',
    props: { w: 47, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/Enterprise.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/Enterprise.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'event hub',
    title: 'Event Hub',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/EventHub.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/EventHub.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'express route',
    title: 'Express Route',
    category: 'azure',
    props: { w: 75, h: 46 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/ExpressRoute.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/ExpressRoute.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'file (black)',
    title: 'File (Black)',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/File_Black.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/File_Black.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'file',
    title: 'File',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/File.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/File.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'git deployment',
    title: 'Git Deployment',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/GitDeployment.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/GitDeployment.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'github',
    title: 'GitHub',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/GitHub_CodeSource.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/GitHub_CodeSource.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'hdinsight old',
    title: 'HDInsight OLD',
    category: 'azure',
    props: { w: 76, h: 58 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/HDInsightOLD.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/HDInsightOLD.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'HDInsight',
    title: 'HDInsight',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/HDInsight.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/HDInsight.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'health monitoring',
    title: 'Health Monitoring',
    category: 'azure',
    props: { w: 75, h: 64 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/HealthMonitoring.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/HealthMonitoring.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'healthy',
    title: 'Healthy',
    category: 'azure',
    props: { w: 75, h: 64 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/Healthy.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/Healthy.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'laptop',
    title: 'Laptop',
    category: 'azure',
    props: { w: 76, h: 46 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/Laptop.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/Laptop.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'load balancer (generic)',
    title: 'Load Balancer (Generic)',
    category: 'azure',
    props: { w: 57, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_azure/LoadBalancer_Generic.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_azure/LoadBalancer_Generic.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'azure machine learning',
    title: 'Azure Machine Learning',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/MachineLearning.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/MachineLearning.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'management service',
    title: 'Management Service',
    category: 'azure',
    props: { w: 76, h: 57 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/ManagementService.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/ManagementService.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'media services',
    title: 'Media Services',
    category: 'azure',
    props: { w: 69, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/MediaServices.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/MediaServices.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'azure message',
    title: 'Azure Message',
    category: 'azure',
    props: { w: 75, h: 58 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/Message.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/Message.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'microsoft azure',
    title: 'Microsoft Azure',
    category: 'azure',
    props: { w: 77, h: 48 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/MicrosoftAzure.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/MicrosoftAzure.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mobile services',
    title: 'Mobile Services',
    category: 'azure',
    props: { w: 52, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/MobileServices.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/MobileServices.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mobile',
    title: 'Mobile',
    category: 'azure',
    props: { w: 51, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/Mobile.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/Mobile.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'multi factor authentication',
    title: 'Multi factor Authentication',
    category: 'azure',
    props: { w: 38, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_azure/Multi-factorAuthentication_MFA.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_azure/Multi-factorAuthentication_MFA.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'mysql database',
    title: 'MySQL Database',
    category: 'azure',
    props: { w: 57, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/MySQLDatabase.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/MySQLDatabase.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'network',
    title: 'Network',
    category: 'azure',
    props: { w: 76, h: 41 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/Network.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/Network.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'notification hub',
    title: 'Notification Hub',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/NotificationHub.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/NotificationHub.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'notification topic',
    title: 'Notification Topic',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/NotificationTopic.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/NotificationTopic.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'operating system image',
    title: 'Operating System Image',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_azure/OperatingSystemImage.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_azure/OperatingSystemImage.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'operational insights',
    title: 'Operational Insights',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/OperationalInsights.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_azure/OperationalInsights.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'powershell file',
    title: 'PowerShell File',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/PowerShellFile.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/PowerShellFile.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'queue',
    title: 'Queue',
    category: 'azure',
    props: { w: 75, h: 23 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/Queue.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/Queue.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'rdp (remoteing file)',
    title: 'RDP (Remoteing File)',
    category: 'azure',
    props: { w: 52, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/RDP_RemoteingFile.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/RDP_RemoteingFile.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'recovery services',
    title: 'Recovery Services',
    category: 'azure',
    props: { w: 77, h: 66 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/RecoveryServices.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/RecoveryServices.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'remoteapp',
    title: 'RemoteApp',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/RemoteApp.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/RemoteApp.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'scheduler',
    title: 'Scheduler',
    category: 'azure',
    props: { w: 61, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/Scheduler.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/Scheduler.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'script file',
    title: 'Script File',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/ScriptFIle.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/ScriptFIle.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'server rack',
    title: 'Server Rack',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/ServerRack.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/ServerRack.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'azure server',
    title: 'Server',
    category: 'azure',
    props: { w: 76, h: 24 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/Server.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/Server.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'service bus queues',
    title: 'Service Bus Queues',
    category: 'azure',
    props: { w: 65, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/ServiceBusQueues.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/ServiceBusQueues.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'service bus Relay',
    title: 'Service Bus Relay',
    category: 'azure',
    props: { w: 57, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/ServiceBusRelay.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/ServiceBusRelay.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'service bus topics and subscriptions',
    title: 'Service Bus Topics and Subscriptions',
    category: 'azure',
    props: { w: 66, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_azure/ServiceBusTopicsandSubscriptions.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_azure/ServiceBusTopicsandSubscriptions.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'service bus',
    title: 'Service Bus',
    category: 'azure',
    props: { w: 69, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/ServiceBus.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/ServiceBus.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'service endpoint',
    title: 'Service Endpoint',
    category: 'azure',
    props: { w: 77, h: 28 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/ServiceEndpoint.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/ServiceEndpoint.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'service fabric',
    title: 'Service Fabric',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/ServiceFabric.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/ServiceFabric.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sql azure',
    title: 'SQL Azure',
    category: 'azure',
    props: { w: 57, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/SQLAzure.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/SQLAzure.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sql database (Generic)',
    title: 'SQL Database (Generic)',
    category: 'azure',
    props: { w: 57, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/SQLDatabase_Generic.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_azure/SQLDatabase_Generic.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sql database (sql azure)',
    title: 'SQL Database (SQL Azure)',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_azure/SQLDatabase_SQLAzure.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_azure/SQLDatabase_SQLAzure.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sql datasync',
    title: 'SQL DataSync',
    category: 'azure',
    props: { w: 59, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/SQLDataSync.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/SQLDataSync.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'sql reporting',
    title: 'SQL Reporting',
    category: 'azure',
    props: { w: 60, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/SQLReporting.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/SQLReporting.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'startup file',
    title: 'Startup File',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/StartupFile.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/StartupFile.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'storage blob',
    title: 'Storage Blob',
    category: 'azure',
    props: { w: 75, h: 67 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/StorageBlob.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/StorageBlob.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'storage queue',
    title: 'Storage Queue',
    category: 'azure',
    props: { w: 75, h: 67 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/StorageQueue.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/StorageQueue.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'storage table',
    title: 'Storage Table',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/StorageTable.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/StorageTable.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'storsimple',
    title: 'StorSimple',
    category: 'azure',
    props: { w: 78, h: 70 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/StorSimple.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/StorSimple.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'stream analytics',
    title: 'Stream Analytics',
    category: 'azure',
    props: { w: 76, h: 59 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/StreamAnalytics.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/StreamAnalytics.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'table storage',
    title: 'Table Storage',
    category: 'azure',
    props: { w: 76, h: 63 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/TableStorage.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/TableStorage.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'tablet',
    title: 'Tablet',
    category: 'azure',
    props: { w: 75, h: 55 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/Tablet.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/Tablet.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'traffic manager',
    title: 'Traffic Manager',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/TrafficManager.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/TrafficManager.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'unidentified code object',
    title: 'Unidentified Code Object',
    category: 'azure',
    props: { w: 75, h: 66 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_azure/UnidentifiedCodeObject_UFO.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_azure/UnidentifiedCodeObject_UFO.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'User',
    title: 'User',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/User.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/User.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'vhd data disk',
    title: 'VHD Data Disk',
    category: 'azure',
    props: { w: 57, h: 78 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/VHDDataDisk.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/VHDDataDisk.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'vhd',
    title: 'VHD',
    category: 'azure',
    props: { w: 61, h: 77 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/VHD.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/VHD.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'virtual machine elasticSearch',
    title: 'Virtual Machine ElasticSearch',
    category: 'azure',
    props: { w: 75, h: 68 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_azure/VirtualMachine-ElasticSearch.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_azure/VirtualMachine-ElasticSearch.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'virtual machine',
    title: 'Virtual Machine',
    category: 'azure',
    props: { w: 75, h: 60 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/VirtualMachine.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/VirtualMachine.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'virtual machines',
    title: 'Virtual Machines',
    category: 'azure',
    props: { w: 75, h: 68 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/VirtualMachines.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/VirtualMachines.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'visual studio',
    title: 'Visual Studio',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/VisualStudio.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/VisualStudio.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'wad (diagnostics) config (sdk 2.5)',
    title: 'WAD (Diagnostics) Config (SDK 2.5)',
    category: 'azure',
    props: { w: 55, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_azure/WAD_Diagnostics_Config_SDK2.5.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_azure/WAD_Diagnostics_Config_SDK2.5.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'wad (diagnostics) config (sdk 2.6+)',
    title: 'WAD (Diagnostics) Config (SDK 2.6+)',
    category: 'azure',
    props: { w: 56, h: 76 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId:
            '/assets/images/designer/network_azure/WAD_Diagnostics_Config_SDK2.6.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId:
              '/assets/images/designer/network_azure/WAD_Diagnostics_Config_SDK2.6.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'web role',
    title: 'Web Role',
    category: 'azure',
    props: { w: 75, h: 61 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/WebRole.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/WebRole.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'web roles',
    title: 'Web Roles',
    category: 'azure',
    props: { w: 77, h: 64 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/WebRoles.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/WebRoles.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'web sites',
    title: 'Web Sites',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/WebSites.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/WebSites.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'website (generic)',
    title: 'Website (Generic)',
    category: 'azure',
    props: { w: 78, h: 68 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/Website_Generic.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/Website_Generic.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'windows azure',
    title: 'Windows Azure',
    category: 'azure',
    props: { w: 75, h: 75 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/WindowsAzure.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/WindowsAzure.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'worker role',
    title: 'Worker Role',
    category: 'azure',
    props: { w: 75, h: 61 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/WorkerRole.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/WorkerRole.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addShape({
    name: 'worker roles',
    title: 'Worker Roles',
    category: 'azure',
    props: { w: 77, h: 64 },
    lineStyle: { lineWidth: 0 },
    textBlock: [{ position: { x: '-20', y: 'h', w: 'w+40', h: '30' } }],
    path: [
      {
        fillStyle: {
          type: 'image',
          fileId: '/assets/images/designer/network_azure/WorkerRoles.svg',
          display: 'stretch',
        },
        lineStyle: { lineWidth: 0 },
        actions: { ref: 'rectangle' },
      },
    ],
    drawIcon: function (b, c) {
      var d = 0
      var a = 0
      return [
        {
          fillStyle: {
            type: 'image',
            fileId: '/assets/images/designer/network_azure/WorkerRoles.svg',
            imageW: 30,
            imageH: 30,
            display: 'stretch',
          },
          lineStyle: { lineWidth: 0 },
          actions: [
            { action: 'move', x: a, y: d },
            { action: 'line', x: b, y: d },
            { action: 'line', x: b, y: c },
            { action: 'line', x: a, y: c },
            { action: 'close' },
          ],
        },
      ]
    },
  })
  Schema.addCategory({ name: 'standard', text: 'Standard', dataAttributes: [] })
  
  